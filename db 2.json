{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Assembly.md","hash":"3d6723a5756fe516b4963b95a37f557a3f238c23","modified":1575331931000},{"_id":"source/.DS_Store","hash":"8192b3bc0774c0282242ac0904d7f92ebc1ef624","modified":1625124053377},{"_id":"source/_posts/CMTE-s-note.md","hash":"3ba81655799b8a5ed727826c378a01fdabadc1b5","modified":1575340939000},{"_id":"source/_posts/Arduino.md","hash":"ced4652c8541ad6a5c7f2e051442be8816847a25","modified":1575331931000},{"_id":"source/_posts/MatLab.md","hash":"9b347ba5903c41ecf239519a919cbe3f6c646517","modified":1575331931000},{"_id":"source/_posts/每日总结.md","hash":"973efda639dcc3118690acfe093f26228e97e1a8","modified":1575331931000},{"_id":"source/_posts/PPA.md","hash":"951646854367a769e00d55c1bc1fcd0561ebfb86","modified":1575332054000},{"_id":"source/_posts/FC.md","hash":"56fa66a144bdf9c63aa413b41ed523dc1ee38c33","modified":1625124334397},{"_id":"source/_posts/CS.md","hash":"f67218d78163afeefd86a6e7c0e8d697a4b9f73b","modified":1575331931000},{"_id":"source/about/index.md","hash":"5ccd0e6beece9e0a5c063a3a1cd90469f3a48d34","modified":1575331931000},{"_id":"source/tags/index.md","hash":"2dc8dad536c299dd2fb19d0dd8f73de1722eb26e","modified":1575331931000},{"_id":"source/categories/index.md","hash":"b6c997897d4d560a88e26efee1b7510f0ce51823","modified":1575331931000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575331931000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575331931000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575331931000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575331931000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575331931000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575331931000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575331931000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1575331931000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1575331931000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1575331931000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1575331931000},{"_id":"themes/next/.DS_Store","hash":"a16622b206f350d9ed7f099ba6e8274429799967","modified":1625124053371},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1575331931000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1575331931000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1575331931000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1575331931000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1575331931000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1575331931000},{"_id":"themes/next/_config.yml","hash":"9b1b0b7a5fafd6499c41fc8bfb4be555943f845e","modified":1575331931000},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1575331931000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1575331931000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1575331931000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1575331931000},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1575331931000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1575331931000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1575331931000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1575331931000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1575331931000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1575331931000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1575331931000},{"_id":"themes/next/languages/en.yml","hash":"0f8dd0140b1a2dfd13aed912df39b552b2984844","modified":1575331931000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1575331931000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1575331931000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1575331931000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1575331931000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1575331931000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1575331931000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1575331931000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1575331931000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1575331931000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1575331931000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1575331931000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1575331931000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1575331931000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1575331931000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1575331931000},{"_id":"themes/next/layout/_layout.swig","hash":"7501a0f010e689ab3637e11e25f0e22bf2dd7d2d","modified":1575331931000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1575331931000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1575331931000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1575331931000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1575331931000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1575331931000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1575331931000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1575331931000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1575331931000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1575331931000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1575331931000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1575331931000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1575331931000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1575331931000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1575331931000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1575331931000},{"_id":"themes/next/layout/_macro/post.swig","hash":"00ca04166bf1d867c0df9e87f47a29faf916eac8","modified":1575331931000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1575331931000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1575331931000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1575331931000},{"_id":"themes/next/layout/_partials/head.swig","hash":"b99b7ff1b949266333ae36f8f02ad55a13c5ff5b","modified":1575331931000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1575331931000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1575331931000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1575331931000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c0f5a1d33aea43ffa59f382cb3c5eb8471a693d9","modified":1575331931000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1575331931000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1575331931000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1575331931000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1575331931000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1575331931000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1575331931000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1575331931000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1575331931000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1575331931000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1575331931000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1575331931000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1575331931000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1575331931000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1575331931000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1575331931000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1575331931000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1575331931000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1575331931000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1575331931000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1575331931000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1575331931000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1575331931000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1575331931000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1575331931000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1575331931000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1575331931000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1575331931000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1575331931000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1575331931000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1575331931000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1575331931000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1575331931000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1575331931000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1575331931000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1575331931000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1575331931000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1575331931000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1575331931000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1575331931000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1575331931000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1575331931000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1575331931000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1575331931000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1575331931000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1575331931000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1575331931000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1575331931000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1575331931000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1575331931000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1575331931000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1575331931000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1575331931000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1575331931000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1575331931000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1575331931000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1575331931000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1575331931000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1575331931000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1575331931000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1575331931000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1575331931000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1575331931000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1575331931000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1575331931000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1575331931000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1575331931000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"c3ba0c8a05f7d8c0f45c28a6ce24e5ab59d73e52","modified":1575331931000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1575331931000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1575331931000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1575331931000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1575331931000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1575331931000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1575331931000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1575331931000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1575331931000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1575331931000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1575331931000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1575331931000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1575331931000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1575331931000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1575331931000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1575331931000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1575331931000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1575331931000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1575331931000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1575331931000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1575331931000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1575331931000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1575331931000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1575331931000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1575331931000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1575331931000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1575331931000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1575331931000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1575331931000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1575331931000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1575331931000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1575331931000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1575331931000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1575331931000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1575331931000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1575331931000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1575331931000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1575331931000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1575331931000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1575331931000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1575331931000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1575331931000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1575331931000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1575331931000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1575331931000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1575331931000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"2e85dae92375ef0f28c302371dcbf6a09fddb9d2","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"08bc69fd163b64e304c5bfdf2463f3cd63bce3d0","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1575331931000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1575331931000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1575331931000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1575331931000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1575331931000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1575331931000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1575331931000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1575331931000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1575331931000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1575331931000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1575331931000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1575331931000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1575331931000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1575331931000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1575331931000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1575331931000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"983b92877c4a4a6910dcbb8fc86271588ceeb143","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"d5e46dca7c0773d14012faac3c0c642558ad8a49","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1575331931000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1575331931000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1575331931000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1575331931000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1575331931000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1575331931000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1575331931000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1575331931000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1575331931000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1575331931000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1575331931000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1575331931000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1575331931000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1575331931000},{"_id":"public/atom.xml","hash":"dc81428cf2a1c28947fa33040a2bc198febe5bae","modified":1625129998988},{"_id":"public/search.xml","hash":"1c657c22ae0a424428fec219b447928965ecd4be","modified":1625129998988},{"_id":"public/categories/index.html","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1625129998988},{"_id":"public/tags/index.html","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1625129998988},{"_id":"public/about/index.html","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1625129998988},{"_id":"public/2019/11/25/mei-ri-zong-jie/index.html","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1625129998988},{"_id":"public/2019/11/13/fc/index.html","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1625129998988},{"_id":"public/2019/11/03/ppa/index.html","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1625129998988},{"_id":"public/2019/11/01/arduino/index.html","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1625129998988},{"_id":"public/2019/10/31/assembly/index.html","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1625129998988},{"_id":"public/2019/10/31/cs/index.html","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1625129998988},{"_id":"public/2019/10/30/matlab/index.html","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1625129998988},{"_id":"public/2019/10/30/cmte-s-note/index.html","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1625129998988},{"_id":"public/archives/index.html","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1625129998988},{"_id":"public/archives/2019/index.html","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1625129998988},{"_id":"public/archives/2019/10/index.html","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1625129998988},{"_id":"public/archives/2019/11/index.html","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1625129998988},{"_id":"public/categories/2019/index.html","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1625129998988},{"_id":"public/categories/2019/KCL/index.html","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1625129998988},{"_id":"public/categories/2019/life/index.html","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1625129998988},{"_id":"public/categories/2019/KCL/FC/index.html","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1625129998988},{"_id":"public/categories/2019/KCL/Arduino/index.html","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1625129998988},{"_id":"public/categories/2019/KCL/CS/index.html","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1625129998988},{"_id":"public/categories/2019/KCL/MatLab/index.html","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1625129998988},{"_id":"public/categories/2019/KCL/CMTE/index.html","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1625129998988},{"_id":"public/categories/2019/KCL/PPA/index.html","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1625129998988},{"_id":"public/categories/2019/life/everynight/index.html","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1625129998988},{"_id":"public/index.html","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1625129998988},{"_id":"public/tags/单片机/index.html","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1625129998988},{"_id":"public/tags/空间向量/index.html","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1625129998988},{"_id":"public/tags/CS/index.html","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1625129998988},{"_id":"public/tags/MatLab/index.html","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1625129998988},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1625129998988},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1625129998988},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1625129998988},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1625129998988},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1625129998988},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1625129998988},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1625129998988},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1625129998988},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1625129998988},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1625129998988},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1625129998988},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1625129998988},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1625129998988},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1625129998988},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1625129998988},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1625129998988},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1625129998988},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1625129998988},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1625129998988},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1625129998988},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1625129998988},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1625129998988},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1625129998988},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1625129998988},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1625129998988},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1625129998988},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1625129998988},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1625129998988},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1625129998988},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1625129998988},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1625129998988},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1625129998988},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1625129998988},{"_id":"public/css/prism-tomorrow.css","hash":"3b99487dfc9b4e51e9105a93743b92a761840e34","modified":1625129998988},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1625129998988},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1625129998988},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1625129998988},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1625129998988},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1625129998988},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1625129998988},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1625129998988},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1625129998988},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1625129998988},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1625129998988},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1625129998988},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1625129998988},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1625129998988},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1625129998988},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1625129998988},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1625129998988},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1625129998988},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1625129998988},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1625129998988},{"_id":"public/lib/fastclick/README.html","hash":"c88ed76304392b9e77b266fcbbc05f443c5df133","modified":1625129998988},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1625129998988},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1625129998988},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"bc6cf8951a99074bdc6ec9172f03fb7c0e412729","modified":1625129998988},{"_id":"public/lib/jquery_lazyload/README.html","hash":"96a5c2cc00de5b338ae972c1e8de879d2d919608","modified":1625129998988},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1625129998988},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1625129998988},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1625129998988},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1625129998988},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1625129998988},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1625129998988},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1625129998988},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1625129998988},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1625129998988},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1625129998988},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1625129998988},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1625129998988},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1625129998988},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1625129998988},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1625129998988},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1625129998988},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1625129998988},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1625129998988},{"_id":"public/css/main.css","hash":"3d2835069796bd6cd5fd374569d2f97b29dc60da","modified":1625129998988},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1625129998988},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1625129998988},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1625129998988},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1625129998988},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1625129998988},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1625129998988},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1625129998988},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1625129998988},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1625129998988},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1625129998988},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1625129998988},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1625129998988},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1625129998988},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1625129998988},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1625129998988},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1625129998988},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1625129998988},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1625129998988},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1625129998988},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1625129998988},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1625129998988}],"Category":[{"name":"2019","_id":"ckqkofx2s00045jwlenrk8cpl"},{"name":"KCL","parent":"ckqkofx2s00045jwlenrk8cpl","_id":"ckqkofx37000j5jwl6lhja8ij"},{"name":"life","parent":"ckqkofx2s00045jwlenrk8cpl","_id":"ckqkofx3b000u5jwl9uz0hmha"},{"name":"FC","parent":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3c000w5jwlfayedr88"},{"name":"Arduino","parent":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3c000x5jwl2xzqdz15"},{"name":"CS","parent":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3d000z5jwl90eubpyi"},{"name":"MatLab","parent":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3d00125jwl6pnmhuy9"},{"name":"CMTE","parent":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3e00155jwl663eczjw"},{"name":"PPA","parent":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3e00185jwlf91n04qt"},{"name":"everynight","parent":"ckqkofx3b000u5jwl9uz0hmha","_id":"ckqkofx3f001c5jwlcix085v5"}],"Data":[],"Page":[{"title":"categories","date":"2019-10-27T20:33:33.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-10-28 04:33:33\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2019-10-27T20:33:33.000Z","path":"categories/index.html","comments":1,"_id":"ckqkofx2i00005jwldpcfgmzg","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-10-29T07:27:11.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-10-29 15:27:11\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2019-10-29T07:27:11.000Z","path":"tags/index.html","comments":1,"_id":"ckqkofx2p00025jwl7lx6ebte","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2019-10-27T20:36:06.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-10-28 04:36:06\ntype: \"about\"\nlayout: \"about\"\n\n---\n","updated":"2019-10-27T20:36:06.000Z","path":"about/index.html","comments":1,"_id":"ckqkofx2x00065jwl4ro429my","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Arduino与Assembly","date":"2019-11-01T08:22:08.000Z","password":"password","top":1000,"_content":"\n\n\n## Lab--汇编语言初识&语法结构\n<!--more-->\n### 第一个程序的理解\n 1. .equ SREG,0x3f     :treat the label SREG as 0x3f\n 2. .org 0     :the start address\n 3. r16\\-\\-r31,PPRB,PORTC等等在microprocessor's CPU也就是Atmega328p里\n\n\n\n## lab2 portb 连led\n### 缩写\n1. #### SREG : status register\n2. #### Rd : Destination register in the register file\n\n### arduino里几个概念\n1. #### ATmega是Arduino里面的正方形芯片,microcontroller\n2. #### PORTB \n        : an 8-bit I/O port with internal pull-up resistors, 位于: 正方形芯片的周边小点(8个:PB7:0)\n        它们 连接着the external digital pins\n| Atemega pin  |  Nano digital pin |\n| -----------  |  --------------   |\n|     PB0(在芯片的四周))      |      D8(在nano的两周,可连接面包板的线)           |\n|     PB1      |      D9           |\n| ....         |     ....          |\n3. #### digital pin:\n        位于nona两周: I/O interface(HIGH/LOW)\n4. CPU怎么链接PORTB: databus\n5. DDRB跟PORTB,PORTC等等地位相等,都在register里,都是一个一个的寄存器,都是8bit.(each port on Atmega328 has a **Data Direction Register**)\n6. DDRB和PORTB的**关系**:\n     each bit of in PORTB has a corresponding input or output mode bit in DDRB.\n## Lab3 portc 很好理解 读value\n\n## 疑问疑惑\n### 程序内的语法: \n1. main,mainloop的意思\n2. rjmp?\n3. brlo **lessthan**? 为什么是lessthan,brlo本身不就是当lower时吗\n4. .org 0,地址0 是跟0x06等等同一地位吗,那我在.equ里面最小的那个地址开始可以吗 \\-\\-11.3\n### led_on.s:\n1. SREG的作用是什么,设置为0要干什么\n### 第三个程序:portc(lab3)\n1. 从PINC中读取数据到PORTC,那pinc的数据从何而来?\n","source":"_posts/Arduino.md","raw":"---\ntitle: Arduino与Assembly\ndate: 2019-11-01 16:22:08\ntags: \n- 单片机\ncategories: \n- 2019\n- KCL\n- Arduino\npassword: password\ntop: 1000\n---\n\n\n\n## Lab--汇编语言初识&语法结构\n<!--more-->\n### 第一个程序的理解\n 1. .equ SREG,0x3f     :treat the label SREG as 0x3f\n 2. .org 0     :the start address\n 3. r16\\-\\-r31,PPRB,PORTC等等在microprocessor's CPU也就是Atmega328p里\n\n\n\n## lab2 portb 连led\n### 缩写\n1. #### SREG : status register\n2. #### Rd : Destination register in the register file\n\n### arduino里几个概念\n1. #### ATmega是Arduino里面的正方形芯片,microcontroller\n2. #### PORTB \n        : an 8-bit I/O port with internal pull-up resistors, 位于: 正方形芯片的周边小点(8个:PB7:0)\n        它们 连接着the external digital pins\n| Atemega pin  |  Nano digital pin |\n| -----------  |  --------------   |\n|     PB0(在芯片的四周))      |      D8(在nano的两周,可连接面包板的线)           |\n|     PB1      |      D9           |\n| ....         |     ....          |\n3. #### digital pin:\n        位于nona两周: I/O interface(HIGH/LOW)\n4. CPU怎么链接PORTB: databus\n5. DDRB跟PORTB,PORTC等等地位相等,都在register里,都是一个一个的寄存器,都是8bit.(each port on Atmega328 has a **Data Direction Register**)\n6. DDRB和PORTB的**关系**:\n     each bit of in PORTB has a corresponding input or output mode bit in DDRB.\n## Lab3 portc 很好理解 读value\n\n## 疑问疑惑\n### 程序内的语法: \n1. main,mainloop的意思\n2. rjmp?\n3. brlo **lessthan**? 为什么是lessthan,brlo本身不就是当lower时吗\n4. .org 0,地址0 是跟0x06等等同一地位吗,那我在.equ里面最小的那个地址开始可以吗 \\-\\-11.3\n### led_on.s:\n1. SREG的作用是什么,设置为0要干什么\n### 第三个程序:portc(lab3)\n1. 从PINC中读取数据到PORTC,那pinc的数据从何而来?\n","slug":"Arduino","published":1,"updated":"2019-11-01T08:22:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqkofx2m00015jwl8bay0zv2","content":"<h2 id=\"Lab–汇编语言初识-amp-语法结构\"><a href=\"#Lab–汇编语言初识-amp-语法结构\" class=\"headerlink\" title=\"Lab–汇编语言初识&amp;语法结构\"></a>Lab–汇编语言初识&amp;语法结构</h2><span id=\"more\"></span>\n<h3 id=\"第一个程序的理解\"><a href=\"#第一个程序的理解\" class=\"headerlink\" title=\"第一个程序的理解\"></a>第一个程序的理解</h3><ol>\n<li>.equ SREG,0x3f     :treat the label SREG as 0x3f</li>\n<li>.org 0     :the start address</li>\n<li>r16--r31,PPRB,PORTC等等在microprocessor’s CPU也就是Atmega328p里</li>\n</ol>\n<h2 id=\"lab2-portb-连led\"><a href=\"#lab2-portb-连led\" class=\"headerlink\" title=\"lab2 portb 连led\"></a>lab2 portb 连led</h2><h3 id=\"缩写\"><a href=\"#缩写\" class=\"headerlink\" title=\"缩写\"></a>缩写</h3><ol>\n<li><h4 id=\"SREG-status-register\"><a href=\"#SREG-status-register\" class=\"headerlink\" title=\"SREG : status register\"></a>SREG : status register</h4></li>\n<li><h4 id=\"Rd-Destination-register-in-the-register-file\"><a href=\"#Rd-Destination-register-in-the-register-file\" class=\"headerlink\" title=\"Rd : Destination register in the register file\"></a>Rd : Destination register in the register file</h4></li>\n</ol>\n<h3 id=\"arduino里几个概念\"><a href=\"#arduino里几个概念\" class=\"headerlink\" title=\"arduino里几个概念\"></a>arduino里几个概念</h3><ol>\n<li><h4 id=\"ATmega是Arduino里面的正方形芯片-microcontroller\"><a href=\"#ATmega是Arduino里面的正方形芯片-microcontroller\" class=\"headerlink\" title=\"ATmega是Arduino里面的正方形芯片,microcontroller\"></a>ATmega是Arduino里面的正方形芯片,microcontroller</h4></li>\n<li><h4 id=\"PORTB\"><a href=\"#PORTB\" class=\"headerlink\" title=\"PORTB\"></a>PORTB</h4><pre><code> : an 8-bit I/O port with internal pull-up resistors, 位于: 正方形芯片的周边小点(8个:PB7:0)\n 它们 连接着the external digital pins\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Atemega pin</th>\n<th>Nano digital pin</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>PB0(在芯片的四周))</td>\n<td>D8(在nano的两周,可连接面包板的线)</td>\n</tr>\n<tr>\n<td>PB1</td>\n<td>D9</td>\n</tr>\n<tr>\n<td>….</td>\n<td>….</td>\n</tr>\n</tbody></table>\n</li>\n<li><h4 id=\"digital-pin\"><a href=\"#digital-pin\" class=\"headerlink\" title=\"digital pin:\"></a>digital pin:</h4><pre><code> 位于nona两周: I/O interface(HIGH/LOW)\n</code></pre>\n</li>\n<li>CPU怎么链接PORTB: databus</li>\n<li>DDRB跟PORTB,PORTC等等地位相等,都在register里,都是一个一个的寄存器,都是8bit.(each port on Atmega328 has a <strong>Data Direction Register</strong>)</li>\n<li>DDRB和PORTB的<strong>关系</strong>:<br>  each bit of in PORTB has a corresponding input or output mode bit in DDRB.<h2 id=\"Lab3-portc-很好理解-读value\"><a href=\"#Lab3-portc-很好理解-读value\" class=\"headerlink\" title=\"Lab3 portc 很好理解 读value\"></a>Lab3 portc 很好理解 读value</h2></li>\n</ol>\n<h2 id=\"疑问疑惑\"><a href=\"#疑问疑惑\" class=\"headerlink\" title=\"疑问疑惑\"></a>疑问疑惑</h2><h3 id=\"程序内的语法\"><a href=\"#程序内的语法\" class=\"headerlink\" title=\"程序内的语法:\"></a>程序内的语法:</h3><ol>\n<li>main,mainloop的意思</li>\n<li>rjmp?</li>\n<li>brlo <strong>lessthan</strong>? 为什么是lessthan,brlo本身不就是当lower时吗</li>\n<li>.org 0,地址0 是跟0x06等等同一地位吗,那我在.equ里面最小的那个地址开始可以吗 --11.3<h3 id=\"led-on-s\"><a href=\"#led-on-s\" class=\"headerlink\" title=\"led_on.s:\"></a>led_on.s:</h3></li>\n<li>SREG的作用是什么,设置为0要干什么<h3 id=\"第三个程序-portc-lab3\"><a href=\"#第三个程序-portc-lab3\" class=\"headerlink\" title=\"第三个程序:portc(lab3)\"></a>第三个程序:portc(lab3)</h3></li>\n<li>从PINC中读取数据到PORTC,那pinc的数据从何而来?</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"Lab–汇编语言初识-amp-语法结构\"><a href=\"#Lab–汇编语言初识-amp-语法结构\" class=\"headerlink\" title=\"Lab–汇编语言初识&amp;语法结构\"></a>Lab–汇编语言初识&amp;语法结构</h2>","more":"<h3 id=\"第一个程序的理解\"><a href=\"#第一个程序的理解\" class=\"headerlink\" title=\"第一个程序的理解\"></a>第一个程序的理解</h3><ol>\n<li>.equ SREG,0x3f     :treat the label SREG as 0x3f</li>\n<li>.org 0     :the start address</li>\n<li>r16--r31,PPRB,PORTC等等在microprocessor’s CPU也就是Atmega328p里</li>\n</ol>\n<h2 id=\"lab2-portb-连led\"><a href=\"#lab2-portb-连led\" class=\"headerlink\" title=\"lab2 portb 连led\"></a>lab2 portb 连led</h2><h3 id=\"缩写\"><a href=\"#缩写\" class=\"headerlink\" title=\"缩写\"></a>缩写</h3><ol>\n<li><h4 id=\"SREG-status-register\"><a href=\"#SREG-status-register\" class=\"headerlink\" title=\"SREG : status register\"></a>SREG : status register</h4></li>\n<li><h4 id=\"Rd-Destination-register-in-the-register-file\"><a href=\"#Rd-Destination-register-in-the-register-file\" class=\"headerlink\" title=\"Rd : Destination register in the register file\"></a>Rd : Destination register in the register file</h4></li>\n</ol>\n<h3 id=\"arduino里几个概念\"><a href=\"#arduino里几个概念\" class=\"headerlink\" title=\"arduino里几个概念\"></a>arduino里几个概念</h3><ol>\n<li><h4 id=\"ATmega是Arduino里面的正方形芯片-microcontroller\"><a href=\"#ATmega是Arduino里面的正方形芯片-microcontroller\" class=\"headerlink\" title=\"ATmega是Arduino里面的正方形芯片,microcontroller\"></a>ATmega是Arduino里面的正方形芯片,microcontroller</h4></li>\n<li><h4 id=\"PORTB\"><a href=\"#PORTB\" class=\"headerlink\" title=\"PORTB\"></a>PORTB</h4><pre><code> : an 8-bit I/O port with internal pull-up resistors, 位于: 正方形芯片的周边小点(8个:PB7:0)\n 它们 连接着the external digital pins\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>Atemega pin</th>\n<th>Nano digital pin</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>PB0(在芯片的四周))</td>\n<td>D8(在nano的两周,可连接面包板的线)</td>\n</tr>\n<tr>\n<td>PB1</td>\n<td>D9</td>\n</tr>\n<tr>\n<td>….</td>\n<td>….</td>\n</tr>\n</tbody></table>\n</li>\n<li><h4 id=\"digital-pin\"><a href=\"#digital-pin\" class=\"headerlink\" title=\"digital pin:\"></a>digital pin:</h4><pre><code> 位于nona两周: I/O interface(HIGH/LOW)\n</code></pre>\n</li>\n<li>CPU怎么链接PORTB: databus</li>\n<li>DDRB跟PORTB,PORTC等等地位相等,都在register里,都是一个一个的寄存器,都是8bit.(each port on Atmega328 has a <strong>Data Direction Register</strong>)</li>\n<li>DDRB和PORTB的<strong>关系</strong>:<br>  each bit of in PORTB has a corresponding input or output mode bit in DDRB.<h2 id=\"Lab3-portc-很好理解-读value\"><a href=\"#Lab3-portc-很好理解-读value\" class=\"headerlink\" title=\"Lab3 portc 很好理解 读value\"></a>Lab3 portc 很好理解 读value</h2></li>\n</ol>\n<h2 id=\"疑问疑惑\"><a href=\"#疑问疑惑\" class=\"headerlink\" title=\"疑问疑惑\"></a>疑问疑惑</h2><h3 id=\"程序内的语法\"><a href=\"#程序内的语法\" class=\"headerlink\" title=\"程序内的语法:\"></a>程序内的语法:</h3><ol>\n<li>main,mainloop的意思</li>\n<li>rjmp?</li>\n<li>brlo <strong>lessthan</strong>? 为什么是lessthan,brlo本身不就是当lower时吗</li>\n<li>.org 0,地址0 是跟0x06等等同一地位吗,那我在.equ里面最小的那个地址开始可以吗 --11.3<h3 id=\"led-on-s\"><a href=\"#led-on-s\" class=\"headerlink\" title=\"led_on.s:\"></a>led_on.s:</h3></li>\n<li>SREG的作用是什么,设置为0要干什么<h3 id=\"第三个程序-portc-lab3\"><a href=\"#第三个程序-portc-lab3\" class=\"headerlink\" title=\"第三个程序:portc(lab3)\"></a>第三个程序:portc(lab3)</h3></li>\n<li>从PINC中读取数据到PORTC,那pinc的数据从何而来?</li>\n</ol>"},{"title":"CMTE_note","date":"2019-10-30T11:20:08.000Z","password":"password","top":100,"_content":"\n\n\n# 四 Vector  Algebra\n## 空间直线,空间平面\n<!--more-->\n### 空间直线几个形式的方程,空间平面的方程.\n\nAx +By +Cz + D = 0\n\n其中n = (A, B, C)是平面的法向量，D是将平面平移到坐标原点所需距离（所以D=0时，平面过原点）\n\n### 空间两直线的距离,点到平面以及到直线的距离 公式\n\n(联立方程)\n![点到平面](https://pic002.cnblogs.com/img/zdd/201007/2010071013450338.jpg \"公式\")\n\n## 已知两平面方程求交点坐标\n\n\n## 物理学中的力矩和功\n机械功:work\n力矩:moment of force\n     the tendency of a force to make an object **rotate** .\n两个物理意义不同,符号相同.牛顿-米.\n力矩*t=rXF*, 这个r不是功里面那样的在F方向的位移,而是从转轴到施力点的位移矢量.\n\n\n\n# 五 Matrix Algebra\n## 3阶矩阵运算易错的是:\n第二列的余子式中两列的顺序: 是从左到右 不是从右到左!\n## 课件提纲&概念\n1. 矩阵\\-\\-\\-多元方程组\n2. changes of  axes 旋转\\-\\-\\-\\-结合预科课件: 逆时针顺时针\n3. ### 几个矩阵和概念\n   - square m,column/row vector,diagonal m,unit/identity ma,symmetric m,upper\\-/lower\\-triangular m,diagonal对角矩阵,scalar数量矩阵(主对角元全相等)\n   - singular:奇异(行列式为0)\n   - trace: 迹sum of **leading diagonal**主对角线(左上右下)\n   - A<sup>T</sup>: 手心手背 转置矩阵\n            行列式和转置行列式**相等**\n   - minor:余子式,cofactor 代数余子式多一个-1的次方\n   - adjoint:伴随矩阵 ***注意特性和公式*** 代数余子式组成\n   - #### inverse matrix: 逆矩阵\n   - #### Cramer's rule卡姆拉法则 :\n   - #### Gaussian elimination: 见矩阵运算板块*高斯消元法*\n   - #### ref<br>\n         row echelon form阶梯型矩阵: 下阶梯,leadingentry是1.\n         rref行简化阶梯形矩阵:在ref基上<p>非零首元所在的列/p<>除了非零首元外，其余元素全为0.每个首项是1.\n         每个矩阵,ref不唯一,**rref唯一**.\n   - independent & dependent vectors线性相关无关\n         linear combination of vectors线性组合(是一个向量而不是关系)\n         注意根据定义,线性相关是n个向量组成的组,至少其余n-个可以表示一个\n\n   - Rank 秩 :最大线性无关的向量的个数  在ref形势下含非0的行数\n   - **eigenvalue**特征值\n          - characteristic polynomial(PPT72页),特征多项式characteristic equation of A特征方程\n          - eigenvector特征向量\n          -\n4.  注意**矩阵×标量**与行列式×标量的区别: 矩阵式乘每个元素,行列式乘一行.\n5.  ### 公式总结:\n    - (AB)<sup>T</sup> = B<sup>T</sup>A<sup>T</sup> & adj(AB) = adj(B)adj(A)\n    - eigenvalue的性质(PPT末尾)\n    - `AA*=A*A=|A|E`  (*伴随矩阵)\n    -       A<sup>-1</sup>=(1/|A|)*A*(可轻易有上一行结合AA<sup>-1</sup>=E推出)\n    -  |A*|=|A|<sup>n-1</sup>  (可轻易有上上一行推出)\n6. ### 矩阵运算,化简得基本步骤\n   - Gaussian elimination*高斯消元法*:\n        1. 最左上角变为1,依次用第一行的减\\-把剩下行的第一个数变0,这是第一遍,\n        2. 第二遍从第二行开始,把第二行第二列变1,依次用第二行减\\-使下面的行的第二个数变0,\n        3. 直到成为上三角.\n               补充:线性方程组的**初等变换**:\n                     1. 交换两个方程的位置(就好比与换矩阵的行!理解了)\n                     2. 一个方程两端同乘不为0的数\n                     3. 同乘不为0的数后加到另一方程去\n   - 转化成ref(下阶梯):PPT第58页\n         1. pivot:第一个第一列不为0的行,提到第一行\n         2. 依次把下面行的第一列第一行变为0\n         3. 去掉第一列,从新开始找pivot\n         4. 在此基础上转化成**rref**: 找到非0首元,把其上的全变为0\n   - find matrix **rank**:\n         1. 矩阵的ref形式里含有非0行的数量 = 矩阵中independent vector(每一行就是一个vector)\n   - eigenvalue: AX = aX\n          - 已知A可求a\n          - 已知A和a可求X(eigenvector)\n   - 矩阵加减:要同规模(与行列式不同,矩阵是每排,行列式不同的那一排(其余的每一排要对应相等))\n   - 矩阵乘法:好比说AB,要求是A的列数等于B的行数, 那么得到的矩阵规模是A的行数B的列数\n## 二级结论\n   - ###  上三角行列式\n             的值D = 对角线元素乘积\n   - ###   n阶行列式的性质\n             1. 行列式等于它的转置行列式\n             2. 互换行列式中的两行/列,行列式变号(**行列式是一个值数,与矩阵不同**),那矩阵换行呢**??**\n             3. 行列式有两行/列对应相等或者对应成比例,行列式 = 0或者行列式有一行全为0,行列式也为0\n             4. 行列式乘一个数,就乘一行,跟矩阵一样??\n             5. 最重要的来了: 把某一行/列元素的k倍加到另一行/列,行列式的值不变不变不变!\n             6. 可以用上述这些进行行列式的计算\n   - ###   行列式\n             1. 一个特殊行列式: 范德蒙Vandermonde\n   -       可交换矩阵commutable: 数量矩阵与同阶任何矩阵,A与单位阵,对角阵与对角阵\n   -       方阵的幂\n   - 矩阵的初等变换: 极其类似行列式的初等变换\n\n\n\n\n\n\n## 疑问疑惑不理解\n 1. 矩阵这么乘啊加啊,它行列式的值不会变吗,为什么可以这样\n 2. 转化成ref\n 3. 怎么用矩阵解三元一次方程(就像解eigenvector)\n 4. 我记得我总结过行列式与矩阵的不同??\n 5. 记得PPT最后的几个性质 PPT的例题\\-\\-\\-\\-可以lab时候做\\-\\-\\-*于10.31*\n\n\n## 难点和做题总结\n  1. 求特征向量的时候,就设xyz根据向量积的基本法则求,它们积是0.\n  2.\n\n\n\n# 七 函数的极限\n## PPT中的基本英文的概念:\n1. 夹逼定理:sandwich theorem\n2. precose(formal) definition of Limit\n3. one-side limut\n4. continuity at a point\n\n\n# 八 导数 \\-\\-\\-11.14上课\n## ppt与课本\n1. 课本书签中左右导数的具体计算过程\n2. 注意题型大部分有可能是物理应用\n3. 复习去年学的导数那一章，注意肯定有很多题型（比如说微分什么的计算我记得）\n4. \\-\\-\\-\\-11.18上matlab: 搞清楚几种极值,什么**local maximum,absolute minimum**对应的中文概念和此时函数的导数二次导数等等的特性.总结出来!\n5. 在本周quiz中,出现了一个我竟然忘记的东西!! 那就是 函数此点可导的条件有两个,**1此点连续,2左导数=右导数!!!!**\n\n# 九 微分方程\n## ppt提纲\n1. first-order initial value problem\n2. slope fields\n3. **\\[Euler's method\\]**(https://zh.wikipedia.org/wiki/欧拉方法 \"欧拉法\")\n4. linear equation\n5. autonomous equation\n  - equilibrium values or rest points\n6. phase line\n7. systems of equations\n  - autonomous\n8. phase planes\n  - trajectory\n","source":"_posts/CMTE-s-note.md","raw":"---\ntitle: CMTE_note\ndate: 2019-10-30 19:20:08\ntag:\n- 空间向量\ncategories:\n- 2019\n- KCL\n- CMTE\npassword: password\ntop: 100\n---\n\n\n\n# 四 Vector  Algebra\n## 空间直线,空间平面\n<!--more-->\n### 空间直线几个形式的方程,空间平面的方程.\n\nAx +By +Cz + D = 0\n\n其中n = (A, B, C)是平面的法向量，D是将平面平移到坐标原点所需距离（所以D=0时，平面过原点）\n\n### 空间两直线的距离,点到平面以及到直线的距离 公式\n\n(联立方程)\n![点到平面](https://pic002.cnblogs.com/img/zdd/201007/2010071013450338.jpg \"公式\")\n\n## 已知两平面方程求交点坐标\n\n\n## 物理学中的力矩和功\n机械功:work\n力矩:moment of force\n     the tendency of a force to make an object **rotate** .\n两个物理意义不同,符号相同.牛顿-米.\n力矩*t=rXF*, 这个r不是功里面那样的在F方向的位移,而是从转轴到施力点的位移矢量.\n\n\n\n# 五 Matrix Algebra\n## 3阶矩阵运算易错的是:\n第二列的余子式中两列的顺序: 是从左到右 不是从右到左!\n## 课件提纲&概念\n1. 矩阵\\-\\-\\-多元方程组\n2. changes of  axes 旋转\\-\\-\\-\\-结合预科课件: 逆时针顺时针\n3. ### 几个矩阵和概念\n   - square m,column/row vector,diagonal m,unit/identity ma,symmetric m,upper\\-/lower\\-triangular m,diagonal对角矩阵,scalar数量矩阵(主对角元全相等)\n   - singular:奇异(行列式为0)\n   - trace: 迹sum of **leading diagonal**主对角线(左上右下)\n   - A<sup>T</sup>: 手心手背 转置矩阵\n            行列式和转置行列式**相等**\n   - minor:余子式,cofactor 代数余子式多一个-1的次方\n   - adjoint:伴随矩阵 ***注意特性和公式*** 代数余子式组成\n   - #### inverse matrix: 逆矩阵\n   - #### Cramer's rule卡姆拉法则 :\n   - #### Gaussian elimination: 见矩阵运算板块*高斯消元法*\n   - #### ref<br>\n         row echelon form阶梯型矩阵: 下阶梯,leadingentry是1.\n         rref行简化阶梯形矩阵:在ref基上<p>非零首元所在的列/p<>除了非零首元外，其余元素全为0.每个首项是1.\n         每个矩阵,ref不唯一,**rref唯一**.\n   - independent & dependent vectors线性相关无关\n         linear combination of vectors线性组合(是一个向量而不是关系)\n         注意根据定义,线性相关是n个向量组成的组,至少其余n-个可以表示一个\n\n   - Rank 秩 :最大线性无关的向量的个数  在ref形势下含非0的行数\n   - **eigenvalue**特征值\n          - characteristic polynomial(PPT72页),特征多项式characteristic equation of A特征方程\n          - eigenvector特征向量\n          -\n4.  注意**矩阵×标量**与行列式×标量的区别: 矩阵式乘每个元素,行列式乘一行.\n5.  ### 公式总结:\n    - (AB)<sup>T</sup> = B<sup>T</sup>A<sup>T</sup> & adj(AB) = adj(B)adj(A)\n    - eigenvalue的性质(PPT末尾)\n    - `AA*=A*A=|A|E`  (*伴随矩阵)\n    -       A<sup>-1</sup>=(1/|A|)*A*(可轻易有上一行结合AA<sup>-1</sup>=E推出)\n    -  |A*|=|A|<sup>n-1</sup>  (可轻易有上上一行推出)\n6. ### 矩阵运算,化简得基本步骤\n   - Gaussian elimination*高斯消元法*:\n        1. 最左上角变为1,依次用第一行的减\\-把剩下行的第一个数变0,这是第一遍,\n        2. 第二遍从第二行开始,把第二行第二列变1,依次用第二行减\\-使下面的行的第二个数变0,\n        3. 直到成为上三角.\n               补充:线性方程组的**初等变换**:\n                     1. 交换两个方程的位置(就好比与换矩阵的行!理解了)\n                     2. 一个方程两端同乘不为0的数\n                     3. 同乘不为0的数后加到另一方程去\n   - 转化成ref(下阶梯):PPT第58页\n         1. pivot:第一个第一列不为0的行,提到第一行\n         2. 依次把下面行的第一列第一行变为0\n         3. 去掉第一列,从新开始找pivot\n         4. 在此基础上转化成**rref**: 找到非0首元,把其上的全变为0\n   - find matrix **rank**:\n         1. 矩阵的ref形式里含有非0行的数量 = 矩阵中independent vector(每一行就是一个vector)\n   - eigenvalue: AX = aX\n          - 已知A可求a\n          - 已知A和a可求X(eigenvector)\n   - 矩阵加减:要同规模(与行列式不同,矩阵是每排,行列式不同的那一排(其余的每一排要对应相等))\n   - 矩阵乘法:好比说AB,要求是A的列数等于B的行数, 那么得到的矩阵规模是A的行数B的列数\n## 二级结论\n   - ###  上三角行列式\n             的值D = 对角线元素乘积\n   - ###   n阶行列式的性质\n             1. 行列式等于它的转置行列式\n             2. 互换行列式中的两行/列,行列式变号(**行列式是一个值数,与矩阵不同**),那矩阵换行呢**??**\n             3. 行列式有两行/列对应相等或者对应成比例,行列式 = 0或者行列式有一行全为0,行列式也为0\n             4. 行列式乘一个数,就乘一行,跟矩阵一样??\n             5. 最重要的来了: 把某一行/列元素的k倍加到另一行/列,行列式的值不变不变不变!\n             6. 可以用上述这些进行行列式的计算\n   - ###   行列式\n             1. 一个特殊行列式: 范德蒙Vandermonde\n   -       可交换矩阵commutable: 数量矩阵与同阶任何矩阵,A与单位阵,对角阵与对角阵\n   -       方阵的幂\n   - 矩阵的初等变换: 极其类似行列式的初等变换\n\n\n\n\n\n\n## 疑问疑惑不理解\n 1. 矩阵这么乘啊加啊,它行列式的值不会变吗,为什么可以这样\n 2. 转化成ref\n 3. 怎么用矩阵解三元一次方程(就像解eigenvector)\n 4. 我记得我总结过行列式与矩阵的不同??\n 5. 记得PPT最后的几个性质 PPT的例题\\-\\-\\-\\-可以lab时候做\\-\\-\\-*于10.31*\n\n\n## 难点和做题总结\n  1. 求特征向量的时候,就设xyz根据向量积的基本法则求,它们积是0.\n  2.\n\n\n\n# 七 函数的极限\n## PPT中的基本英文的概念:\n1. 夹逼定理:sandwich theorem\n2. precose(formal) definition of Limit\n3. one-side limut\n4. continuity at a point\n\n\n# 八 导数 \\-\\-\\-11.14上课\n## ppt与课本\n1. 课本书签中左右导数的具体计算过程\n2. 注意题型大部分有可能是物理应用\n3. 复习去年学的导数那一章，注意肯定有很多题型（比如说微分什么的计算我记得）\n4. \\-\\-\\-\\-11.18上matlab: 搞清楚几种极值,什么**local maximum,absolute minimum**对应的中文概念和此时函数的导数二次导数等等的特性.总结出来!\n5. 在本周quiz中,出现了一个我竟然忘记的东西!! 那就是 函数此点可导的条件有两个,**1此点连续,2左导数=右导数!!!!**\n\n# 九 微分方程\n## ppt提纲\n1. first-order initial value problem\n2. slope fields\n3. **\\[Euler's method\\]**(https://zh.wikipedia.org/wiki/欧拉方法 \"欧拉法\")\n4. linear equation\n5. autonomous equation\n  - equilibrium values or rest points\n6. phase line\n7. systems of equations\n  - autonomous\n8. phase planes\n  - trajectory\n","slug":"CMTE-s-note","published":1,"updated":"2019-10-30T11:20:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqkofx2q00035jwlewjpgbj2","content":"<h1 id=\"四-Vector-Algebra\"><a href=\"#四-Vector-Algebra\" class=\"headerlink\" title=\"四 Vector  Algebra\"></a>四 Vector  Algebra</h1><h2 id=\"空间直线-空间平面\"><a href=\"#空间直线-空间平面\" class=\"headerlink\" title=\"空间直线,空间平面\"></a>空间直线,空间平面</h2><span id=\"more\"></span>\n<h3 id=\"空间直线几个形式的方程-空间平面的方程\"><a href=\"#空间直线几个形式的方程-空间平面的方程\" class=\"headerlink\" title=\"空间直线几个形式的方程,空间平面的方程.\"></a>空间直线几个形式的方程,空间平面的方程.</h3><p>Ax +By +Cz + D = 0</p>\n<p>其中n = (A, B, C)是平面的法向量，D是将平面平移到坐标原点所需距离（所以D=0时，平面过原点）</p>\n<h3 id=\"空间两直线的距离-点到平面以及到直线的距离-公式\"><a href=\"#空间两直线的距离-点到平面以及到直线的距离-公式\" class=\"headerlink\" title=\"空间两直线的距离,点到平面以及到直线的距离 公式\"></a>空间两直线的距离,点到平面以及到直线的距离 公式</h3><p>(联立方程)<br><img src=\"https://pic002.cnblogs.com/img/zdd/201007/2010071013450338.jpg\" alt=\"点到平面\" title=\"公式\"></p>\n<h2 id=\"已知两平面方程求交点坐标\"><a href=\"#已知两平面方程求交点坐标\" class=\"headerlink\" title=\"已知两平面方程求交点坐标\"></a>已知两平面方程求交点坐标</h2><h2 id=\"物理学中的力矩和功\"><a href=\"#物理学中的力矩和功\" class=\"headerlink\" title=\"物理学中的力矩和功\"></a>物理学中的力矩和功</h2><p>机械功:work<br>力矩:moment of force<br>     the tendency of a force to make an object <strong>rotate</strong> .<br>两个物理意义不同,符号相同.牛顿-米.<br>力矩<em>t=rXF</em>, 这个r不是功里面那样的在F方向的位移,而是从转轴到施力点的位移矢量.</p>\n<h1 id=\"五-Matrix-Algebra\"><a href=\"#五-Matrix-Algebra\" class=\"headerlink\" title=\"五 Matrix Algebra\"></a>五 Matrix Algebra</h1><h2 id=\"3阶矩阵运算易错的是\"><a href=\"#3阶矩阵运算易错的是\" class=\"headerlink\" title=\"3阶矩阵运算易错的是:\"></a>3阶矩阵运算易错的是:</h2><p>第二列的余子式中两列的顺序: 是从左到右 不是从右到左!</p>\n<h2 id=\"课件提纲-amp-概念\"><a href=\"#课件提纲-amp-概念\" class=\"headerlink\" title=\"课件提纲&amp;概念\"></a>课件提纲&amp;概念</h2><ol>\n<li><p>矩阵---多元方程组</p>\n</li>\n<li><p>changes of  axes 旋转----结合预科课件: 逆时针顺时针</p>\n</li>\n<li><h3 id=\"几个矩阵和概念\"><a href=\"#几个矩阵和概念\" class=\"headerlink\" title=\"几个矩阵和概念\"></a>几个矩阵和概念</h3><ul>\n<li><p>square m,column/row vector,diagonal m,unit/identity ma,symmetric m,upper-/lower-triangular m,diagonal对角矩阵,scalar数量矩阵(主对角元全相等)</p>\n</li>\n<li><p>singular:奇异(行列式为0)</p>\n</li>\n<li><p>trace: 迹sum of <strong>leading diagonal</strong>主对角线(左上右下)</p>\n</li>\n<li><p>A<sup>T</sup>: 手心手背 转置矩阵</p>\n<pre><code>   行列式和转置行列式**相等**\n</code></pre>\n</li>\n<li><p>minor:余子式,cofactor 代数余子式多一个-1的次方</p>\n</li>\n<li><p>adjoint:伴随矩阵 <em><strong>注意特性和公式</strong></em> 代数余子式组成</p>\n</li>\n<li><h4 id=\"inverse-matrix-逆矩阵\"><a href=\"#inverse-matrix-逆矩阵\" class=\"headerlink\" title=\"inverse matrix: 逆矩阵\"></a>inverse matrix: 逆矩阵</h4></li>\n<li><h4 id=\"Cramer’s-rule卡姆拉法则\"><a href=\"#Cramer’s-rule卡姆拉法则\" class=\"headerlink\" title=\"Cramer’s rule卡姆拉法则 :\"></a>Cramer’s rule卡姆拉法则 :</h4></li>\n<li><h4 id=\"Gaussian-elimination-见矩阵运算板块高斯消元法\"><a href=\"#Gaussian-elimination-见矩阵运算板块高斯消元法\" class=\"headerlink\" title=\"Gaussian elimination: 见矩阵运算板块高斯消元法\"></a>Gaussian elimination: 见矩阵运算板块<em>高斯消元法</em></h4></li>\n<li><h4 id=\"ref\"><a href=\"#ref\" class=\"headerlink\" title=\"ref\"></a>ref<br></h4><pre><code>row echelon form阶梯型矩阵: 下阶梯,leadingentry是1.\nrref行简化阶梯形矩阵:在ref基上&lt;p&gt;非零首元所在的列/p&lt;&gt;除了非零首元外，其余元素全为0.每个首项是1.\n每个矩阵,ref不唯一,**rref唯一**.\n</code></pre>\n</li>\n<li><p>independent &amp; dependent vectors线性相关无关</p>\n<pre><code>linear combination of vectors线性组合(是一个向量而不是关系)\n注意根据定义,线性相关是n个向量组成的组,至少其余n-个可以表示一个\n</code></pre>\n</li>\n<li><p>Rank 秩 :最大线性无关的向量的个数  在ref形势下含非0的行数</p>\n</li>\n<li><p><strong>eigenvalue</strong>特征值</p>\n<pre><code> - characteristic polynomial(PPT72页),特征多项式characteristic equation of A特征方程\n - eigenvector特征向量\n -\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p> 注意<strong>矩阵×标量</strong>与行列式×标量的区别: 矩阵式乘每个元素,行列式乘一行.</p>\n</li>\n<li><h3 id=\"公式总结\"><a href=\"#公式总结\" class=\"headerlink\" title=\"公式总结:\"></a>公式总结:</h3><ul>\n<li>(AB)<sup>T</sup> = B<sup>T</sup>A<sup>T</sup> &amp; adj(AB) = adj(B)adj(A)</li>\n<li>eigenvalue的性质(PPT末尾)</li>\n<li><code>AA*=A*A=|A|E</code>  (*伴随矩阵)</li>\n<li><pre><code>  A&lt;sup&gt;-1&lt;/sup&gt;=(1/|A|)*A*(可轻易有上一行结合AA&lt;sup&gt;-1&lt;/sup&gt;=E推出)\n</code></pre>\n</li>\n<li> |A*|=|A|<sup>n-1</sup>  (可轻易有上上一行推出)</li>\n</ul>\n</li>\n<li><h3 id=\"矩阵运算-化简得基本步骤\"><a href=\"#矩阵运算-化简得基本步骤\" class=\"headerlink\" title=\"矩阵运算,化简得基本步骤\"></a>矩阵运算,化简得基本步骤</h3><ul>\n<li>Gaussian elimination<em>高斯消元法</em>:<ol>\n<li>最左上角变为1,依次用第一行的减-把剩下行的第一个数变0,这是第一遍,</li>\n<li>第二遍从第二行开始,把第二行第二列变1,依次用第二行减-使下面的行的第二个数变0,</li>\n<li>直到成为上三角.<pre><code>补充:线性方程组的**初等变换**:\n      1. 交换两个方程的位置(就好比与换矩阵的行!理解了)\n      2. 一个方程两端同乘不为0的数\n      3. 同乘不为0的数后加到另一方程去\n</code></pre>\n</li>\n</ol>\n</li>\n<li>转化成ref(下阶梯):PPT第58页<pre><code>1. pivot:第一个第一列不为0的行,提到第一行\n2. 依次把下面行的第一列第一行变为0\n3. 去掉第一列,从新开始找pivot\n4. 在此基础上转化成**rref**: 找到非0首元,把其上的全变为0\n</code></pre>\n</li>\n<li>find matrix <strong>rank</strong>:<pre><code>1. 矩阵的ref形式里含有非0行的数量 = 矩阵中independent vector(每一行就是一个vector)\n</code></pre>\n</li>\n<li>eigenvalue: AX = aX<pre><code> - 已知A可求a\n - 已知A和a可求X(eigenvector)\n</code></pre>\n</li>\n<li>矩阵加减:要同规模(与行列式不同,矩阵是每排,行列式不同的那一排(其余的每一排要对应相等))</li>\n<li>矩阵乘法:好比说AB,要求是A的列数等于B的行数, 那么得到的矩阵规模是A的行数B的列数<h2 id=\"二级结论\"><a href=\"#二级结论\" class=\"headerlink\" title=\"二级结论\"></a>二级结论</h2></li>\n<li><h3 id=\"上三角行列式\"><a href=\"#上三角行列式\" class=\"headerlink\" title=\"上三角行列式\"></a>上三角行列式</h3><pre><code>    的值D = 对角线元素乘积\n</code></pre>\n</li>\n<li><h3 id=\"n阶行列式的性质\"><a href=\"#n阶行列式的性质\" class=\"headerlink\" title=\"n阶行列式的性质\"></a>n阶行列式的性质</h3><pre><code>    1. 行列式等于它的转置行列式\n    2. 互换行列式中的两行/列,行列式变号(**行列式是一个值数,与矩阵不同**),那矩阵换行呢**??**\n    3. 行列式有两行/列对应相等或者对应成比例,行列式 = 0或者行列式有一行全为0,行列式也为0\n    4. 行列式乘一个数,就乘一行,跟矩阵一样??\n    5. 最重要的来了: 把某一行/列元素的k倍加到另一行/列,行列式的值不变不变不变!\n    6. 可以用上述这些进行行列式的计算\n</code></pre>\n</li>\n<li><h3 id=\"行列式\"><a href=\"#行列式\" class=\"headerlink\" title=\"行列式\"></a>行列式</h3><pre><code>    1. 一个特殊行列式: 范德蒙Vandermonde\n</code></pre>\n</li>\n<li><pre><code>  可交换矩阵commutable: 数量矩阵与同阶任何矩阵,A与单位阵,对角阵与对角阵\n</code></pre>\n</li>\n<li><pre><code>  方阵的幂\n</code></pre>\n</li>\n<li>矩阵的初等变换: 极其类似行列式的初等变换</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"疑问疑惑不理解\"><a href=\"#疑问疑惑不理解\" class=\"headerlink\" title=\"疑问疑惑不理解\"></a>疑问疑惑不理解</h2><ol>\n<li>矩阵这么乘啊加啊,它行列式的值不会变吗,为什么可以这样</li>\n<li>转化成ref</li>\n<li>怎么用矩阵解三元一次方程(就像解eigenvector)</li>\n<li>我记得我总结过行列式与矩阵的不同??</li>\n<li>记得PPT最后的几个性质 PPT的例题----可以lab时候做---<em>于10.31</em></li>\n</ol>\n<h2 id=\"难点和做题总结\"><a href=\"#难点和做题总结\" class=\"headerlink\" title=\"难点和做题总结\"></a>难点和做题总结</h2><ol>\n<li>求特征向量的时候,就设xyz根据向量积的基本法则求,它们积是0.</li>\n<li></li>\n</ol>\n<h1 id=\"七-函数的极限\"><a href=\"#七-函数的极限\" class=\"headerlink\" title=\"七 函数的极限\"></a>七 函数的极限</h1><h2 id=\"PPT中的基本英文的概念\"><a href=\"#PPT中的基本英文的概念\" class=\"headerlink\" title=\"PPT中的基本英文的概念:\"></a>PPT中的基本英文的概念:</h2><ol>\n<li>夹逼定理:sandwich theorem</li>\n<li>precose(formal) definition of Limit</li>\n<li>one-side limut</li>\n<li>continuity at a point</li>\n</ol>\n<h1 id=\"八-导数-11-14上课\"><a href=\"#八-导数-11-14上课\" class=\"headerlink\" title=\"八 导数 ---11.14上课\"></a>八 导数 ---11.14上课</h1><h2 id=\"ppt与课本\"><a href=\"#ppt与课本\" class=\"headerlink\" title=\"ppt与课本\"></a>ppt与课本</h2><ol>\n<li>课本书签中左右导数的具体计算过程</li>\n<li>注意题型大部分有可能是物理应用</li>\n<li>复习去年学的导数那一章，注意肯定有很多题型（比如说微分什么的计算我记得）</li>\n<li>----11.18上matlab: 搞清楚几种极值,什么<strong>local maximum,absolute minimum</strong>对应的中文概念和此时函数的导数二次导数等等的特性.总结出来!</li>\n<li>在本周quiz中,出现了一个我竟然忘记的东西!! 那就是 函数此点可导的条件有两个,<strong>1此点连续,2左导数=右导数!!!!</strong></li>\n</ol>\n<h1 id=\"九-微分方程\"><a href=\"#九-微分方程\" class=\"headerlink\" title=\"九 微分方程\"></a>九 微分方程</h1><h2 id=\"ppt提纲\"><a href=\"#ppt提纲\" class=\"headerlink\" title=\"ppt提纲\"></a>ppt提纲</h2><ol>\n<li>first-order initial value problem</li>\n<li>slope fields</li>\n<li><strong>[Euler’s method]</strong>(<a href=\"https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E6%96%B9%E6%B3%95\">https://zh.wikipedia.org/wiki/欧拉方法</a> “欧拉法”)</li>\n<li>linear equation</li>\n<li>autonomous equation</li>\n</ol>\n<ul>\n<li>equilibrium values or rest points</li>\n</ul>\n<ol start=\"6\">\n<li>phase line</li>\n<li>systems of equations</li>\n</ol>\n<ul>\n<li>autonomous</li>\n</ul>\n<ol start=\"8\">\n<li>phase planes</li>\n</ol>\n<ul>\n<li>trajectory</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"四-Vector-Algebra\"><a href=\"#四-Vector-Algebra\" class=\"headerlink\" title=\"四 Vector  Algebra\"></a>四 Vector  Algebra</h1><h2 id=\"空间直线-空间平面\"><a href=\"#空间直线-空间平面\" class=\"headerlink\" title=\"空间直线,空间平面\"></a>空间直线,空间平面</h2>","more":"<h3 id=\"空间直线几个形式的方程-空间平面的方程\"><a href=\"#空间直线几个形式的方程-空间平面的方程\" class=\"headerlink\" title=\"空间直线几个形式的方程,空间平面的方程.\"></a>空间直线几个形式的方程,空间平面的方程.</h3><p>Ax +By +Cz + D = 0</p>\n<p>其中n = (A, B, C)是平面的法向量，D是将平面平移到坐标原点所需距离（所以D=0时，平面过原点）</p>\n<h3 id=\"空间两直线的距离-点到平面以及到直线的距离-公式\"><a href=\"#空间两直线的距离-点到平面以及到直线的距离-公式\" class=\"headerlink\" title=\"空间两直线的距离,点到平面以及到直线的距离 公式\"></a>空间两直线的距离,点到平面以及到直线的距离 公式</h3><p>(联立方程)<br><img src=\"https://pic002.cnblogs.com/img/zdd/201007/2010071013450338.jpg\" alt=\"点到平面\" title=\"公式\"></p>\n<h2 id=\"已知两平面方程求交点坐标\"><a href=\"#已知两平面方程求交点坐标\" class=\"headerlink\" title=\"已知两平面方程求交点坐标\"></a>已知两平面方程求交点坐标</h2><h2 id=\"物理学中的力矩和功\"><a href=\"#物理学中的力矩和功\" class=\"headerlink\" title=\"物理学中的力矩和功\"></a>物理学中的力矩和功</h2><p>机械功:work<br>力矩:moment of force<br>     the tendency of a force to make an object <strong>rotate</strong> .<br>两个物理意义不同,符号相同.牛顿-米.<br>力矩<em>t=rXF</em>, 这个r不是功里面那样的在F方向的位移,而是从转轴到施力点的位移矢量.</p>\n<h1 id=\"五-Matrix-Algebra\"><a href=\"#五-Matrix-Algebra\" class=\"headerlink\" title=\"五 Matrix Algebra\"></a>五 Matrix Algebra</h1><h2 id=\"3阶矩阵运算易错的是\"><a href=\"#3阶矩阵运算易错的是\" class=\"headerlink\" title=\"3阶矩阵运算易错的是:\"></a>3阶矩阵运算易错的是:</h2><p>第二列的余子式中两列的顺序: 是从左到右 不是从右到左!</p>\n<h2 id=\"课件提纲-amp-概念\"><a href=\"#课件提纲-amp-概念\" class=\"headerlink\" title=\"课件提纲&amp;概念\"></a>课件提纲&amp;概念</h2><ol>\n<li><p>矩阵---多元方程组</p>\n</li>\n<li><p>changes of  axes 旋转----结合预科课件: 逆时针顺时针</p>\n</li>\n<li><h3 id=\"几个矩阵和概念\"><a href=\"#几个矩阵和概念\" class=\"headerlink\" title=\"几个矩阵和概念\"></a>几个矩阵和概念</h3><ul>\n<li><p>square m,column/row vector,diagonal m,unit/identity ma,symmetric m,upper-/lower-triangular m,diagonal对角矩阵,scalar数量矩阵(主对角元全相等)</p>\n</li>\n<li><p>singular:奇异(行列式为0)</p>\n</li>\n<li><p>trace: 迹sum of <strong>leading diagonal</strong>主对角线(左上右下)</p>\n</li>\n<li><p>A<sup>T</sup>: 手心手背 转置矩阵</p>\n<pre><code>   行列式和转置行列式**相等**\n</code></pre>\n</li>\n<li><p>minor:余子式,cofactor 代数余子式多一个-1的次方</p>\n</li>\n<li><p>adjoint:伴随矩阵 <em><strong>注意特性和公式</strong></em> 代数余子式组成</p>\n</li>\n<li><h4 id=\"inverse-matrix-逆矩阵\"><a href=\"#inverse-matrix-逆矩阵\" class=\"headerlink\" title=\"inverse matrix: 逆矩阵\"></a>inverse matrix: 逆矩阵</h4></li>\n<li><h4 id=\"Cramer’s-rule卡姆拉法则\"><a href=\"#Cramer’s-rule卡姆拉法则\" class=\"headerlink\" title=\"Cramer’s rule卡姆拉法则 :\"></a>Cramer’s rule卡姆拉法则 :</h4></li>\n<li><h4 id=\"Gaussian-elimination-见矩阵运算板块高斯消元法\"><a href=\"#Gaussian-elimination-见矩阵运算板块高斯消元法\" class=\"headerlink\" title=\"Gaussian elimination: 见矩阵运算板块高斯消元法\"></a>Gaussian elimination: 见矩阵运算板块<em>高斯消元法</em></h4></li>\n<li><h4 id=\"ref\"><a href=\"#ref\" class=\"headerlink\" title=\"ref\"></a>ref<br></h4><pre><code>row echelon form阶梯型矩阵: 下阶梯,leadingentry是1.\nrref行简化阶梯形矩阵:在ref基上&lt;p&gt;非零首元所在的列/p&lt;&gt;除了非零首元外，其余元素全为0.每个首项是1.\n每个矩阵,ref不唯一,**rref唯一**.\n</code></pre>\n</li>\n<li><p>independent &amp; dependent vectors线性相关无关</p>\n<pre><code>linear combination of vectors线性组合(是一个向量而不是关系)\n注意根据定义,线性相关是n个向量组成的组,至少其余n-个可以表示一个\n</code></pre>\n</li>\n<li><p>Rank 秩 :最大线性无关的向量的个数  在ref形势下含非0的行数</p>\n</li>\n<li><p><strong>eigenvalue</strong>特征值</p>\n<pre><code> - characteristic polynomial(PPT72页),特征多项式characteristic equation of A特征方程\n - eigenvector特征向量\n -\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p> 注意<strong>矩阵×标量</strong>与行列式×标量的区别: 矩阵式乘每个元素,行列式乘一行.</p>\n</li>\n<li><h3 id=\"公式总结\"><a href=\"#公式总结\" class=\"headerlink\" title=\"公式总结:\"></a>公式总结:</h3><ul>\n<li>(AB)<sup>T</sup> = B<sup>T</sup>A<sup>T</sup> &amp; adj(AB) = adj(B)adj(A)</li>\n<li>eigenvalue的性质(PPT末尾)</li>\n<li><code>AA*=A*A=|A|E</code>  (*伴随矩阵)</li>\n<li><pre><code>  A&lt;sup&gt;-1&lt;/sup&gt;=(1/|A|)*A*(可轻易有上一行结合AA&lt;sup&gt;-1&lt;/sup&gt;=E推出)\n</code></pre>\n</li>\n<li> |A*|=|A|<sup>n-1</sup>  (可轻易有上上一行推出)</li>\n</ul>\n</li>\n<li><h3 id=\"矩阵运算-化简得基本步骤\"><a href=\"#矩阵运算-化简得基本步骤\" class=\"headerlink\" title=\"矩阵运算,化简得基本步骤\"></a>矩阵运算,化简得基本步骤</h3><ul>\n<li>Gaussian elimination<em>高斯消元法</em>:<ol>\n<li>最左上角变为1,依次用第一行的减-把剩下行的第一个数变0,这是第一遍,</li>\n<li>第二遍从第二行开始,把第二行第二列变1,依次用第二行减-使下面的行的第二个数变0,</li>\n<li>直到成为上三角.<pre><code>补充:线性方程组的**初等变换**:\n      1. 交换两个方程的位置(就好比与换矩阵的行!理解了)\n      2. 一个方程两端同乘不为0的数\n      3. 同乘不为0的数后加到另一方程去\n</code></pre>\n</li>\n</ol>\n</li>\n<li>转化成ref(下阶梯):PPT第58页<pre><code>1. pivot:第一个第一列不为0的行,提到第一行\n2. 依次把下面行的第一列第一行变为0\n3. 去掉第一列,从新开始找pivot\n4. 在此基础上转化成**rref**: 找到非0首元,把其上的全变为0\n</code></pre>\n</li>\n<li>find matrix <strong>rank</strong>:<pre><code>1. 矩阵的ref形式里含有非0行的数量 = 矩阵中independent vector(每一行就是一个vector)\n</code></pre>\n</li>\n<li>eigenvalue: AX = aX<pre><code> - 已知A可求a\n - 已知A和a可求X(eigenvector)\n</code></pre>\n</li>\n<li>矩阵加减:要同规模(与行列式不同,矩阵是每排,行列式不同的那一排(其余的每一排要对应相等))</li>\n<li>矩阵乘法:好比说AB,要求是A的列数等于B的行数, 那么得到的矩阵规模是A的行数B的列数<h2 id=\"二级结论\"><a href=\"#二级结论\" class=\"headerlink\" title=\"二级结论\"></a>二级结论</h2></li>\n<li><h3 id=\"上三角行列式\"><a href=\"#上三角行列式\" class=\"headerlink\" title=\"上三角行列式\"></a>上三角行列式</h3><pre><code>    的值D = 对角线元素乘积\n</code></pre>\n</li>\n<li><h3 id=\"n阶行列式的性质\"><a href=\"#n阶行列式的性质\" class=\"headerlink\" title=\"n阶行列式的性质\"></a>n阶行列式的性质</h3><pre><code>    1. 行列式等于它的转置行列式\n    2. 互换行列式中的两行/列,行列式变号(**行列式是一个值数,与矩阵不同**),那矩阵换行呢**??**\n    3. 行列式有两行/列对应相等或者对应成比例,行列式 = 0或者行列式有一行全为0,行列式也为0\n    4. 行列式乘一个数,就乘一行,跟矩阵一样??\n    5. 最重要的来了: 把某一行/列元素的k倍加到另一行/列,行列式的值不变不变不变!\n    6. 可以用上述这些进行行列式的计算\n</code></pre>\n</li>\n<li><h3 id=\"行列式\"><a href=\"#行列式\" class=\"headerlink\" title=\"行列式\"></a>行列式</h3><pre><code>    1. 一个特殊行列式: 范德蒙Vandermonde\n</code></pre>\n</li>\n<li><pre><code>  可交换矩阵commutable: 数量矩阵与同阶任何矩阵,A与单位阵,对角阵与对角阵\n</code></pre>\n</li>\n<li><pre><code>  方阵的幂\n</code></pre>\n</li>\n<li>矩阵的初等变换: 极其类似行列式的初等变换</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"疑问疑惑不理解\"><a href=\"#疑问疑惑不理解\" class=\"headerlink\" title=\"疑问疑惑不理解\"></a>疑问疑惑不理解</h2><ol>\n<li>矩阵这么乘啊加啊,它行列式的值不会变吗,为什么可以这样</li>\n<li>转化成ref</li>\n<li>怎么用矩阵解三元一次方程(就像解eigenvector)</li>\n<li>我记得我总结过行列式与矩阵的不同??</li>\n<li>记得PPT最后的几个性质 PPT的例题----可以lab时候做---<em>于10.31</em></li>\n</ol>\n<h2 id=\"难点和做题总结\"><a href=\"#难点和做题总结\" class=\"headerlink\" title=\"难点和做题总结\"></a>难点和做题总结</h2><ol>\n<li>求特征向量的时候,就设xyz根据向量积的基本法则求,它们积是0.</li>\n<li></li>\n</ol>\n<h1 id=\"七-函数的极限\"><a href=\"#七-函数的极限\" class=\"headerlink\" title=\"七 函数的极限\"></a>七 函数的极限</h1><h2 id=\"PPT中的基本英文的概念\"><a href=\"#PPT中的基本英文的概念\" class=\"headerlink\" title=\"PPT中的基本英文的概念:\"></a>PPT中的基本英文的概念:</h2><ol>\n<li>夹逼定理:sandwich theorem</li>\n<li>precose(formal) definition of Limit</li>\n<li>one-side limut</li>\n<li>continuity at a point</li>\n</ol>\n<h1 id=\"八-导数-11-14上课\"><a href=\"#八-导数-11-14上课\" class=\"headerlink\" title=\"八 导数 ---11.14上课\"></a>八 导数 ---11.14上课</h1><h2 id=\"ppt与课本\"><a href=\"#ppt与课本\" class=\"headerlink\" title=\"ppt与课本\"></a>ppt与课本</h2><ol>\n<li>课本书签中左右导数的具体计算过程</li>\n<li>注意题型大部分有可能是物理应用</li>\n<li>复习去年学的导数那一章，注意肯定有很多题型（比如说微分什么的计算我记得）</li>\n<li>----11.18上matlab: 搞清楚几种极值,什么<strong>local maximum,absolute minimum</strong>对应的中文概念和此时函数的导数二次导数等等的特性.总结出来!</li>\n<li>在本周quiz中,出现了一个我竟然忘记的东西!! 那就是 函数此点可导的条件有两个,<strong>1此点连续,2左导数=右导数!!!!</strong></li>\n</ol>\n<h1 id=\"九-微分方程\"><a href=\"#九-微分方程\" class=\"headerlink\" title=\"九 微分方程\"></a>九 微分方程</h1><h2 id=\"ppt提纲\"><a href=\"#ppt提纲\" class=\"headerlink\" title=\"ppt提纲\"></a>ppt提纲</h2><ol>\n<li>first-order initial value problem</li>\n<li>slope fields</li>\n<li><strong>[Euler’s method]</strong>(<a href=\"https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E6%96%B9%E6%B3%95\">https://zh.wikipedia.org/wiki/欧拉方法</a> “欧拉法”)</li>\n<li>linear equation</li>\n<li>autonomous equation</li>\n</ol>\n<ul>\n<li>equilibrium values or rest points</li>\n</ul>\n<ol start=\"6\">\n<li>phase line</li>\n<li>systems of equations</li>\n</ol>\n<ul>\n<li>autonomous</li>\n</ul>\n<ol start=\"8\">\n<li>phase planes</li>\n</ol>\n<ul>\n<li>trajectory</li>\n</ul>"},{"title":"CS_note","date":"2019-10-31T05:24:07.000Z","password":"password","top":200,"_content":"\n# 五 performance measurement and analysis\n<!--more-->\n  ##  PPT提纲\n  1. 性能equation : 1. CPU time 2. Amdahl's law\n  2. benchmarking: \n  3. 性能optimisation: \n   RISA&CISC(the two main kinds of ISA design)\n       **RISC**:reduced instruction set computers   **shorten time by reducing clock cycle**\n          simple instructions,few addressing mode\n       **CISC**:complex isc **reduce the number of instructions per program**\n          complex instructions,many addressing modes\n   Branch optimisation: pipeline hazards\n     delayed branching\n     Branch prediction\n  4. disk性能: 概念: utilisation U<sub>d</sub>=r<sub>req</sub> / r<sub>srv</sub>\n     FCFS: first-come,first served\n     SSTF:shortest seek time first(出现starvation的概念)\n     SCAN:not an acronym\n     C-SCAN:circular SCAN\n     LOOK/C-LOOK\n\n     注意比较各种情况下的好坏\n  ## 课上和课后总结理解难点\n   1. flushing the pipeline: conditional branck instructions\n   2. clock rate=machine cycles per second\n   3. \n   4. \n\n\n\n  ## 疑惑\n  1. CPU里clock cycle的理解\n  2. 对于RAM里的两种memory ports: 1. 32-bits for data/address 2. 8-bit for OPCODE, \n      是说每个横格长都是40bit吗,每一个data前面都有8bit的OPCODE吗,那怎么行得通呢\n  3. byte-addressable & word-addressable:\n          byte..:every byte has its own address. (word:every word) ","source":"_posts/Assembly.md","raw":"---\ntitle: CS_note\ndate: 2019-10-31 13:24:07\ntags: \n- CS\ncategories: \n- 2019\n- KCL\n- CS\npassword: password\ntop: 200\n---\n\n# 五 performance measurement and analysis\n<!--more-->\n  ##  PPT提纲\n  1. 性能equation : 1. CPU time 2. Amdahl's law\n  2. benchmarking: \n  3. 性能optimisation: \n   RISA&CISC(the two main kinds of ISA design)\n       **RISC**:reduced instruction set computers   **shorten time by reducing clock cycle**\n          simple instructions,few addressing mode\n       **CISC**:complex isc **reduce the number of instructions per program**\n          complex instructions,many addressing modes\n   Branch optimisation: pipeline hazards\n     delayed branching\n     Branch prediction\n  4. disk性能: 概念: utilisation U<sub>d</sub>=r<sub>req</sub> / r<sub>srv</sub>\n     FCFS: first-come,first served\n     SSTF:shortest seek time first(出现starvation的概念)\n     SCAN:not an acronym\n     C-SCAN:circular SCAN\n     LOOK/C-LOOK\n\n     注意比较各种情况下的好坏\n  ## 课上和课后总结理解难点\n   1. flushing the pipeline: conditional branck instructions\n   2. clock rate=machine cycles per second\n   3. \n   4. \n\n\n\n  ## 疑惑\n  1. CPU里clock cycle的理解\n  2. 对于RAM里的两种memory ports: 1. 32-bits for data/address 2. 8-bit for OPCODE, \n      是说每个横格长都是40bit吗,每一个data前面都有8bit的OPCODE吗,那怎么行得通呢\n  3. byte-addressable & word-addressable:\n          byte..:every byte has its own address. (word:every word) ","slug":"Assembly","published":1,"updated":"2019-10-31T05:24:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqkofx2y00075jwl1rus55t3","content":"<h1 id=\"五-performance-measurement-and-analysis\"><a href=\"#五-performance-measurement-and-analysis\" class=\"headerlink\" title=\"五 performance measurement and analysis\"></a>五 performance measurement and analysis</h1><span id=\"more\"></span>\n<h2 id=\"PPT提纲\"><a href=\"#PPT提纲\" class=\"headerlink\" title=\"PPT提纲\"></a>PPT提纲</h2><ol>\n<li><p>性能equation : 1. CPU time 2. Amdahl’s law</p>\n</li>\n<li><p>benchmarking: </p>\n</li>\n<li><p>性能optimisation:<br>RISA&amp;CISC(the two main kinds of ISA design)<br>  <strong>RISC</strong>:reduced instruction set computers   <strong>shorten time by reducing clock cycle</strong></p>\n<pre><code> simple instructions,few addressing mode\n</code></pre>\n<p>  <strong>CISC</strong>:complex isc <strong>reduce the number of instructions per program</strong></p>\n<pre><code> complex instructions,many addressing modes\n</code></pre>\n<p>Branch optimisation: pipeline hazards<br>delayed branching<br>Branch prediction</p>\n</li>\n<li><p>disk性能: 概念: utilisation U<sub>d</sub>=r<sub>req</sub> / r<sub>srv</sub><br>FCFS: first-come,first served<br>SSTF:shortest seek time first(出现starvation的概念)<br>SCAN:not an acronym<br>C-SCAN:circular SCAN<br>LOOK/C-LOOK</p>\n<p>注意比较各种情况下的好坏</p>\n<h2 id=\"课上和课后总结理解难点\"><a href=\"#课上和课后总结理解难点\" class=\"headerlink\" title=\"课上和课后总结理解难点\"></a>课上和课后总结理解难点</h2></li>\n<li><p>flushing the pipeline: conditional branck instructions</p>\n</li>\n<li><p>clock rate=machine cycles per second</p>\n</li>\n<li></li>\n<li></li>\n</ol>\n<h2 id=\"疑惑\"><a href=\"#疑惑\" class=\"headerlink\" title=\"疑惑\"></a>疑惑</h2><ol>\n<li>CPU里clock cycle的理解</li>\n<li>对于RAM里的两种memory ports: 1. 32-bits for data/address 2. 8-bit for OPCODE,<br> 是说每个横格长都是40bit吗,每一个data前面都有8bit的OPCODE吗,那怎么行得通呢</li>\n<li>byte-addressable &amp; word-addressable:<pre><code> byte..:every byte has its own address. (word:every word) \n</code></pre>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"五-performance-measurement-and-analysis\"><a href=\"#五-performance-measurement-and-analysis\" class=\"headerlink\" title=\"五 performance measurement and analysis\"></a>五 performance measurement and analysis</h1>","more":"<h2 id=\"PPT提纲\"><a href=\"#PPT提纲\" class=\"headerlink\" title=\"PPT提纲\"></a>PPT提纲</h2><ol>\n<li><p>性能equation : 1. CPU time 2. Amdahl’s law</p>\n</li>\n<li><p>benchmarking: </p>\n</li>\n<li><p>性能optimisation:<br>RISA&amp;CISC(the two main kinds of ISA design)<br>  <strong>RISC</strong>:reduced instruction set computers   <strong>shorten time by reducing clock cycle</strong></p>\n<pre><code> simple instructions,few addressing mode\n</code></pre>\n<p>  <strong>CISC</strong>:complex isc <strong>reduce the number of instructions per program</strong></p>\n<pre><code> complex instructions,many addressing modes\n</code></pre>\n<p>Branch optimisation: pipeline hazards<br>delayed branching<br>Branch prediction</p>\n</li>\n<li><p>disk性能: 概念: utilisation U<sub>d</sub>=r<sub>req</sub> / r<sub>srv</sub><br>FCFS: first-come,first served<br>SSTF:shortest seek time first(出现starvation的概念)<br>SCAN:not an acronym<br>C-SCAN:circular SCAN<br>LOOK/C-LOOK</p>\n<p>注意比较各种情况下的好坏</p>\n<h2 id=\"课上和课后总结理解难点\"><a href=\"#课上和课后总结理解难点\" class=\"headerlink\" title=\"课上和课后总结理解难点\"></a>课上和课后总结理解难点</h2></li>\n<li><p>flushing the pipeline: conditional branck instructions</p>\n</li>\n<li><p>clock rate=machine cycles per second</p>\n</li>\n<li></li>\n<li></li>\n</ol>\n<h2 id=\"疑惑\"><a href=\"#疑惑\" class=\"headerlink\" title=\"疑惑\"></a>疑惑</h2><ol>\n<li>CPU里clock cycle的理解</li>\n<li>对于RAM里的两种memory ports: 1. 32-bits for data/address 2. 8-bit for OPCODE,<br> 是说每个横格长都是40bit吗,每一个data前面都有8bit的OPCODE吗,那怎么行得通呢</li>\n<li>byte-addressable &amp; word-addressable:<pre><code> byte..:every byte has its own address. (word:every word) \n</code></pre>\n</li>\n</ol>"},{"title":"FC","date":"2019-11-13T06:15:59.000Z","password":"password","top":null,"_content":"\n# 六 graphs 7.1\n<!--more-->\n## PPT提纲 \\-\\-\\-11.13 拖延症...\n1. graph的种类:\n - simple(e.g.Niche overlap graphs in ecology): \\-\\-\\-\\-\\-\\-\\-\\-没方向undirected,没multiple edges,没loop edges\n - multigraph(e.g.Road networks):\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-没方向undirected,有multiple edges,有loop\n - directed graph(e.g.representing binary relations前几章学的):\\-\\-有方向directed,没multiple edges,有loop\n - !开头比较三者的表格理解!\n2. undirected graphs概念\n    一些概念: 两个点相连 它们adjacent,此线edge incident with 两个点\n    degree:此点含线edge的条数\n     由此有:isolated孤家寡人 & pendant(一条,degree 1,垂饰很好理解)\n    Handshaking theorem:**edge的条数=点们的degree的和/2**\n3. directed graph的一些概念(它有方向!)\n    起点is the initial or start vertex of 线,终点 is the terminal or end vertex of 线\n    in-degree:此点含作为终点的线的条数\n    out-degree:此点含作为起点的线的条数(注意loop一个圈的话是in和out都要算进去的)\n    公式:线的条数=in/out\n4. adjacency matrix\n5. Path\n   - length:所包含edge的条数\n   - Simple:doesnt contain the same **edge** twice\n   - Hamiltonian path: 在simple的基础上passing every **vertex 一次**\n6. cycle(可与path类比)\n7. complete graph (n-clique)   n-cycle\n8. subgraph\n9. connected graphs   , conneed component\n10. isomorphic同构 if isomorphism(保持结构的双射)  , invariant\n\n    ​          \n\n\n# 七 tree\n## PPT提纲`预习` \\-\\-\\-\\-11.13\n1. 定义: vertices,root,edge\n2. edge是一条线,vertix是点 ?\n3. rooted tree\n4. parent,child,siblings. leaf,internal(vertices with at least one child)\n   ancestors(以上线上的所有),descendants\n5. 应用: binanry search trees & decomposition trees\n6. 概念:level,height,balanced,subtree\n7. m-ary tree, full m-ary tree,full binary tree\n8. 有几个二级结论:\n    - 对于full binary tree :n internal vertices \\-\\-\\-\\-\\-\\-**2n+1** vertices\n    - 对于full m-ary  tree: n internal vertices \\-\\-\\-\\-\\-\\-**m*n+1** vertices\n9. 逻辑式可以用二叉树\n10. binary search trees : sorting linearly ordered list\n11. tree traversal: preoder,inorder,postorder\n\n## 课上 | 提纲\n1. 概念和定义\n    什么是TREE\n  - **simple** graph with no simple cycles(有cycle就不是tree,必须要是connected的)\n  - a unique simple path between任意两点\n  - 如果加一条edge，会产生cycle\n  - 如果减一条edge，会disconnected\n\n\n2. rooted tree\n  - 特性是其中一个vertex被当作root（放在top）\n  - 两个rooted trees are **isomorphic** \\-\\-\\-\\-\\-bijection\n    - root to rooted\n    - edges to edges\n    - non-edges to non-edges\n        ？\n\n  - basic terminology\n    - 特别注意internal vertices 和 leaves，一个有children，一个没有children。\n    - leaves没children，是垂饰in graph？\n    - level： 从root的0开始\n    - height： 也要从0开始算！ height=层数-1！\n    - balanced的概念理解过来就是每一个分支的长都要等于height或者height-1。\n    -\n3. 几个特殊的tree和二级结论：\n    - m-ary treeM\n        - 每一个internal的children不超过m\n    - full m-ary tree\n        - 每一个internal的children等于m\n        - 不明白 这怎么可能？！\n    - full binary tree\n        - 每一个internal 有2children\n    - m*n+1\n\n    - logic formula\n4. BST\n    - 注意linear order, partial order的概念\n    - lexicographical order\n5. traversal遍历 三种\n\n## 疑问\n1. graph和tree里edgetoedge和nonedge到底是什么意思 怎么用\n\n# 八 fc \\-\\-\\-11.17周日\nfinite automata : finite-state machines\n1. preliminaries:alphabets and words\n - length\n - concatenation\n - prefix,suffix\n - language\n\n2.finite automation:a theoretical model for programs using a constant amount of memory regardless of the input form.\n - finite **control device**:in any moment it can be in one of its **states**. it is hard-wired how it changes from one state to another.\n - states:(initial states,favourable states)\n - input tape:divied into cells\n - how it starts:\n   - the finite control device is in its unique initial state.\n   这句话是什么意思？？\n   - the reminder\n - how it works:\n    - moves the reading head\n    - choose the next state of its control device???\n    这句话什么意思？？\n    - the control device is hard-wired\\-\\-\\-\\-\\-\\-the next state depends on\n        - the previous state\n        - the character read from the tape\n\n    - ending:\n        - if control device is in a favourable state: the input word is accepted\n        - otherwise: rejected\n - **state transition diagrams**\n    - directed multigraph\n        - 点：the states\n        - 箭头线的标签：input\n\n\n# 作业中易错点总结\n1. \\-\\-\\-11.14 五 概率\n   1. 题型: 要运用贝叶斯定理的题目,1. 先画个*二叉树*帮助理解, 2. 计算时哪个包含哪个一定要搞清楚\n   2. 判断indenpent: 三个公式\n2. \\-\\-\\-11.14 Small六\n   - 六个工作分给五个人的答案没理解\n3. \\-\\-\\-11.14 六 graph\n   - isomorphic: f是bijection(one-to-one&onto)\n   - invariant\n   - 题型:判断一句话是否是invariant: 与onto和one-to-one结合为题目服务(例题好好理解)\n   - 题型:根据题干描述画graph时,注意看清楚给出的要求的类型!\n   - 题型:证明两个graph是isomorphic的: 画出图,再一一f对应\n   - Largetutorial最后一题:只能说思维要开阔了...\n\n\n# 疑问\n1. \\-\\-\\-11.13 六graph里directed graph的计算edge的公式,一个点可以同时有in和out,且数量不同,那怎么算?","source":"_posts/FC.md","raw":"---\ntitle: FC\ndate: 2019-11-13 14:15:59\ntags:\ncategories: \n- 2019\n- KCL\n- FC\npassword: password\ntop:\n---\n\n# 六 graphs 7.1\n<!--more-->\n## PPT提纲 \\-\\-\\-11.13 拖延症...\n1. graph的种类:\n - simple(e.g.Niche overlap graphs in ecology): \\-\\-\\-\\-\\-\\-\\-\\-没方向undirected,没multiple edges,没loop edges\n - multigraph(e.g.Road networks):\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-没方向undirected,有multiple edges,有loop\n - directed graph(e.g.representing binary relations前几章学的):\\-\\-有方向directed,没multiple edges,有loop\n - !开头比较三者的表格理解!\n2. undirected graphs概念\n    一些概念: 两个点相连 它们adjacent,此线edge incident with 两个点\n    degree:此点含线edge的条数\n     由此有:isolated孤家寡人 & pendant(一条,degree 1,垂饰很好理解)\n    Handshaking theorem:**edge的条数=点们的degree的和/2**\n3. directed graph的一些概念(它有方向!)\n    起点is the initial or start vertex of 线,终点 is the terminal or end vertex of 线\n    in-degree:此点含作为终点的线的条数\n    out-degree:此点含作为起点的线的条数(注意loop一个圈的话是in和out都要算进去的)\n    公式:线的条数=in/out\n4. adjacency matrix\n5. Path\n   - length:所包含edge的条数\n   - Simple:doesnt contain the same **edge** twice\n   - Hamiltonian path: 在simple的基础上passing every **vertex 一次**\n6. cycle(可与path类比)\n7. complete graph (n-clique)   n-cycle\n8. subgraph\n9. connected graphs   , conneed component\n10. isomorphic同构 if isomorphism(保持结构的双射)  , invariant\n\n    ​          \n\n\n# 七 tree\n## PPT提纲`预习` \\-\\-\\-\\-11.13\n1. 定义: vertices,root,edge\n2. edge是一条线,vertix是点 ?\n3. rooted tree\n4. parent,child,siblings. leaf,internal(vertices with at least one child)\n   ancestors(以上线上的所有),descendants\n5. 应用: binanry search trees & decomposition trees\n6. 概念:level,height,balanced,subtree\n7. m-ary tree, full m-ary tree,full binary tree\n8. 有几个二级结论:\n    - 对于full binary tree :n internal vertices \\-\\-\\-\\-\\-\\-**2n+1** vertices\n    - 对于full m-ary  tree: n internal vertices \\-\\-\\-\\-\\-\\-**m*n+1** vertices\n9. 逻辑式可以用二叉树\n10. binary search trees : sorting linearly ordered list\n11. tree traversal: preoder,inorder,postorder\n\n## 课上 | 提纲\n1. 概念和定义\n    什么是TREE\n  - **simple** graph with no simple cycles(有cycle就不是tree,必须要是connected的)\n  - a unique simple path between任意两点\n  - 如果加一条edge，会产生cycle\n  - 如果减一条edge，会disconnected\n\n\n2. rooted tree\n  - 特性是其中一个vertex被当作root（放在top）\n  - 两个rooted trees are **isomorphic** \\-\\-\\-\\-\\-bijection\n    - root to rooted\n    - edges to edges\n    - non-edges to non-edges\n        ？\n\n  - basic terminology\n    - 特别注意internal vertices 和 leaves，一个有children，一个没有children。\n    - leaves没children，是垂饰in graph？\n    - level： 从root的0开始\n    - height： 也要从0开始算！ height=层数-1！\n    - balanced的概念理解过来就是每一个分支的长都要等于height或者height-1。\n    -\n3. 几个特殊的tree和二级结论：\n    - m-ary treeM\n        - 每一个internal的children不超过m\n    - full m-ary tree\n        - 每一个internal的children等于m\n        - 不明白 这怎么可能？！\n    - full binary tree\n        - 每一个internal 有2children\n    - m*n+1\n\n    - logic formula\n4. BST\n    - 注意linear order, partial order的概念\n    - lexicographical order\n5. traversal遍历 三种\n\n## 疑问\n1. graph和tree里edgetoedge和nonedge到底是什么意思 怎么用\n\n# 八 fc \\-\\-\\-11.17周日\nfinite automata : finite-state machines\n1. preliminaries:alphabets and words\n - length\n - concatenation\n - prefix,suffix\n - language\n\n2.finite automation:a theoretical model for programs using a constant amount of memory regardless of the input form.\n - finite **control device**:in any moment it can be in one of its **states**. it is hard-wired how it changes from one state to another.\n - states:(initial states,favourable states)\n - input tape:divied into cells\n - how it starts:\n   - the finite control device is in its unique initial state.\n   这句话是什么意思？？\n   - the reminder\n - how it works:\n    - moves the reading head\n    - choose the next state of its control device???\n    这句话什么意思？？\n    - the control device is hard-wired\\-\\-\\-\\-\\-\\-the next state depends on\n        - the previous state\n        - the character read from the tape\n\n    - ending:\n        - if control device is in a favourable state: the input word is accepted\n        - otherwise: rejected\n - **state transition diagrams**\n    - directed multigraph\n        - 点：the states\n        - 箭头线的标签：input\n\n\n# 作业中易错点总结\n1. \\-\\-\\-11.14 五 概率\n   1. 题型: 要运用贝叶斯定理的题目,1. 先画个*二叉树*帮助理解, 2. 计算时哪个包含哪个一定要搞清楚\n   2. 判断indenpent: 三个公式\n2. \\-\\-\\-11.14 Small六\n   - 六个工作分给五个人的答案没理解\n3. \\-\\-\\-11.14 六 graph\n   - isomorphic: f是bijection(one-to-one&onto)\n   - invariant\n   - 题型:判断一句话是否是invariant: 与onto和one-to-one结合为题目服务(例题好好理解)\n   - 题型:根据题干描述画graph时,注意看清楚给出的要求的类型!\n   - 题型:证明两个graph是isomorphic的: 画出图,再一一f对应\n   - Largetutorial最后一题:只能说思维要开阔了...\n\n\n# 疑问\n1. \\-\\-\\-11.13 六graph里directed graph的计算edge的公式,一个点可以同时有in和out,且数量不同,那怎么算?","slug":"FC","published":1,"updated":"2019-11-13T06:15:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqkofx2z00085jwl09n52xzt","content":"<h1 id=\"六-graphs-7-1\"><a href=\"#六-graphs-7-1\" class=\"headerlink\" title=\"六 graphs 7.1\"></a>六 graphs 7.1</h1><span id=\"more\"></span>\n<h2 id=\"PPT提纲-11-13-拖延症…\"><a href=\"#PPT提纲-11-13-拖延症…\" class=\"headerlink\" title=\"PPT提纲 ---11.13 拖延症…\"></a>PPT提纲 ---11.13 拖延症…</h2><ol>\n<li>graph的种类:</li>\n</ol>\n<ul>\n<li>simple(e.g.Niche overlap graphs in ecology): --------没方向undirected,没multiple edges,没loop edges</li>\n<li>multigraph(e.g.Road networks):----------------没方向undirected,有multiple edges,有loop</li>\n<li>directed graph(e.g.representing binary relations前几章学的):--有方向directed,没multiple edges,有loop</li>\n<li>!开头比较三者的表格理解!</li>\n</ul>\n<ol start=\"2\">\n<li><p>undirected graphs概念<br> 一些概念: 两个点相连 它们adjacent,此线edge incident with 两个点<br> degree:此点含线edge的条数<br>  由此有:isolated孤家寡人 &amp; pendant(一条,degree 1,垂饰很好理解)<br> Handshaking theorem:<strong>edge的条数=点们的degree的和/2</strong></p>\n</li>\n<li><p>directed graph的一些概念(它有方向!)<br> 起点is the initial or start vertex of 线,终点 is the terminal or end vertex of 线<br> in-degree:此点含作为终点的线的条数<br> out-degree:此点含作为起点的线的条数(注意loop一个圈的话是in和out都要算进去的)<br> 公式:线的条数=in/out</p>\n</li>\n<li><p>adjacency matrix</p>\n</li>\n<li><p>Path</p>\n<ul>\n<li>length:所包含edge的条数</li>\n<li>Simple:doesnt contain the same <strong>edge</strong> twice</li>\n<li>Hamiltonian path: 在simple的基础上passing every <strong>vertex 一次</strong></li>\n</ul>\n</li>\n<li><p>cycle(可与path类比)</p>\n</li>\n<li><p>complete graph (n-clique)   n-cycle</p>\n</li>\n<li><p>subgraph</p>\n</li>\n<li><p>connected graphs   , conneed component</p>\n</li>\n<li><p>isomorphic同构 if isomorphism(保持结构的双射)  , invariant</p>\n<p>​          </p>\n</li>\n</ol>\n<h1 id=\"七-tree\"><a href=\"#七-tree\" class=\"headerlink\" title=\"七 tree\"></a>七 tree</h1><h2 id=\"PPT提纲预习-11-13\"><a href=\"#PPT提纲预习-11-13\" class=\"headerlink\" title=\"PPT提纲预习 ----11.13\"></a>PPT提纲<code>预习</code> ----11.13</h2><ol>\n<li>定义: vertices,root,edge</li>\n<li>edge是一条线,vertix是点 ?</li>\n<li>rooted tree</li>\n<li>parent,child,siblings. leaf,internal(vertices with at least one child)<br>ancestors(以上线上的所有),descendants</li>\n<li>应用: binanry search trees &amp; decomposition trees</li>\n<li>概念:level,height,balanced,subtree</li>\n<li>m-ary tree, full m-ary tree,full binary tree</li>\n<li>有几个二级结论:<ul>\n<li>对于full binary tree :n internal vertices ------<strong>2n+1</strong> vertices</li>\n<li>对于full m-ary  tree: n internal vertices ------<strong>m*n+1</strong> vertices</li>\n</ul>\n</li>\n<li>逻辑式可以用二叉树</li>\n<li>binary search trees : sorting linearly ordered list</li>\n<li>tree traversal: preoder,inorder,postorder</li>\n</ol>\n<h2 id=\"课上-提纲\"><a href=\"#课上-提纲\" class=\"headerlink\" title=\"课上 | 提纲\"></a>课上 | 提纲</h2><ol>\n<li>概念和定义<br> 什么是TREE</li>\n</ol>\n<ul>\n<li><strong>simple</strong> graph with no simple cycles(有cycle就不是tree,必须要是connected的)</li>\n<li>a unique simple path between任意两点</li>\n<li>如果加一条edge，会产生cycle</li>\n<li>如果减一条edge，会disconnected</li>\n</ul>\n<ol start=\"2\">\n<li>rooted tree</li>\n</ol>\n<ul>\n<li><p>特性是其中一个vertex被当作root（放在top）</p>\n</li>\n<li><p>两个rooted trees are <strong>isomorphic</strong> -----bijection</p>\n<ul>\n<li>root to rooted</li>\n<li>edges to edges</li>\n<li>non-edges to non-edges<br>  ？</li>\n</ul>\n</li>\n<li><p>basic terminology</p>\n<ul>\n<li>特别注意internal vertices 和 leaves，一个有children，一个没有children。</li>\n<li>leaves没children，是垂饰in graph？</li>\n<li>level： 从root的0开始</li>\n<li>height： 也要从0开始算！ height=层数-1！</li>\n<li>balanced的概念理解过来就是每一个分支的长都要等于height或者height-1。</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li><p>几个特殊的tree和二级结论：</p>\n<ul>\n<li><p>m-ary treeM</p>\n<ul>\n<li>每一个internal的children不超过m</li>\n</ul>\n</li>\n<li><p>full m-ary tree</p>\n<ul>\n<li>每一个internal的children等于m</li>\n<li>不明白 这怎么可能？！</li>\n</ul>\n</li>\n<li><p>full binary tree</p>\n<ul>\n<li>每一个internal 有2children</li>\n</ul>\n</li>\n<li><p>m*n+1</p>\n</li>\n<li><p>logic formula</p>\n</li>\n</ul>\n</li>\n<li><p>BST</p>\n<ul>\n<li>注意linear order, partial order的概念</li>\n<li>lexicographical order</li>\n</ul>\n</li>\n<li><p>traversal遍历 三种</p>\n</li>\n</ol>\n<h2 id=\"疑问\"><a href=\"#疑问\" class=\"headerlink\" title=\"疑问\"></a>疑问</h2><ol>\n<li>graph和tree里edgetoedge和nonedge到底是什么意思 怎么用</li>\n</ol>\n<h1 id=\"八-fc-11-17周日\"><a href=\"#八-fc-11-17周日\" class=\"headerlink\" title=\"八 fc ---11.17周日\"></a>八 fc ---11.17周日</h1><p>finite automata : finite-state machines</p>\n<ol>\n<li>preliminaries:alphabets and words</li>\n</ol>\n<ul>\n<li>length</li>\n<li>concatenation</li>\n<li>prefix,suffix</li>\n<li>language</li>\n</ul>\n<p>2.finite automation:a theoretical model for programs using a constant amount of memory regardless of the input form.</p>\n<ul>\n<li><p>finite <strong>control device</strong>:in any moment it can be in one of its <strong>states</strong>. it is hard-wired how it changes from one state to another.</p>\n</li>\n<li><p>states:(initial states,favourable states)</p>\n</li>\n<li><p>input tape:divied into cells</p>\n</li>\n<li><p>how it starts:</p>\n<ul>\n<li>the finite control device is in its unique initial state.<br>这句话是什么意思？？</li>\n<li>the reminder</li>\n</ul>\n</li>\n<li><p>how it works:</p>\n<ul>\n<li><p>moves the reading head</p>\n</li>\n<li><p>choose the next state of its control device???<br>这句话什么意思？？</p>\n</li>\n<li><p>the control device is hard-wired------the next state depends on</p>\n<ul>\n<li>the previous state</li>\n<li>the character read from the tape</li>\n</ul>\n</li>\n<li><p>ending:</p>\n<ul>\n<li>if control device is in a favourable state: the input word is accepted</li>\n<li>otherwise: rejected</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>state transition diagrams</strong></p>\n<ul>\n<li>directed multigraph<ul>\n<li>点：the states</li>\n<li>箭头线的标签：input</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"作业中易错点总结\"><a href=\"#作业中易错点总结\" class=\"headerlink\" title=\"作业中易错点总结\"></a>作业中易错点总结</h1><ol>\n<li>---11.14 五 概率<ol>\n<li>题型: 要运用贝叶斯定理的题目,1. 先画个<em>二叉树</em>帮助理解, 2. 计算时哪个包含哪个一定要搞清楚</li>\n<li>判断indenpent: 三个公式</li>\n</ol>\n</li>\n<li>---11.14 Small六<ul>\n<li>六个工作分给五个人的答案没理解</li>\n</ul>\n</li>\n<li>---11.14 六 graph<ul>\n<li>isomorphic: f是bijection(one-to-one&amp;onto)</li>\n<li>invariant</li>\n<li>题型:判断一句话是否是invariant: 与onto和one-to-one结合为题目服务(例题好好理解)</li>\n<li>题型:根据题干描述画graph时,注意看清楚给出的要求的类型!</li>\n<li>题型:证明两个graph是isomorphic的: 画出图,再一一f对应</li>\n<li>Largetutorial最后一题:只能说思维要开阔了…</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"疑问-1\"><a href=\"#疑问-1\" class=\"headerlink\" title=\"疑问\"></a>疑问</h1><ol>\n<li>---11.13 六graph里directed graph的计算edge的公式,一个点可以同时有in和out,且数量不同,那怎么算?</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"六-graphs-7-1\"><a href=\"#六-graphs-7-1\" class=\"headerlink\" title=\"六 graphs 7.1\"></a>六 graphs 7.1</h1>","more":"<h2 id=\"PPT提纲-11-13-拖延症…\"><a href=\"#PPT提纲-11-13-拖延症…\" class=\"headerlink\" title=\"PPT提纲 ---11.13 拖延症…\"></a>PPT提纲 ---11.13 拖延症…</h2><ol>\n<li>graph的种类:</li>\n</ol>\n<ul>\n<li>simple(e.g.Niche overlap graphs in ecology): --------没方向undirected,没multiple edges,没loop edges</li>\n<li>multigraph(e.g.Road networks):----------------没方向undirected,有multiple edges,有loop</li>\n<li>directed graph(e.g.representing binary relations前几章学的):--有方向directed,没multiple edges,有loop</li>\n<li>!开头比较三者的表格理解!</li>\n</ul>\n<ol start=\"2\">\n<li><p>undirected graphs概念<br> 一些概念: 两个点相连 它们adjacent,此线edge incident with 两个点<br> degree:此点含线edge的条数<br>  由此有:isolated孤家寡人 &amp; pendant(一条,degree 1,垂饰很好理解)<br> Handshaking theorem:<strong>edge的条数=点们的degree的和/2</strong></p>\n</li>\n<li><p>directed graph的一些概念(它有方向!)<br> 起点is the initial or start vertex of 线,终点 is the terminal or end vertex of 线<br> in-degree:此点含作为终点的线的条数<br> out-degree:此点含作为起点的线的条数(注意loop一个圈的话是in和out都要算进去的)<br> 公式:线的条数=in/out</p>\n</li>\n<li><p>adjacency matrix</p>\n</li>\n<li><p>Path</p>\n<ul>\n<li>length:所包含edge的条数</li>\n<li>Simple:doesnt contain the same <strong>edge</strong> twice</li>\n<li>Hamiltonian path: 在simple的基础上passing every <strong>vertex 一次</strong></li>\n</ul>\n</li>\n<li><p>cycle(可与path类比)</p>\n</li>\n<li><p>complete graph (n-clique)   n-cycle</p>\n</li>\n<li><p>subgraph</p>\n</li>\n<li><p>connected graphs   , conneed component</p>\n</li>\n<li><p>isomorphic同构 if isomorphism(保持结构的双射)  , invariant</p>\n<p>​          </p>\n</li>\n</ol>\n<h1 id=\"七-tree\"><a href=\"#七-tree\" class=\"headerlink\" title=\"七 tree\"></a>七 tree</h1><h2 id=\"PPT提纲预习-11-13\"><a href=\"#PPT提纲预习-11-13\" class=\"headerlink\" title=\"PPT提纲预习 ----11.13\"></a>PPT提纲<code>预习</code> ----11.13</h2><ol>\n<li>定义: vertices,root,edge</li>\n<li>edge是一条线,vertix是点 ?</li>\n<li>rooted tree</li>\n<li>parent,child,siblings. leaf,internal(vertices with at least one child)<br>ancestors(以上线上的所有),descendants</li>\n<li>应用: binanry search trees &amp; decomposition trees</li>\n<li>概念:level,height,balanced,subtree</li>\n<li>m-ary tree, full m-ary tree,full binary tree</li>\n<li>有几个二级结论:<ul>\n<li>对于full binary tree :n internal vertices ------<strong>2n+1</strong> vertices</li>\n<li>对于full m-ary  tree: n internal vertices ------<strong>m*n+1</strong> vertices</li>\n</ul>\n</li>\n<li>逻辑式可以用二叉树</li>\n<li>binary search trees : sorting linearly ordered list</li>\n<li>tree traversal: preoder,inorder,postorder</li>\n</ol>\n<h2 id=\"课上-提纲\"><a href=\"#课上-提纲\" class=\"headerlink\" title=\"课上 | 提纲\"></a>课上 | 提纲</h2><ol>\n<li>概念和定义<br> 什么是TREE</li>\n</ol>\n<ul>\n<li><strong>simple</strong> graph with no simple cycles(有cycle就不是tree,必须要是connected的)</li>\n<li>a unique simple path between任意两点</li>\n<li>如果加一条edge，会产生cycle</li>\n<li>如果减一条edge，会disconnected</li>\n</ul>\n<ol start=\"2\">\n<li>rooted tree</li>\n</ol>\n<ul>\n<li><p>特性是其中一个vertex被当作root（放在top）</p>\n</li>\n<li><p>两个rooted trees are <strong>isomorphic</strong> -----bijection</p>\n<ul>\n<li>root to rooted</li>\n<li>edges to edges</li>\n<li>non-edges to non-edges<br>  ？</li>\n</ul>\n</li>\n<li><p>basic terminology</p>\n<ul>\n<li>特别注意internal vertices 和 leaves，一个有children，一个没有children。</li>\n<li>leaves没children，是垂饰in graph？</li>\n<li>level： 从root的0开始</li>\n<li>height： 也要从0开始算！ height=层数-1！</li>\n<li>balanced的概念理解过来就是每一个分支的长都要等于height或者height-1。</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<ol start=\"3\">\n<li><p>几个特殊的tree和二级结论：</p>\n<ul>\n<li><p>m-ary treeM</p>\n<ul>\n<li>每一个internal的children不超过m</li>\n</ul>\n</li>\n<li><p>full m-ary tree</p>\n<ul>\n<li>每一个internal的children等于m</li>\n<li>不明白 这怎么可能？！</li>\n</ul>\n</li>\n<li><p>full binary tree</p>\n<ul>\n<li>每一个internal 有2children</li>\n</ul>\n</li>\n<li><p>m*n+1</p>\n</li>\n<li><p>logic formula</p>\n</li>\n</ul>\n</li>\n<li><p>BST</p>\n<ul>\n<li>注意linear order, partial order的概念</li>\n<li>lexicographical order</li>\n</ul>\n</li>\n<li><p>traversal遍历 三种</p>\n</li>\n</ol>\n<h2 id=\"疑问\"><a href=\"#疑问\" class=\"headerlink\" title=\"疑问\"></a>疑问</h2><ol>\n<li>graph和tree里edgetoedge和nonedge到底是什么意思 怎么用</li>\n</ol>\n<h1 id=\"八-fc-11-17周日\"><a href=\"#八-fc-11-17周日\" class=\"headerlink\" title=\"八 fc ---11.17周日\"></a>八 fc ---11.17周日</h1><p>finite automata : finite-state machines</p>\n<ol>\n<li>preliminaries:alphabets and words</li>\n</ol>\n<ul>\n<li>length</li>\n<li>concatenation</li>\n<li>prefix,suffix</li>\n<li>language</li>\n</ul>\n<p>2.finite automation:a theoretical model for programs using a constant amount of memory regardless of the input form.</p>\n<ul>\n<li><p>finite <strong>control device</strong>:in any moment it can be in one of its <strong>states</strong>. it is hard-wired how it changes from one state to another.</p>\n</li>\n<li><p>states:(initial states,favourable states)</p>\n</li>\n<li><p>input tape:divied into cells</p>\n</li>\n<li><p>how it starts:</p>\n<ul>\n<li>the finite control device is in its unique initial state.<br>这句话是什么意思？？</li>\n<li>the reminder</li>\n</ul>\n</li>\n<li><p>how it works:</p>\n<ul>\n<li><p>moves the reading head</p>\n</li>\n<li><p>choose the next state of its control device???<br>这句话什么意思？？</p>\n</li>\n<li><p>the control device is hard-wired------the next state depends on</p>\n<ul>\n<li>the previous state</li>\n<li>the character read from the tape</li>\n</ul>\n</li>\n<li><p>ending:</p>\n<ul>\n<li>if control device is in a favourable state: the input word is accepted</li>\n<li>otherwise: rejected</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>state transition diagrams</strong></p>\n<ul>\n<li>directed multigraph<ul>\n<li>点：the states</li>\n<li>箭头线的标签：input</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"作业中易错点总结\"><a href=\"#作业中易错点总结\" class=\"headerlink\" title=\"作业中易错点总结\"></a>作业中易错点总结</h1><ol>\n<li>---11.14 五 概率<ol>\n<li>题型: 要运用贝叶斯定理的题目,1. 先画个<em>二叉树</em>帮助理解, 2. 计算时哪个包含哪个一定要搞清楚</li>\n<li>判断indenpent: 三个公式</li>\n</ol>\n</li>\n<li>---11.14 Small六<ul>\n<li>六个工作分给五个人的答案没理解</li>\n</ul>\n</li>\n<li>---11.14 六 graph<ul>\n<li>isomorphic: f是bijection(one-to-one&amp;onto)</li>\n<li>invariant</li>\n<li>题型:判断一句话是否是invariant: 与onto和one-to-one结合为题目服务(例题好好理解)</li>\n<li>题型:根据题干描述画graph时,注意看清楚给出的要求的类型!</li>\n<li>题型:证明两个graph是isomorphic的: 画出图,再一一f对应</li>\n<li>Largetutorial最后一题:只能说思维要开阔了…</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"疑问-1\"><a href=\"#疑问-1\" class=\"headerlink\" title=\"疑问\"></a>疑问</h1><ol>\n<li>---11.13 六graph里directed graph的计算edge的公式,一个点可以同时有in和out,且数量不同,那怎么算?</li>\n</ol>"},{"title":"CS","date":"2019-10-31T05:24:07.000Z","password":"password","top":200,"_content":"\n# 一\n## 冯诺依曼结构\n<!--more-->\n# 二 Assembly 1\n1. CPU\n    registers\n    ALU\n    control unit\n    data bus\n2. memory organisation\n    byte-addressable/word-addressable\n    RAM chips:random access memory  lengthXwidth\n3. I/O\n4. Bus\n5. Clocks\n    clock cycles\n    clock frequency(互为倒数)\n    CPU time\n6. Interrupts\n7. MARIE ISA\n     - load: load contents of address x into AC\n     - store: store the contents of AC at address X\n     - add\n     - subt\n     - input/output\n     - halt: 暂停\n     - skipcond: skip next instruction on condition\n     - jump X: load the value of X into PC\n   那么load store jump好像没区别啊?\n8. RTL: register transfer language\n# 三 Assembly 2\n1. fetch-decode-execute cycle\n    PC\n    MAR\n    IR\n    PC\n    MAR\n    MBR\n2. Interrupt processing:PPT上有两个流程图\n     flags register\n     maskable\n     Nonmaskable interrupts\n3. 注意PPT里一个简单program在computer里运行的流程图!\n4. Assemblers汇编器的工作流程:PPT!\n     1st pass: symbol table\n     2nd pass: the instructions are completed using the value from the **symbol table**.\n     完成将汇编语言变成机器语言的过程\n5. 一个汇编语言程序:main和mainloop是address label.?? main&mainloop的理解\n```\n      .equ SREG,0x3F\n      .org\n      main:   ldi r16,0\n              out SREG,r16\n      mainloop: rjmp mainloop\n```\n6. indirect addressing mode时:\n7. JnS:operates by storing the current PC value in the first address of the routine itself,then continue with the instruction following that.    Jump-and-store.\n    JumpI:return from the subroutine.\n8. Clear\n9.  if\n10. for/while\n11. Procedure invocation:f()\n12. 两个samole constructs!!\n# 四 instruction set architectures/pipelines\n1. instruction formats\n      1. little endian\n      big endian:正常的\n      比较: ///\n      1. how the CPU store data(3种)CPU的特殊内部存储结构\n        ![三种结构](https://wkretype.bdimg.com/retype/zoom/6a64416127d3240c8447ef13?pn=7&o=jpg_6&md5sum=1830449c7405e4dd2a4f0bb2c1b9644e&sign=df6cd0909c&png=126611-139487&jpg=805027-909057)\n          1. stack: instructions and operands都从stack里拿,先进后出\n              stack机器用1/0operand instructions\n              Push X, Pop X\n              Add/Mult\n          2. accumulator: operand在memory中\n          3. general purpose register: 比accumulator快,instructions更长:\n              Memory-memory:\n              register-memory:至少1个operand在register.\n              load-store:无operand在memory.   \n      2. 注意0123address machimes 的code(作业中有) \n2. instruction types\n\n3. addressing: where the **operand** is located.(a constant, a register, memory location)\n     immediate\n     direct\n     indirect\n     indexed:final=base+index\n4. instruction level Pipelining\n    S = NKt<sub>p</sub> / (K+N-1)t<sub>p</sub>\n    =K\n    pipeline hazards隐患\n\n# 五 performance measurement and analysis\n\n  ##  PPT提纲\n  1. 性能equation : 1. CPU time 2. Amdahl's law\n  2. benchmarking: \n  3. 性能optimisation: \n   RISA&CISC(the two main kinds of ISA design)指令集类型\n       **RISC**:reduced instruction set computers   **shorten time by reducing clock cycle**\n          simple instructions,few addressing mode\n       **CISC**:complex isc **reduce the number of instructions per program**\n          complex instructions,many addressing modes\n   Branch optimisation: pipeline hazards\n     delayed branching\n     Branch prediction\n  4. disk性能: 概念: utilisation U<sub>d</sub>=r<sub>req</sub> / r<sub>srv</sub>\n     FCFS: first-come,first served\n     SSTF:shortest seek time first(出现starvation的概念)\n     SCAN:not an acronym\n     C-SCAN:circular SCAN\n     LOOK/C-LOOK\n\n     注意比较各种情况下的好坏\n  ## 课上和课后总结理解难点\n\n# 七 二进制① JoshM\n  ## PPT提纲\n  1. negative numbers in binary: 几个概念: unsighed binary\n      formats: \n    1. signed magnitude  : MSB(the most significant bit) is a sign bit\\-\\-\\-0+&1-  源码\n        0的源码有两种:00000000&10000000,0的补码只有:00000000.\n    2. One's complement. 反码\n    3. Two's complement  补码(对于正数补码相同)\n          [X]<sub>补</sub> = X + M\n          这个M是mod M,模数M根据机器数的位数而定,位数为81则M=2<sup>8</sup>    \n      对于负数:\n      1.真值:将各位变反,then最低位+1\n      2.源码: 符号位不变,其余各位变反then最低位+1\n        11111111是-1的补码,10000000是-128的补码.0的补码只有一个:00000000.\n\n    4. 注意优缺点!!!(PPT17)\n    5. 各方式表示的范围(8bits)\n        unsigned binary: 0 \\-\\-\\-255\n        源码:-127(11111111)\\-\\-\\-+127(01111111)\n        反码:-127(11111111)\\-\\-\\-+127(01111111)\n        补码:-128(10000000)\\-\\-\\-+127(01111111)\n\n\n  ## 二进制运算法则\n    1. 10转2:减权定位\n             除基取余(直到商为0):从最下面的余数开始!\n       小数10转2:减权定位\n                乘基取整:从最上面的余数开始\n    2. 2转10: 按权相加(小数2转10同)\n    3. 十转八:除基取余比较简单\n\n# 八 binary ②\n## 上课 PPT\n1. unsigned: \n   1. unsigned addtion\\-\\-\\-**overflow**\n      - 是一个圈,从111再加就是000了\n      - incrementinf by one **?!?!** 那几句话没理解PPT第5页\n   2. subtraction (注意借位,需要练习)\n       - first check the minus...???\n   3. multipication\n       - 感觉像分列式,分几个part乘,最后加一起.\n   4. division: 很像十进制的除法方式.\n2. signed magnitude arithmetric:\n    1. 加\n     1. check the **sign** firstly\n     2. 如果**符号不同**: 比较绝对值大小\\-\\-\\-\\-\\-\\-用大的减小的\\-\\-\\-\\-\\-\\-用绝对值大的数的sign.\n     3. overflow 那个圈没理解\n    2. 减\n     1. x-y: - y如果是`负`\\-\\-\\-\\-\\-\\-变成**x+(-y)**\n             - y是`正`且x是`负`\\-\\-\\-\\-变成*-(-x+y)**\n             - y是`正`且x是`正`\\-\\-\\-\\-变成**(-y)+x**\n             - 但我第一次做作业,全错...\n3. one's complement arithmetic\n     1. 反码,加完多一位,再加(多么神奇...需要记忆以及与其它区分)\n4. two's complement arithmetic\n     1. 忽略加完后的第一位.\n     2. **detecting overflow**\n         新概念:carry和borrow\n         carry-in = carry-out\\-\\-\\-\\-\\-\\-no overflow\n         but这个是怎么计算的???\n\n5. Error detection and correction:\n     1. hamming distance:不同的位数\n     2. parity bit :要sufficient才能correct error,\n     3. code word : 存在的必要是什么\n     4. 是在bus上传递数据用的吗?那学过的存储模式pocode+address跟这个是什么关系?\n\n\n## 重难点解析\n1. 三个overflow的图一定要好好理解.\n2. ~~真值,补码,反码,源码之间的变化!!~~\n3. 补码overflow detect\n4. sign的减法和乘除\n\n\n\n# 九 floating-point binary\n## 预习+回看\n1. \n\n# 疑惑\n1. Assembly 2 里 JnS \n2. 那么load store jump好像没区别啊? \\-\\-\\-11.6\n3. 对于Assembly1作业中的第3题.醍醐灌顶:\n    A 1-bit address can address two words (0, 1).\n    A 2-bit address can address four words (00, 01, 10, 11).\n    A 3-bit address can address eight words (000, 001, 010, 011, 100, 101, 110, 111).\n    but![答案不一样](https://www.coursehero.com/doc-asset/bg/d6bc39dcf48520faf6897593e05282dad7676ae0/splits/v9.frq.clean/split-1-page-1-html-bg.jpg)\n4. **八\\-\\-\\-二进制2**需要加强理解和动手去做的:1. ~~三种表示二进制数的转化自己去操作~~. 2. 进制直接每种情况的转化去运算.   \\-\\-\\-11.13\n5. ~~对于加了sign的源码,为什么不是额外加一位呢,不影响原本的真值吗?~~  \\-\\-\\-11.13八课上\n6. 对于补码的运算,手机里的照片 理解和解惑. \\-\\-\\-11.13八课上\n7. \\-\\-\\-11.13晚自习 二进制转八进制,万一位数除不尽3怎么办?\n\n# 作业tutorial 的总结\n1. \\-\\-\\-11.13晚,week7,binary1.\n   - 减权定位终于知道了怎么做\n   - 小数10转2,乘积取整还不会\n   - 4个表示方法的范围需要记住\n2. \\-\\-\\-11.13晚,week8,binary2.\n   - unsigned减法必须是正数,因为它无负数\n   - unsigned除法中除不尽就用reminder余数\n   - signed的减法中,1110111-0010001为何overflow呢\n   - 0010101-0110011算不对啊,按照(-y)+x的规则啊\n   - signed的乘除法,全错.(我原本的方法是忽略头一位,再在最后加上头一位)\n   - 反码的加:01101+00100 为何overflow\n   - 补码的加: carry-in和carry-out和overflow detected 是什么\n   - 一定要记住正数的反码和补码都是它,运算的时候一定要仔细1+1变为0\n     ","source":"_posts/CS.md","raw":"---\ntitle: CS\ndate: 2019-10-31 13:24:07\ntags: \n- CS\ncategories: \n- 2019\n- KCL\n- CS\npassword: password\ntop: 200\n---\n\n# 一\n## 冯诺依曼结构\n<!--more-->\n# 二 Assembly 1\n1. CPU\n    registers\n    ALU\n    control unit\n    data bus\n2. memory organisation\n    byte-addressable/word-addressable\n    RAM chips:random access memory  lengthXwidth\n3. I/O\n4. Bus\n5. Clocks\n    clock cycles\n    clock frequency(互为倒数)\n    CPU time\n6. Interrupts\n7. MARIE ISA\n     - load: load contents of address x into AC\n     - store: store the contents of AC at address X\n     - add\n     - subt\n     - input/output\n     - halt: 暂停\n     - skipcond: skip next instruction on condition\n     - jump X: load the value of X into PC\n   那么load store jump好像没区别啊?\n8. RTL: register transfer language\n# 三 Assembly 2\n1. fetch-decode-execute cycle\n    PC\n    MAR\n    IR\n    PC\n    MAR\n    MBR\n2. Interrupt processing:PPT上有两个流程图\n     flags register\n     maskable\n     Nonmaskable interrupts\n3. 注意PPT里一个简单program在computer里运行的流程图!\n4. Assemblers汇编器的工作流程:PPT!\n     1st pass: symbol table\n     2nd pass: the instructions are completed using the value from the **symbol table**.\n     完成将汇编语言变成机器语言的过程\n5. 一个汇编语言程序:main和mainloop是address label.?? main&mainloop的理解\n```\n      .equ SREG,0x3F\n      .org\n      main:   ldi r16,0\n              out SREG,r16\n      mainloop: rjmp mainloop\n```\n6. indirect addressing mode时:\n7. JnS:operates by storing the current PC value in the first address of the routine itself,then continue with the instruction following that.    Jump-and-store.\n    JumpI:return from the subroutine.\n8. Clear\n9.  if\n10. for/while\n11. Procedure invocation:f()\n12. 两个samole constructs!!\n# 四 instruction set architectures/pipelines\n1. instruction formats\n      1. little endian\n      big endian:正常的\n      比较: ///\n      1. how the CPU store data(3种)CPU的特殊内部存储结构\n        ![三种结构](https://wkretype.bdimg.com/retype/zoom/6a64416127d3240c8447ef13?pn=7&o=jpg_6&md5sum=1830449c7405e4dd2a4f0bb2c1b9644e&sign=df6cd0909c&png=126611-139487&jpg=805027-909057)\n          1. stack: instructions and operands都从stack里拿,先进后出\n              stack机器用1/0operand instructions\n              Push X, Pop X\n              Add/Mult\n          2. accumulator: operand在memory中\n          3. general purpose register: 比accumulator快,instructions更长:\n              Memory-memory:\n              register-memory:至少1个operand在register.\n              load-store:无operand在memory.   \n      2. 注意0123address machimes 的code(作业中有) \n2. instruction types\n\n3. addressing: where the **operand** is located.(a constant, a register, memory location)\n     immediate\n     direct\n     indirect\n     indexed:final=base+index\n4. instruction level Pipelining\n    S = NKt<sub>p</sub> / (K+N-1)t<sub>p</sub>\n    =K\n    pipeline hazards隐患\n\n# 五 performance measurement and analysis\n\n  ##  PPT提纲\n  1. 性能equation : 1. CPU time 2. Amdahl's law\n  2. benchmarking: \n  3. 性能optimisation: \n   RISA&CISC(the two main kinds of ISA design)指令集类型\n       **RISC**:reduced instruction set computers   **shorten time by reducing clock cycle**\n          simple instructions,few addressing mode\n       **CISC**:complex isc **reduce the number of instructions per program**\n          complex instructions,many addressing modes\n   Branch optimisation: pipeline hazards\n     delayed branching\n     Branch prediction\n  4. disk性能: 概念: utilisation U<sub>d</sub>=r<sub>req</sub> / r<sub>srv</sub>\n     FCFS: first-come,first served\n     SSTF:shortest seek time first(出现starvation的概念)\n     SCAN:not an acronym\n     C-SCAN:circular SCAN\n     LOOK/C-LOOK\n\n     注意比较各种情况下的好坏\n  ## 课上和课后总结理解难点\n\n# 七 二进制① JoshM\n  ## PPT提纲\n  1. negative numbers in binary: 几个概念: unsighed binary\n      formats: \n    1. signed magnitude  : MSB(the most significant bit) is a sign bit\\-\\-\\-0+&1-  源码\n        0的源码有两种:00000000&10000000,0的补码只有:00000000.\n    2. One's complement. 反码\n    3. Two's complement  补码(对于正数补码相同)\n          [X]<sub>补</sub> = X + M\n          这个M是mod M,模数M根据机器数的位数而定,位数为81则M=2<sup>8</sup>    \n      对于负数:\n      1.真值:将各位变反,then最低位+1\n      2.源码: 符号位不变,其余各位变反then最低位+1\n        11111111是-1的补码,10000000是-128的补码.0的补码只有一个:00000000.\n\n    4. 注意优缺点!!!(PPT17)\n    5. 各方式表示的范围(8bits)\n        unsigned binary: 0 \\-\\-\\-255\n        源码:-127(11111111)\\-\\-\\-+127(01111111)\n        反码:-127(11111111)\\-\\-\\-+127(01111111)\n        补码:-128(10000000)\\-\\-\\-+127(01111111)\n\n\n  ## 二进制运算法则\n    1. 10转2:减权定位\n             除基取余(直到商为0):从最下面的余数开始!\n       小数10转2:减权定位\n                乘基取整:从最上面的余数开始\n    2. 2转10: 按权相加(小数2转10同)\n    3. 十转八:除基取余比较简单\n\n# 八 binary ②\n## 上课 PPT\n1. unsigned: \n   1. unsigned addtion\\-\\-\\-**overflow**\n      - 是一个圈,从111再加就是000了\n      - incrementinf by one **?!?!** 那几句话没理解PPT第5页\n   2. subtraction (注意借位,需要练习)\n       - first check the minus...???\n   3. multipication\n       - 感觉像分列式,分几个part乘,最后加一起.\n   4. division: 很像十进制的除法方式.\n2. signed magnitude arithmetric:\n    1. 加\n     1. check the **sign** firstly\n     2. 如果**符号不同**: 比较绝对值大小\\-\\-\\-\\-\\-\\-用大的减小的\\-\\-\\-\\-\\-\\-用绝对值大的数的sign.\n     3. overflow 那个圈没理解\n    2. 减\n     1. x-y: - y如果是`负`\\-\\-\\-\\-\\-\\-变成**x+(-y)**\n             - y是`正`且x是`负`\\-\\-\\-\\-变成*-(-x+y)**\n             - y是`正`且x是`正`\\-\\-\\-\\-变成**(-y)+x**\n             - 但我第一次做作业,全错...\n3. one's complement arithmetic\n     1. 反码,加完多一位,再加(多么神奇...需要记忆以及与其它区分)\n4. two's complement arithmetic\n     1. 忽略加完后的第一位.\n     2. **detecting overflow**\n         新概念:carry和borrow\n         carry-in = carry-out\\-\\-\\-\\-\\-\\-no overflow\n         but这个是怎么计算的???\n\n5. Error detection and correction:\n     1. hamming distance:不同的位数\n     2. parity bit :要sufficient才能correct error,\n     3. code word : 存在的必要是什么\n     4. 是在bus上传递数据用的吗?那学过的存储模式pocode+address跟这个是什么关系?\n\n\n## 重难点解析\n1. 三个overflow的图一定要好好理解.\n2. ~~真值,补码,反码,源码之间的变化!!~~\n3. 补码overflow detect\n4. sign的减法和乘除\n\n\n\n# 九 floating-point binary\n## 预习+回看\n1. \n\n# 疑惑\n1. Assembly 2 里 JnS \n2. 那么load store jump好像没区别啊? \\-\\-\\-11.6\n3. 对于Assembly1作业中的第3题.醍醐灌顶:\n    A 1-bit address can address two words (0, 1).\n    A 2-bit address can address four words (00, 01, 10, 11).\n    A 3-bit address can address eight words (000, 001, 010, 011, 100, 101, 110, 111).\n    but![答案不一样](https://www.coursehero.com/doc-asset/bg/d6bc39dcf48520faf6897593e05282dad7676ae0/splits/v9.frq.clean/split-1-page-1-html-bg.jpg)\n4. **八\\-\\-\\-二进制2**需要加强理解和动手去做的:1. ~~三种表示二进制数的转化自己去操作~~. 2. 进制直接每种情况的转化去运算.   \\-\\-\\-11.13\n5. ~~对于加了sign的源码,为什么不是额外加一位呢,不影响原本的真值吗?~~  \\-\\-\\-11.13八课上\n6. 对于补码的运算,手机里的照片 理解和解惑. \\-\\-\\-11.13八课上\n7. \\-\\-\\-11.13晚自习 二进制转八进制,万一位数除不尽3怎么办?\n\n# 作业tutorial 的总结\n1. \\-\\-\\-11.13晚,week7,binary1.\n   - 减权定位终于知道了怎么做\n   - 小数10转2,乘积取整还不会\n   - 4个表示方法的范围需要记住\n2. \\-\\-\\-11.13晚,week8,binary2.\n   - unsigned减法必须是正数,因为它无负数\n   - unsigned除法中除不尽就用reminder余数\n   - signed的减法中,1110111-0010001为何overflow呢\n   - 0010101-0110011算不对啊,按照(-y)+x的规则啊\n   - signed的乘除法,全错.(我原本的方法是忽略头一位,再在最后加上头一位)\n   - 反码的加:01101+00100 为何overflow\n   - 补码的加: carry-in和carry-out和overflow detected 是什么\n   - 一定要记住正数的反码和补码都是它,运算的时候一定要仔细1+1变为0\n     ","slug":"CS","published":1,"updated":"2019-10-31T05:24:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqkofx3000095jwl7dtcf25c","content":"<h1 id=\"一\"><a href=\"#一\" class=\"headerlink\" title=\"一\"></a>一</h1><h2 id=\"冯诺依曼结构\"><a href=\"#冯诺依曼结构\" class=\"headerlink\" title=\"冯诺依曼结构\"></a>冯诺依曼结构</h2><span id=\"more\"></span>\n<h1 id=\"二-Assembly-1\"><a href=\"#二-Assembly-1\" class=\"headerlink\" title=\"二 Assembly 1\"></a>二 Assembly 1</h1><ol>\n<li><p>CPU<br> registers<br> ALU<br> control unit<br> data bus</p>\n</li>\n<li><p>memory organisation<br> byte-addressable/word-addressable<br> RAM chips:random access memory  lengthXwidth</p>\n</li>\n<li><p>I/O</p>\n</li>\n<li><p>Bus</p>\n</li>\n<li><p>Clocks<br> clock cycles<br> clock frequency(互为倒数)<br> CPU time</p>\n</li>\n<li><p>Interrupts</p>\n</li>\n<li><p>MARIE ISA</p>\n<ul>\n<li>load: load contents of address x into AC</li>\n<li>store: store the contents of AC at address X</li>\n<li>add</li>\n<li>subt</li>\n<li>input/output</li>\n<li>halt: 暂停</li>\n<li>skipcond: skip next instruction on condition</li>\n<li>jump X: load the value of X into PC<br>那么load store jump好像没区别啊?</li>\n</ul>\n</li>\n<li><p>RTL: register transfer language</p>\n<h1 id=\"三-Assembly-2\"><a href=\"#三-Assembly-2\" class=\"headerlink\" title=\"三 Assembly 2\"></a>三 Assembly 2</h1></li>\n<li><p>fetch-decode-execute cycle<br> PC<br> MAR<br> IR<br> PC<br> MAR<br> MBR</p>\n</li>\n<li><p>Interrupt processing:PPT上有两个流程图<br>  flags register<br>  maskable<br>  Nonmaskable interrupts</p>\n</li>\n<li><p>注意PPT里一个简单program在computer里运行的流程图!</p>\n</li>\n<li><p>Assemblers汇编器的工作流程:PPT!<br>  1st pass: symbol table<br>  2nd pass: the instructions are completed using the value from the <strong>symbol table</strong>.<br>  完成将汇编语言变成机器语言的过程</p>\n</li>\n<li><p>一个汇编语言程序:main和mainloop是address label.?? main&amp;mainloop的理解</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">.equ</span> <span class=\"built_in\">SREG</span>,<span class=\"number\">0x3F</span></span><br><span class=\"line\"><span class=\"meta\">.org</span></span><br><span class=\"line\"><span class=\"symbol\">main:</span>   <span class=\"keyword\">ldi</span> <span class=\"built_in\">r16</span>,<span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">out</span> <span class=\"built_in\">SREG</span>,<span class=\"built_in\">r16</span></span><br><span class=\"line\"><span class=\"symbol\">mainloop:</span> <span class=\"keyword\">rjmp</span> mainloop</span><br></pre></td></tr></table></figure></li>\n<li><p>indirect addressing mode时:</p>\n</li>\n<li><p>JnS:operates by storing the current PC value in the first address of the routine itself,then continue with the instruction following that.    Jump-and-store.<br> JumpI:return from the subroutine.</p>\n</li>\n<li><p>Clear</p>\n</li>\n<li><p> if</p>\n</li>\n<li><p>for/while</p>\n</li>\n<li><p>Procedure invocation:f()</p>\n</li>\n<li><p>两个samole constructs!!</p>\n<h1 id=\"四-instruction-set-architectures-pipelines\"><a href=\"#四-instruction-set-architectures-pipelines\" class=\"headerlink\" title=\"四 instruction set architectures/pipelines\"></a>四 instruction set architectures/pipelines</h1></li>\n<li><p>instruction formats</p>\n<ol>\n<li>little endian<br>big endian:正常的<br>比较: ///</li>\n<li>how the CPU store data(3种)CPU的特殊内部存储结构<br><img src=\"https://wkretype.bdimg.com/retype/zoom/6a64416127d3240c8447ef13?pn=7&o=jpg_6&md5sum=1830449c7405e4dd2a4f0bb2c1b9644e&sign=df6cd0909c&png=126611-139487&jpg=805027-909057\" alt=\"三种结构\"><ol>\n<li>stack: instructions and operands都从stack里拿,先进后出<br> stack机器用1/0operand instructions<br> Push X, Pop X<br> Add/Mult</li>\n<li>accumulator: operand在memory中</li>\n<li>general purpose register: 比accumulator快,instructions更长:<br> Memory-memory:<br> register-memory:至少1个operand在register.<br> load-store:无operand在memory.   </li>\n</ol>\n</li>\n<li>注意0123address machimes 的code(作业中有) </li>\n</ol>\n</li>\n<li><p>instruction types</p>\n</li>\n<li><p>addressing: where the <strong>operand</strong> is located.(a constant, a register, memory location)<br>  immediate<br>  direct<br>  indirect<br>  indexed:final=base+index</p>\n</li>\n<li><p>instruction level Pipelining<br> S = NKt<sub>p</sub> / (K+N-1)t<sub>p</sub><br> =K<br> pipeline hazards隐患</p>\n</li>\n</ol>\n<h1 id=\"五-performance-measurement-and-analysis\"><a href=\"#五-performance-measurement-and-analysis\" class=\"headerlink\" title=\"五 performance measurement and analysis\"></a>五 performance measurement and analysis</h1><h2 id=\"PPT提纲\"><a href=\"#PPT提纲\" class=\"headerlink\" title=\"PPT提纲\"></a>PPT提纲</h2><ol>\n<li><p>性能equation : 1. CPU time 2. Amdahl’s law</p>\n</li>\n<li><p>benchmarking: </p>\n</li>\n<li><p>性能optimisation:<br>RISA&amp;CISC(the two main kinds of ISA design)指令集类型<br>  <strong>RISC</strong>:reduced instruction set computers   <strong>shorten time by reducing clock cycle</strong></p>\n<pre><code> simple instructions,few addressing mode\n</code></pre>\n<p>  <strong>CISC</strong>:complex isc <strong>reduce the number of instructions per program</strong></p>\n<pre><code> complex instructions,many addressing modes\n</code></pre>\n<p>Branch optimisation: pipeline hazards<br>delayed branching<br>Branch prediction</p>\n</li>\n<li><p>disk性能: 概念: utilisation U<sub>d</sub>=r<sub>req</sub> / r<sub>srv</sub><br>FCFS: first-come,first served<br>SSTF:shortest seek time first(出现starvation的概念)<br>SCAN:not an acronym<br>C-SCAN:circular SCAN<br>LOOK/C-LOOK</p>\n<p>注意比较各种情况下的好坏</p>\n<h2 id=\"课上和课后总结理解难点\"><a href=\"#课上和课后总结理解难点\" class=\"headerlink\" title=\"课上和课后总结理解难点\"></a>课上和课后总结理解难点</h2></li>\n</ol>\n<h1 id=\"七-二进制①-JoshM\"><a href=\"#七-二进制①-JoshM\" class=\"headerlink\" title=\"七 二进制① JoshM\"></a>七 二进制① JoshM</h1><h2 id=\"PPT提纲-1\"><a href=\"#PPT提纲-1\" class=\"headerlink\" title=\"PPT提纲\"></a>PPT提纲</h2><ol>\n<li>negative numbers in binary: 几个概念: unsighed binary<br> formats:     1. signed magnitude  : MSB(the most significant bit) is a sign bit---0+&amp;1-  源码<br>   0的源码有两种:00000000&amp;10000000,0的补码只有:00000000.    2. One’s complement. 反码    3. Two’s complement  补码(对于正数补码相同)<pre><code> [X]&lt;sub&gt;补&lt;/sub&gt; = X + M\n 这个M是mod M,模数M根据机器数的位数而定,位数为81则M=2&lt;sup&gt;8&lt;/sup&gt;    \n</code></pre>\n 对于负数:<br> 1.真值:将各位变反,then最低位+1<br> 2.源码: 符号位不变,其余各位变反then最低位+1<br>   11111111是-1的补码,10000000是-128的补码.0的补码只有一个:00000000.</li>\n</ol>\n<pre><code>4. 注意优缺点!!!(PPT17)\n5. 各方式表示的范围(8bits)\n    unsigned binary: 0 \\-\\-\\-255\n    源码:-127(11111111)\\-\\-\\-+127(01111111)\n    反码:-127(11111111)\\-\\-\\-+127(01111111)\n    补码:-128(10000000)\\-\\-\\-+127(01111111)\n</code></pre>\n<h2 id=\"二进制运算法则\"><a href=\"#二进制运算法则\" class=\"headerlink\" title=\"二进制运算法则\"></a>二进制运算法则</h2><pre><code>1. 10转2:减权定位\n         除基取余(直到商为0):从最下面的余数开始!\n   小数10转2:减权定位\n            乘基取整:从最上面的余数开始\n2. 2转10: 按权相加(小数2转10同)\n3. 十转八:除基取余比较简单\n</code></pre>\n<h1 id=\"八-binary-②\"><a href=\"#八-binary-②\" class=\"headerlink\" title=\"八 binary ②\"></a>八 binary ②</h1><h2 id=\"上课-PPT\"><a href=\"#上课-PPT\" class=\"headerlink\" title=\"上课 PPT\"></a>上课 PPT</h2><ol>\n<li><p>unsigned: </p>\n<ol>\n<li>unsigned addtion---<strong>overflow</strong><ul>\n<li>是一个圈,从111再加就是000了</li>\n<li>incrementinf by one <strong>?!?!</strong> 那几句话没理解PPT第5页</li>\n</ul>\n</li>\n<li>subtraction (注意借位,需要练习)<ul>\n<li>first check the minus…???</li>\n</ul>\n</li>\n<li>multipication<ul>\n<li>感觉像分列式,分几个part乘,最后加一起.</li>\n</ul>\n</li>\n<li>division: 很像十进制的除法方式.</li>\n</ol>\n</li>\n<li><p>signed magnitude arithmetric:</p>\n<ol>\n<li>加</li>\n<li>check the <strong>sign</strong> firstly</li>\n<li>如果<strong>符号不同</strong>: 比较绝对值大小------用大的减小的------用绝对值大的数的sign.</li>\n<li>overflow 那个圈没理解</li>\n<li>减</li>\n<li>x-y: - y如果是<code>负</code>------变成<strong>x+(-y)</strong><pre><code> - y是`正`且x是`负`\\-\\-\\-\\-变成*-(-x+y)**\n - y是`正`且x是`正`\\-\\-\\-\\-变成**(-y)+x**\n - 但我第一次做作业,全错...\n</code></pre>\n</li>\n</ol>\n</li>\n<li><p>one’s complement arithmetic</p>\n<ol>\n<li>反码,加完多一位,再加(多么神奇…需要记忆以及与其它区分)</li>\n</ol>\n</li>\n<li><p>two’s complement arithmetic</p>\n<ol>\n<li>忽略加完后的第一位.</li>\n<li><strong>detecting overflow</strong><br> 新概念:carry和borrow<br> carry-in = carry-out------no overflow<br> but这个是怎么计算的???</li>\n</ol>\n</li>\n<li><p>Error detection and correction:</p>\n<ol>\n<li>hamming distance:不同的位数</li>\n<li>parity bit :要sufficient才能correct error,</li>\n<li>code word : 存在的必要是什么</li>\n<li>是在bus上传递数据用的吗?那学过的存储模式pocode+address跟这个是什么关系?</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"重难点解析\"><a href=\"#重难点解析\" class=\"headerlink\" title=\"重难点解析\"></a>重难点解析</h2><ol>\n<li>三个overflow的图一定要好好理解.</li>\n<li><del>真值,补码,反码,源码之间的变化!!</del></li>\n<li>补码overflow detect</li>\n<li>sign的减法和乘除</li>\n</ol>\n<h1 id=\"九-floating-point-binary\"><a href=\"#九-floating-point-binary\" class=\"headerlink\" title=\"九 floating-point binary\"></a>九 floating-point binary</h1><h2 id=\"预习-回看\"><a href=\"#预习-回看\" class=\"headerlink\" title=\"预习+回看\"></a>预习+回看</h2><ol>\n<li></li>\n</ol>\n<h1 id=\"疑惑\"><a href=\"#疑惑\" class=\"headerlink\" title=\"疑惑\"></a>疑惑</h1><ol>\n<li>Assembly 2 里 JnS </li>\n<li>那么load store jump好像没区别啊? ---11.6</li>\n<li>对于Assembly1作业中的第3题.醍醐灌顶:<br> A 1-bit address can address two words (0, 1).<br> A 2-bit address can address four words (00, 01, 10, 11).<br> A 3-bit address can address eight words (000, 001, 010, 011, 100, 101, 110, 111).<br> but<img src=\"https://www.coursehero.com/doc-asset/bg/d6bc39dcf48520faf6897593e05282dad7676ae0/splits/v9.frq.clean/split-1-page-1-html-bg.jpg\" alt=\"答案不一样\"></li>\n<li><strong>八---二进制2</strong>需要加强理解和动手去做的:1. <del>三种表示二进制数的转化自己去操作</del>. 2. 进制直接每种情况的转化去运算.   ---11.13</li>\n<li><del>对于加了sign的源码,为什么不是额外加一位呢,不影响原本的真值吗?</del>  ---11.13八课上</li>\n<li>对于补码的运算,手机里的照片 理解和解惑. ---11.13八课上</li>\n<li>---11.13晚自习 二进制转八进制,万一位数除不尽3怎么办?</li>\n</ol>\n<h1 id=\"作业tutorial-的总结\"><a href=\"#作业tutorial-的总结\" class=\"headerlink\" title=\"作业tutorial 的总结\"></a>作业tutorial 的总结</h1><ol>\n<li>---11.13晚,week7,binary1.<ul>\n<li>减权定位终于知道了怎么做</li>\n<li>小数10转2,乘积取整还不会</li>\n<li>4个表示方法的范围需要记住</li>\n</ul>\n</li>\n<li>---11.13晚,week8,binary2.<ul>\n<li>unsigned减法必须是正数,因为它无负数</li>\n<li>unsigned除法中除不尽就用reminder余数</li>\n<li>signed的减法中,1110111-0010001为何overflow呢</li>\n<li>0010101-0110011算不对啊,按照(-y)+x的规则啊</li>\n<li>signed的乘除法,全错.(我原本的方法是忽略头一位,再在最后加上头一位)</li>\n<li>反码的加:01101+00100 为何overflow</li>\n<li>补码的加: carry-in和carry-out和overflow detected 是什么</li>\n<li>一定要记住正数的反码和补码都是它,运算的时候一定要仔细1+1变为0</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"一\"><a href=\"#一\" class=\"headerlink\" title=\"一\"></a>一</h1><h2 id=\"冯诺依曼结构\"><a href=\"#冯诺依曼结构\" class=\"headerlink\" title=\"冯诺依曼结构\"></a>冯诺依曼结构</h2>","more":"<h1 id=\"二-Assembly-1\"><a href=\"#二-Assembly-1\" class=\"headerlink\" title=\"二 Assembly 1\"></a>二 Assembly 1</h1><ol>\n<li><p>CPU<br> registers<br> ALU<br> control unit<br> data bus</p>\n</li>\n<li><p>memory organisation<br> byte-addressable/word-addressable<br> RAM chips:random access memory  lengthXwidth</p>\n</li>\n<li><p>I/O</p>\n</li>\n<li><p>Bus</p>\n</li>\n<li><p>Clocks<br> clock cycles<br> clock frequency(互为倒数)<br> CPU time</p>\n</li>\n<li><p>Interrupts</p>\n</li>\n<li><p>MARIE ISA</p>\n<ul>\n<li>load: load contents of address x into AC</li>\n<li>store: store the contents of AC at address X</li>\n<li>add</li>\n<li>subt</li>\n<li>input/output</li>\n<li>halt: 暂停</li>\n<li>skipcond: skip next instruction on condition</li>\n<li>jump X: load the value of X into PC<br>那么load store jump好像没区别啊?</li>\n</ul>\n</li>\n<li><p>RTL: register transfer language</p>\n<h1 id=\"三-Assembly-2\"><a href=\"#三-Assembly-2\" class=\"headerlink\" title=\"三 Assembly 2\"></a>三 Assembly 2</h1></li>\n<li><p>fetch-decode-execute cycle<br> PC<br> MAR<br> IR<br> PC<br> MAR<br> MBR</p>\n</li>\n<li><p>Interrupt processing:PPT上有两个流程图<br>  flags register<br>  maskable<br>  Nonmaskable interrupts</p>\n</li>\n<li><p>注意PPT里一个简单program在computer里运行的流程图!</p>\n</li>\n<li><p>Assemblers汇编器的工作流程:PPT!<br>  1st pass: symbol table<br>  2nd pass: the instructions are completed using the value from the <strong>symbol table</strong>.<br>  完成将汇编语言变成机器语言的过程</p>\n</li>\n<li><p>一个汇编语言程序:main和mainloop是address label.?? main&amp;mainloop的理解</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">.equ</span> <span class=\"built_in\">SREG</span>,<span class=\"number\">0x3F</span></span><br><span class=\"line\"><span class=\"meta\">.org</span></span><br><span class=\"line\"><span class=\"symbol\">main:</span>   <span class=\"keyword\">ldi</span> <span class=\"built_in\">r16</span>,<span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">out</span> <span class=\"built_in\">SREG</span>,<span class=\"built_in\">r16</span></span><br><span class=\"line\"><span class=\"symbol\">mainloop:</span> <span class=\"keyword\">rjmp</span> mainloop</span><br></pre></td></tr></table></figure></li>\n<li><p>indirect addressing mode时:</p>\n</li>\n<li><p>JnS:operates by storing the current PC value in the first address of the routine itself,then continue with the instruction following that.    Jump-and-store.<br> JumpI:return from the subroutine.</p>\n</li>\n<li><p>Clear</p>\n</li>\n<li><p> if</p>\n</li>\n<li><p>for/while</p>\n</li>\n<li><p>Procedure invocation:f()</p>\n</li>\n<li><p>两个samole constructs!!</p>\n<h1 id=\"四-instruction-set-architectures-pipelines\"><a href=\"#四-instruction-set-architectures-pipelines\" class=\"headerlink\" title=\"四 instruction set architectures/pipelines\"></a>四 instruction set architectures/pipelines</h1></li>\n<li><p>instruction formats</p>\n<ol>\n<li>little endian<br>big endian:正常的<br>比较: ///</li>\n<li>how the CPU store data(3种)CPU的特殊内部存储结构<br><img src=\"https://wkretype.bdimg.com/retype/zoom/6a64416127d3240c8447ef13?pn=7&o=jpg_6&md5sum=1830449c7405e4dd2a4f0bb2c1b9644e&sign=df6cd0909c&png=126611-139487&jpg=805027-909057\" alt=\"三种结构\"><ol>\n<li>stack: instructions and operands都从stack里拿,先进后出<br> stack机器用1/0operand instructions<br> Push X, Pop X<br> Add/Mult</li>\n<li>accumulator: operand在memory中</li>\n<li>general purpose register: 比accumulator快,instructions更长:<br> Memory-memory:<br> register-memory:至少1个operand在register.<br> load-store:无operand在memory.   </li>\n</ol>\n</li>\n<li>注意0123address machimes 的code(作业中有) </li>\n</ol>\n</li>\n<li><p>instruction types</p>\n</li>\n<li><p>addressing: where the <strong>operand</strong> is located.(a constant, a register, memory location)<br>  immediate<br>  direct<br>  indirect<br>  indexed:final=base+index</p>\n</li>\n<li><p>instruction level Pipelining<br> S = NKt<sub>p</sub> / (K+N-1)t<sub>p</sub><br> =K<br> pipeline hazards隐患</p>\n</li>\n</ol>\n<h1 id=\"五-performance-measurement-and-analysis\"><a href=\"#五-performance-measurement-and-analysis\" class=\"headerlink\" title=\"五 performance measurement and analysis\"></a>五 performance measurement and analysis</h1><h2 id=\"PPT提纲\"><a href=\"#PPT提纲\" class=\"headerlink\" title=\"PPT提纲\"></a>PPT提纲</h2><ol>\n<li><p>性能equation : 1. CPU time 2. Amdahl’s law</p>\n</li>\n<li><p>benchmarking: </p>\n</li>\n<li><p>性能optimisation:<br>RISA&amp;CISC(the two main kinds of ISA design)指令集类型<br>  <strong>RISC</strong>:reduced instruction set computers   <strong>shorten time by reducing clock cycle</strong></p>\n<pre><code> simple instructions,few addressing mode\n</code></pre>\n<p>  <strong>CISC</strong>:complex isc <strong>reduce the number of instructions per program</strong></p>\n<pre><code> complex instructions,many addressing modes\n</code></pre>\n<p>Branch optimisation: pipeline hazards<br>delayed branching<br>Branch prediction</p>\n</li>\n<li><p>disk性能: 概念: utilisation U<sub>d</sub>=r<sub>req</sub> / r<sub>srv</sub><br>FCFS: first-come,first served<br>SSTF:shortest seek time first(出现starvation的概念)<br>SCAN:not an acronym<br>C-SCAN:circular SCAN<br>LOOK/C-LOOK</p>\n<p>注意比较各种情况下的好坏</p>\n<h2 id=\"课上和课后总结理解难点\"><a href=\"#课上和课后总结理解难点\" class=\"headerlink\" title=\"课上和课后总结理解难点\"></a>课上和课后总结理解难点</h2></li>\n</ol>\n<h1 id=\"七-二进制①-JoshM\"><a href=\"#七-二进制①-JoshM\" class=\"headerlink\" title=\"七 二进制① JoshM\"></a>七 二进制① JoshM</h1><h2 id=\"PPT提纲-1\"><a href=\"#PPT提纲-1\" class=\"headerlink\" title=\"PPT提纲\"></a>PPT提纲</h2><ol>\n<li>negative numbers in binary: 几个概念: unsighed binary<br> formats:     1. signed magnitude  : MSB(the most significant bit) is a sign bit---0+&amp;1-  源码<br>   0的源码有两种:00000000&amp;10000000,0的补码只有:00000000.    2. One’s complement. 反码    3. Two’s complement  补码(对于正数补码相同)<pre><code> [X]&lt;sub&gt;补&lt;/sub&gt; = X + M\n 这个M是mod M,模数M根据机器数的位数而定,位数为81则M=2&lt;sup&gt;8&lt;/sup&gt;    \n</code></pre>\n 对于负数:<br> 1.真值:将各位变反,then最低位+1<br> 2.源码: 符号位不变,其余各位变反then最低位+1<br>   11111111是-1的补码,10000000是-128的补码.0的补码只有一个:00000000.</li>\n</ol>\n<pre><code>4. 注意优缺点!!!(PPT17)\n5. 各方式表示的范围(8bits)\n    unsigned binary: 0 \\-\\-\\-255\n    源码:-127(11111111)\\-\\-\\-+127(01111111)\n    反码:-127(11111111)\\-\\-\\-+127(01111111)\n    补码:-128(10000000)\\-\\-\\-+127(01111111)\n</code></pre>\n<h2 id=\"二进制运算法则\"><a href=\"#二进制运算法则\" class=\"headerlink\" title=\"二进制运算法则\"></a>二进制运算法则</h2><pre><code>1. 10转2:减权定位\n         除基取余(直到商为0):从最下面的余数开始!\n   小数10转2:减权定位\n            乘基取整:从最上面的余数开始\n2. 2转10: 按权相加(小数2转10同)\n3. 十转八:除基取余比较简单\n</code></pre>\n<h1 id=\"八-binary-②\"><a href=\"#八-binary-②\" class=\"headerlink\" title=\"八 binary ②\"></a>八 binary ②</h1><h2 id=\"上课-PPT\"><a href=\"#上课-PPT\" class=\"headerlink\" title=\"上课 PPT\"></a>上课 PPT</h2><ol>\n<li><p>unsigned: </p>\n<ol>\n<li>unsigned addtion---<strong>overflow</strong><ul>\n<li>是一个圈,从111再加就是000了</li>\n<li>incrementinf by one <strong>?!?!</strong> 那几句话没理解PPT第5页</li>\n</ul>\n</li>\n<li>subtraction (注意借位,需要练习)<ul>\n<li>first check the minus…???</li>\n</ul>\n</li>\n<li>multipication<ul>\n<li>感觉像分列式,分几个part乘,最后加一起.</li>\n</ul>\n</li>\n<li>division: 很像十进制的除法方式.</li>\n</ol>\n</li>\n<li><p>signed magnitude arithmetric:</p>\n<ol>\n<li>加</li>\n<li>check the <strong>sign</strong> firstly</li>\n<li>如果<strong>符号不同</strong>: 比较绝对值大小------用大的减小的------用绝对值大的数的sign.</li>\n<li>overflow 那个圈没理解</li>\n<li>减</li>\n<li>x-y: - y如果是<code>负</code>------变成<strong>x+(-y)</strong><pre><code> - y是`正`且x是`负`\\-\\-\\-\\-变成*-(-x+y)**\n - y是`正`且x是`正`\\-\\-\\-\\-变成**(-y)+x**\n - 但我第一次做作业,全错...\n</code></pre>\n</li>\n</ol>\n</li>\n<li><p>one’s complement arithmetic</p>\n<ol>\n<li>反码,加完多一位,再加(多么神奇…需要记忆以及与其它区分)</li>\n</ol>\n</li>\n<li><p>two’s complement arithmetic</p>\n<ol>\n<li>忽略加完后的第一位.</li>\n<li><strong>detecting overflow</strong><br> 新概念:carry和borrow<br> carry-in = carry-out------no overflow<br> but这个是怎么计算的???</li>\n</ol>\n</li>\n<li><p>Error detection and correction:</p>\n<ol>\n<li>hamming distance:不同的位数</li>\n<li>parity bit :要sufficient才能correct error,</li>\n<li>code word : 存在的必要是什么</li>\n<li>是在bus上传递数据用的吗?那学过的存储模式pocode+address跟这个是什么关系?</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"重难点解析\"><a href=\"#重难点解析\" class=\"headerlink\" title=\"重难点解析\"></a>重难点解析</h2><ol>\n<li>三个overflow的图一定要好好理解.</li>\n<li><del>真值,补码,反码,源码之间的变化!!</del></li>\n<li>补码overflow detect</li>\n<li>sign的减法和乘除</li>\n</ol>\n<h1 id=\"九-floating-point-binary\"><a href=\"#九-floating-point-binary\" class=\"headerlink\" title=\"九 floating-point binary\"></a>九 floating-point binary</h1><h2 id=\"预习-回看\"><a href=\"#预习-回看\" class=\"headerlink\" title=\"预习+回看\"></a>预习+回看</h2><ol>\n<li></li>\n</ol>\n<h1 id=\"疑惑\"><a href=\"#疑惑\" class=\"headerlink\" title=\"疑惑\"></a>疑惑</h1><ol>\n<li>Assembly 2 里 JnS </li>\n<li>那么load store jump好像没区别啊? ---11.6</li>\n<li>对于Assembly1作业中的第3题.醍醐灌顶:<br> A 1-bit address can address two words (0, 1).<br> A 2-bit address can address four words (00, 01, 10, 11).<br> A 3-bit address can address eight words (000, 001, 010, 011, 100, 101, 110, 111).<br> but<img src=\"https://www.coursehero.com/doc-asset/bg/d6bc39dcf48520faf6897593e05282dad7676ae0/splits/v9.frq.clean/split-1-page-1-html-bg.jpg\" alt=\"答案不一样\"></li>\n<li><strong>八---二进制2</strong>需要加强理解和动手去做的:1. <del>三种表示二进制数的转化自己去操作</del>. 2. 进制直接每种情况的转化去运算.   ---11.13</li>\n<li><del>对于加了sign的源码,为什么不是额外加一位呢,不影响原本的真值吗?</del>  ---11.13八课上</li>\n<li>对于补码的运算,手机里的照片 理解和解惑. ---11.13八课上</li>\n<li>---11.13晚自习 二进制转八进制,万一位数除不尽3怎么办?</li>\n</ol>\n<h1 id=\"作业tutorial-的总结\"><a href=\"#作业tutorial-的总结\" class=\"headerlink\" title=\"作业tutorial 的总结\"></a>作业tutorial 的总结</h1><ol>\n<li>---11.13晚,week7,binary1.<ul>\n<li>减权定位终于知道了怎么做</li>\n<li>小数10转2,乘积取整还不会</li>\n<li>4个表示方法的范围需要记住</li>\n</ul>\n</li>\n<li>---11.13晚,week8,binary2.<ul>\n<li>unsigned减法必须是正数,因为它无负数</li>\n<li>unsigned除法中除不尽就用reminder余数</li>\n<li>signed的减法中,1110111-0010001为何overflow呢</li>\n<li>0010101-0110011算不对啊,按照(-y)+x的规则啊</li>\n<li>signed的乘除法,全错.(我原本的方法是忽略头一位,再在最后加上头一位)</li>\n<li>反码的加:01101+00100 为何overflow</li>\n<li>补码的加: carry-in和carry-out和overflow detected 是什么</li>\n<li>一定要记住正数的反码和补码都是它,运算的时候一定要仔细1+1变为0</li>\n</ul>\n</li>\n</ol>"},{"title":"MatLab","date":"2019-10-30T11:50:22.000Z","password":"password","top":false,"_content":"# 疑问\n<!--more-->\n\n## 创建x轴的数组\ns = linspace()\n与直接\\[ : : \\]\n## 绘制函数图象时\nsyms变量--fplot\n与直接设置x和y对应数组--plot\n## 设置坐标轴范围时\nxlim(xmin ymin)和ylim()\n与aixs\\[xmin xmax ymin ymax\\]\n是一个道理\n## 绘制图像的几个函数\n- plot()\n- line():画直线型\n- polar():极坐标下绘曲线\n## 求函数一段范围内的极值\n- lab7\n- 感觉有几种方法\n- 画分段函数的几种方法:正常拆分开;@x\n\n# 矩阵\n## 创建矩阵的方法\n1. B=a:h:b;  其中a,b代表一维矩阵（向量）的区间，h为步宽\n2. zeros(行数,列数).ones,rand同.\n3. \n4. ","source":"_posts/MatLab.md","raw":"---\ntitle: MatLab\ndate: 2019-10-30 19:50:22\ntags: \n- MatLab\ncategories:\n- 2019\n- KCL\n- MatLab\npassword: password\ntop: false\n---\n# 疑问\n<!--more-->\n\n## 创建x轴的数组\ns = linspace()\n与直接\\[ : : \\]\n## 绘制函数图象时\nsyms变量--fplot\n与直接设置x和y对应数组--plot\n## 设置坐标轴范围时\nxlim(xmin ymin)和ylim()\n与aixs\\[xmin xmax ymin ymax\\]\n是一个道理\n## 绘制图像的几个函数\n- plot()\n- line():画直线型\n- polar():极坐标下绘曲线\n## 求函数一段范围内的极值\n- lab7\n- 感觉有几种方法\n- 画分段函数的几种方法:正常拆分开;@x\n\n# 矩阵\n## 创建矩阵的方法\n1. B=a:h:b;  其中a,b代表一维矩阵（向量）的区间，h为步宽\n2. zeros(行数,列数).ones,rand同.\n3. \n4. ","slug":"MatLab","published":1,"updated":"2019-10-30T11:50:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqkofx33000d5jwl9csa5q1a","content":"<h1 id=\"疑问\"><a href=\"#疑问\" class=\"headerlink\" title=\"疑问\"></a>疑问</h1><span id=\"more\"></span>\n\n<h2 id=\"创建x轴的数组\"><a href=\"#创建x轴的数组\" class=\"headerlink\" title=\"创建x轴的数组\"></a>创建x轴的数组</h2><p>s = linspace()<br>与直接[ : : ]</p>\n<h2 id=\"绘制函数图象时\"><a href=\"#绘制函数图象时\" class=\"headerlink\" title=\"绘制函数图象时\"></a>绘制函数图象时</h2><p>syms变量–fplot<br>与直接设置x和y对应数组–plot</p>\n<h2 id=\"设置坐标轴范围时\"><a href=\"#设置坐标轴范围时\" class=\"headerlink\" title=\"设置坐标轴范围时\"></a>设置坐标轴范围时</h2><p>xlim(xmin ymin)和ylim()<br>与aixs[xmin xmax ymin ymax]<br>是一个道理</p>\n<h2 id=\"绘制图像的几个函数\"><a href=\"#绘制图像的几个函数\" class=\"headerlink\" title=\"绘制图像的几个函数\"></a>绘制图像的几个函数</h2><ul>\n<li>plot()</li>\n<li>line():画直线型</li>\n<li>polar():极坐标下绘曲线<h2 id=\"求函数一段范围内的极值\"><a href=\"#求函数一段范围内的极值\" class=\"headerlink\" title=\"求函数一段范围内的极值\"></a>求函数一段范围内的极值</h2></li>\n<li>lab7</li>\n<li>感觉有几种方法</li>\n<li>画分段函数的几种方法:正常拆分开;@x</li>\n</ul>\n<h1 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h1><h2 id=\"创建矩阵的方法\"><a href=\"#创建矩阵的方法\" class=\"headerlink\" title=\"创建矩阵的方法\"></a>创建矩阵的方法</h2><ol>\n<li>B=a:h:b;  其中a,b代表一维矩阵（向量）的区间，h为步宽</li>\n<li>zeros(行数,列数).ones,rand同.</li>\n<li></li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"疑问\"><a href=\"#疑问\" class=\"headerlink\" title=\"疑问\"></a>疑问</h1>","more":"<h2 id=\"创建x轴的数组\"><a href=\"#创建x轴的数组\" class=\"headerlink\" title=\"创建x轴的数组\"></a>创建x轴的数组</h2><p>s = linspace()<br>与直接[ : : ]</p>\n<h2 id=\"绘制函数图象时\"><a href=\"#绘制函数图象时\" class=\"headerlink\" title=\"绘制函数图象时\"></a>绘制函数图象时</h2><p>syms变量–fplot<br>与直接设置x和y对应数组–plot</p>\n<h2 id=\"设置坐标轴范围时\"><a href=\"#设置坐标轴范围时\" class=\"headerlink\" title=\"设置坐标轴范围时\"></a>设置坐标轴范围时</h2><p>xlim(xmin ymin)和ylim()<br>与aixs[xmin xmax ymin ymax]<br>是一个道理</p>\n<h2 id=\"绘制图像的几个函数\"><a href=\"#绘制图像的几个函数\" class=\"headerlink\" title=\"绘制图像的几个函数\"></a>绘制图像的几个函数</h2><ul>\n<li>plot()</li>\n<li>line():画直线型</li>\n<li>polar():极坐标下绘曲线<h2 id=\"求函数一段范围内的极值\"><a href=\"#求函数一段范围内的极值\" class=\"headerlink\" title=\"求函数一段范围内的极值\"></a>求函数一段范围内的极值</h2></li>\n<li>lab7</li>\n<li>感觉有几种方法</li>\n<li>画分段函数的几种方法:正常拆分开;@x</li>\n</ul>\n<h1 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h1><h2 id=\"创建矩阵的方法\"><a href=\"#创建矩阵的方法\" class=\"headerlink\" title=\"创建矩阵的方法\"></a>创建矩阵的方法</h2><ol>\n<li>B=a:h:b;  其中a,b代表一维矩阵（向量）的区间，h为步宽</li>\n<li>zeros(行数,列数).ones,rand同.</li>\n<li></li>\n<li></li>\n</ol>"},{"title":"PPA_notes","date":"2019-11-03T00:34:48.000Z","password":"password","top":null,"_content":"\n## week5\n<!--more-->\n### PPT提纲\n1. wihle loop\n2. for-each\n3. #### searching:\n     loop condition: *index < files.size() && !found*\n4. 不要用input == \"bye\"比较两个string,一定要用只能用<p>input.equals(\"bye\")</p>\n5. Iterator与iterator():\n      iterator()是collection有的一个method,return一个Iterator类的object,这个object可以用这几个Iterator类里的method:**hasNext,next,remove**\n      格式:`Iterator<ElementType> it = myCollection.iterator()`\n6. Index vs Iterator:**remove**的时候用iterator,\n7. anonymous objects: ?啥玩意儿,不管了\n\n## week7 Chapter6\n### 研读课本\n  1. responsibility-driven design, cohesion, coupling, refactoring\n  2. intance method:invoked on an **intance** of a class, 注意class method和instance method不互通不能互相引用\n  3. enum(enumerated types):枚举\n          枚举类型可以像类(class)类型一样，定义为一个单独的文件，当然也可以定义在其他类内部\n### 预习PPT&提纲\n 1. 几个class:random\n 2. Set,Map\n      hashSet,hashMap\n 3. list,map和set的比较\n 4. wrapper classes\n     int 和 Interger\n 5. autoboxing and unboxing\n 6. static\n\n\n## 七\n### yi\n1. 为什么add（E e）返回的是boolean\n2. random的引用\n3. selecting random responses\n    - responses的arraylist是怎么产生的\n\n\n## 八 Week 8\n\n### 上课 ppt\n1.  cohesion:  each unit is responsible for one single logical task\n     unit: class, method\n     关于hashmap的疑问\n      - 是否要两个元素，前面的是key，后面的事value？\n     对于zuul： 每个class都有相应的作用。game类作为main与user和terminal交流，print东西，但是room就不能print东西。\n2. 2 important: coupling: loose coupling  : interface,change 1 do not need to change another.\n3. 周五上课\\-\\-\\-看的回放\\-\\-\\-\\-11.18\n     1.\n        - arraylist和hashmap等等里面不能有primitive types\n        - primitive types(int,boolean等等)不是object\n        - 引出wrapper class(Interger,Float...)\n        - primitive-type values wrap in objects to be stored in a **collection**\n        - autoboxing & unboxing\n        - [int和Integer的比较](https://blog.csdn.net/chenliguan/article/details/53888018 \"int和Integer\")\n        - [这个讲的更详细](https://blog.csdn.net/Teacher_Lee_ZZSXT/article/details/79230501 \"更详细的比较\")\n     2. class variables\n       - shared between all instances of the class.\n       - 属于class, 独立于instances\n       - 有keyword:**static**\n       - 用class的name在引用.前\n       - 与fields的区别?:field属于class的对象里??\n       - 用于:在一个class里不同的对象都需要用的变量\n     3. constant\n       - **final**\n       - 不能change\n       - 可以是public的\n       - static final : 经常的组合\n       - class constants:变量名大写\n       - 疑惑:final,constant和fields...static的关系\n       - static和final得关系\n       - 明确field,local variable...等等这些的关系\n       - constant 也可以不是final的,可以再更改它的值\n     4. class method\n       - static的方法都是class method\n       - 可直接调用\n       - 那存在的必要是什呢,跟其他的object method比\n             \\-\\-\\-不 depend于object\n       - limitations: instance method can call class method, but class method cannot call instance method and instance fields. 也就是说它只能用static fields,但object method 能用所有fields.\n\n     5. outside bluej\n      - public static void main(String[] arg)\n\n\n## 九 week9\n### Using java without bluej\n  1. 几个文件的后缀：java，class,txt..\n  2. Javac :终端命令，是java编译器的名称？\n  3. Javac 把.java变成.class\n  4. Emacs命令\n  5. java命令（后接类名无后缀）start JVM，开始执行程序\n  6.   the edit-compile-execute cycle：理解JVM\n    - Editor\\-\\-\\-source file\\-\\-\\-compiler(javac)\\-\\-\\-class file\\-\\-\\-virtual machine(java)\n  7. 每个system都有其JVM\n  8. main method应该做什么 \\-\\-\\-PPT里\n### Fixed-sized collections\n  1. Arrays的特性\n     - Fixed in length 他在讲什么memory之类的东西。。。\n     - Use a special syntax语法\n     - 它的对象没有methods，methods从其他class而来\n     - methods都是static的\n  2. -最大size可以？？\n  3. 与List的不同之处arrays可以store对象引用和基础数据类型疑问又来了，List为何不可\n  4. 例子project：weblog-analyzer\n  5. array的语法\n  6. mutator和accessor忘了\n  7. array更改element的原理\n  8. array literals\n  9. array length\n### 周五11.22的回看11.25\n  1. for-each loop: remove和add会导致error\n```java\nfor(String s : list){\n  if(s.startWith(\"t\")){\n    list.remove(s);\n    //如果remove,会skip\n  }\n}\n```\n  - 为何呢\n  - 用 for loop? \\-\\-\\-也不好\n  - 解决办法:**Iterator**(用while)\n  - Iterator用for的话,最后一个counter不需要\n  - [遍历list删除元素的总结](https://blog.csdn.net/github_2011/article/details/54927531 \"总结\")\n  2. 二维数组[][]\n    1. 例子:brain\n    - Environment里面的setup好奇怪\n    2. 处理图片就是处理二维数组\n\n## 十 week10\nfunctional processing of collections\n### 预习PPT提纲\n1. Lambdas\n  - code can be treated as data\n  - segments of code can be stored in variables,passed as para\n2. Method vs Lambdas\n\n\n2. Stream\n3. filter，map，reduce\n4. pipelines\n\n\n### 周五的recording\n\n\n\n## 疑惑与计划\n 1. auction project的源代码 看 \\-\\-\\-11.4早于lse\n\n\n## 代码分析\n### brain\n1. cells二维数组的初始化令人迷惑\n\n## 网址干货收藏\n1. [java基础博客](https://songlee24.github.io/2016/03/16/java-basic-note-1/ \"java基础知识\")\n2. [清华大学计算机系课程](https://github.com/PKUanonym/REKCARC-TSC-UHT \"清华大学课程\")\n3. [知乎人工智能入门](https://zhuanlan.zhihu.com/p/31650418?utm_source=wechat_timeline&utm_medium=social&utm_oi=898106614555504640&from=timeline&isappinstalled=0 \"知乎AI入门\")\n4. [要掌握的算法](https://www.zhihu.com/question/23148377/answer/863990767 \"要掌握的算法\")\n","source":"_posts/PPA.md","raw":"---\ntitle: PPA_notes\ndate: 2019-11-03 08:34:48\ntags:\ncategories:\n- 2019\n- KCL\n- PPA\npassword: password\ntop:\n---\n\n## week5\n<!--more-->\n### PPT提纲\n1. wihle loop\n2. for-each\n3. #### searching:\n     loop condition: *index < files.size() && !found*\n4. 不要用input == \"bye\"比较两个string,一定要用只能用<p>input.equals(\"bye\")</p>\n5. Iterator与iterator():\n      iterator()是collection有的一个method,return一个Iterator类的object,这个object可以用这几个Iterator类里的method:**hasNext,next,remove**\n      格式:`Iterator<ElementType> it = myCollection.iterator()`\n6. Index vs Iterator:**remove**的时候用iterator,\n7. anonymous objects: ?啥玩意儿,不管了\n\n## week7 Chapter6\n### 研读课本\n  1. responsibility-driven design, cohesion, coupling, refactoring\n  2. intance method:invoked on an **intance** of a class, 注意class method和instance method不互通不能互相引用\n  3. enum(enumerated types):枚举\n          枚举类型可以像类(class)类型一样，定义为一个单独的文件，当然也可以定义在其他类内部\n### 预习PPT&提纲\n 1. 几个class:random\n 2. Set,Map\n      hashSet,hashMap\n 3. list,map和set的比较\n 4. wrapper classes\n     int 和 Interger\n 5. autoboxing and unboxing\n 6. static\n\n\n## 七\n### yi\n1. 为什么add（E e）返回的是boolean\n2. random的引用\n3. selecting random responses\n    - responses的arraylist是怎么产生的\n\n\n## 八 Week 8\n\n### 上课 ppt\n1.  cohesion:  each unit is responsible for one single logical task\n     unit: class, method\n     关于hashmap的疑问\n      - 是否要两个元素，前面的是key，后面的事value？\n     对于zuul： 每个class都有相应的作用。game类作为main与user和terminal交流，print东西，但是room就不能print东西。\n2. 2 important: coupling: loose coupling  : interface,change 1 do not need to change another.\n3. 周五上课\\-\\-\\-看的回放\\-\\-\\-\\-11.18\n     1.\n        - arraylist和hashmap等等里面不能有primitive types\n        - primitive types(int,boolean等等)不是object\n        - 引出wrapper class(Interger,Float...)\n        - primitive-type values wrap in objects to be stored in a **collection**\n        - autoboxing & unboxing\n        - [int和Integer的比较](https://blog.csdn.net/chenliguan/article/details/53888018 \"int和Integer\")\n        - [这个讲的更详细](https://blog.csdn.net/Teacher_Lee_ZZSXT/article/details/79230501 \"更详细的比较\")\n     2. class variables\n       - shared between all instances of the class.\n       - 属于class, 独立于instances\n       - 有keyword:**static**\n       - 用class的name在引用.前\n       - 与fields的区别?:field属于class的对象里??\n       - 用于:在一个class里不同的对象都需要用的变量\n     3. constant\n       - **final**\n       - 不能change\n       - 可以是public的\n       - static final : 经常的组合\n       - class constants:变量名大写\n       - 疑惑:final,constant和fields...static的关系\n       - static和final得关系\n       - 明确field,local variable...等等这些的关系\n       - constant 也可以不是final的,可以再更改它的值\n     4. class method\n       - static的方法都是class method\n       - 可直接调用\n       - 那存在的必要是什呢,跟其他的object method比\n             \\-\\-\\-不 depend于object\n       - limitations: instance method can call class method, but class method cannot call instance method and instance fields. 也就是说它只能用static fields,但object method 能用所有fields.\n\n     5. outside bluej\n      - public static void main(String[] arg)\n\n\n## 九 week9\n### Using java without bluej\n  1. 几个文件的后缀：java，class,txt..\n  2. Javac :终端命令，是java编译器的名称？\n  3. Javac 把.java变成.class\n  4. Emacs命令\n  5. java命令（后接类名无后缀）start JVM，开始执行程序\n  6.   the edit-compile-execute cycle：理解JVM\n    - Editor\\-\\-\\-source file\\-\\-\\-compiler(javac)\\-\\-\\-class file\\-\\-\\-virtual machine(java)\n  7. 每个system都有其JVM\n  8. main method应该做什么 \\-\\-\\-PPT里\n### Fixed-sized collections\n  1. Arrays的特性\n     - Fixed in length 他在讲什么memory之类的东西。。。\n     - Use a special syntax语法\n     - 它的对象没有methods，methods从其他class而来\n     - methods都是static的\n  2. -最大size可以？？\n  3. 与List的不同之处arrays可以store对象引用和基础数据类型疑问又来了，List为何不可\n  4. 例子project：weblog-analyzer\n  5. array的语法\n  6. mutator和accessor忘了\n  7. array更改element的原理\n  8. array literals\n  9. array length\n### 周五11.22的回看11.25\n  1. for-each loop: remove和add会导致error\n```java\nfor(String s : list){\n  if(s.startWith(\"t\")){\n    list.remove(s);\n    //如果remove,会skip\n  }\n}\n```\n  - 为何呢\n  - 用 for loop? \\-\\-\\-也不好\n  - 解决办法:**Iterator**(用while)\n  - Iterator用for的话,最后一个counter不需要\n  - [遍历list删除元素的总结](https://blog.csdn.net/github_2011/article/details/54927531 \"总结\")\n  2. 二维数组[][]\n    1. 例子:brain\n    - Environment里面的setup好奇怪\n    2. 处理图片就是处理二维数组\n\n## 十 week10\nfunctional processing of collections\n### 预习PPT提纲\n1. Lambdas\n  - code can be treated as data\n  - segments of code can be stored in variables,passed as para\n2. Method vs Lambdas\n\n\n2. Stream\n3. filter，map，reduce\n4. pipelines\n\n\n### 周五的recording\n\n\n\n## 疑惑与计划\n 1. auction project的源代码 看 \\-\\-\\-11.4早于lse\n\n\n## 代码分析\n### brain\n1. cells二维数组的初始化令人迷惑\n\n## 网址干货收藏\n1. [java基础博客](https://songlee24.github.io/2016/03/16/java-basic-note-1/ \"java基础知识\")\n2. [清华大学计算机系课程](https://github.com/PKUanonym/REKCARC-TSC-UHT \"清华大学课程\")\n3. [知乎人工智能入门](https://zhuanlan.zhihu.com/p/31650418?utm_source=wechat_timeline&utm_medium=social&utm_oi=898106614555504640&from=timeline&isappinstalled=0 \"知乎AI入门\")\n4. [要掌握的算法](https://www.zhihu.com/question/23148377/answer/863990767 \"要掌握的算法\")\n","slug":"PPA","published":1,"updated":"2019-11-03T00:34:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqkofx35000e5jwl8bfo254m","content":"<h2 id=\"week5\"><a href=\"#week5\" class=\"headerlink\" title=\"week5\"></a>week5</h2><span id=\"more\"></span>\n<h3 id=\"PPT提纲\"><a href=\"#PPT提纲\" class=\"headerlink\" title=\"PPT提纲\"></a>PPT提纲</h3><ol>\n<li>wihle loop</li>\n<li>for-each</li>\n<li><h4 id=\"searching\"><a href=\"#searching\" class=\"headerlink\" title=\"searching:\"></a>searching:</h4>  loop condition: <em>index &lt; files.size() &amp;&amp; !found</em></li>\n<li>不要用input == “bye”比较两个string,一定要用只能用<p>input.equals(“bye”)</p></li>\n<li>Iterator与iterator():<br>   iterator()是collection有的一个method,return一个Iterator类的object,这个object可以用这几个Iterator类里的method:<strong>hasNext,next,remove</strong><br>   格式:<code>Iterator&lt;ElementType&gt; it = myCollection.iterator()</code></li>\n<li>Index vs Iterator:<strong>remove</strong>的时候用iterator,</li>\n<li>anonymous objects: ?啥玩意儿,不管了</li>\n</ol>\n<h2 id=\"week7-Chapter6\"><a href=\"#week7-Chapter6\" class=\"headerlink\" title=\"week7 Chapter6\"></a>week7 Chapter6</h2><h3 id=\"研读课本\"><a href=\"#研读课本\" class=\"headerlink\" title=\"研读课本\"></a>研读课本</h3><ol>\n<li>responsibility-driven design, cohesion, coupling, refactoring</li>\n<li>intance method:invoked on an <strong>intance</strong> of a class, 注意class method和instance method不互通不能互相引用</li>\n<li>enum(enumerated types):枚举<pre><code> 枚举类型可以像类(class)类型一样，定义为一个单独的文件，当然也可以定义在其他类内部\n</code></pre>\n<h3 id=\"预习PPT-amp-提纲\"><a href=\"#预习PPT-amp-提纲\" class=\"headerlink\" title=\"预习PPT&amp;提纲\"></a>预习PPT&amp;提纲</h3></li>\n<li>几个class:random</li>\n<li>Set,Map<br>  hashSet,hashMap</li>\n<li>list,map和set的比较</li>\n<li>wrapper classes<br> int 和 Interger</li>\n<li>autoboxing and unboxing</li>\n<li>static</li>\n</ol>\n<h2 id=\"七\"><a href=\"#七\" class=\"headerlink\" title=\"七\"></a>七</h2><h3 id=\"yi\"><a href=\"#yi\" class=\"headerlink\" title=\"yi\"></a>yi</h3><ol>\n<li>为什么add（E e）返回的是boolean</li>\n<li>random的引用</li>\n<li>selecting random responses<ul>\n<li>responses的arraylist是怎么产生的</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"八-Week-8\"><a href=\"#八-Week-8\" class=\"headerlink\" title=\"八 Week 8\"></a>八 Week 8</h2><h3 id=\"上课-ppt\"><a href=\"#上课-ppt\" class=\"headerlink\" title=\"上课 ppt\"></a>上课 ppt</h3><ol>\n<li><p>cohesion:  each unit is responsible for one single logical task<br>  unit: class, method<br>  关于hashmap的疑问</p>\n<ul>\n<li>是否要两个元素，前面的是key，后面的事value？<br>对于zuul： 每个class都有相应的作用。game类作为main与user和terminal交流，print东西，但是room就不能print东西。</li>\n</ul>\n</li>\n<li><p>2 important: coupling: loose coupling  : interface,change 1 do not need to change another.</p>\n</li>\n<li><p>周五上课---看的回放----11.18<br>  1.</p>\n<pre><code> - arraylist和hashmap等等里面不能有primitive types\n - primitive types(int,boolean等等)不是object\n - 引出wrapper class(Interger,Float...)\n - primitive-type values wrap in objects to be stored in a **collection**\n - autoboxing &amp; unboxing\n - [int和Integer的比较](https://blog.csdn.net/chenliguan/article/details/53888018 &quot;int和Integer&quot;)\n - [这个讲的更详细](https://blog.csdn.net/Teacher_Lee_ZZSXT/article/details/79230501 &quot;更详细的比较&quot;)\n</code></pre>\n<ol start=\"2\">\n<li><p>class variables    - shared between all instances of the class.    - 属于class, 独立于instances    - 有keyword:<strong>static</strong>    - 用class的name在引用.前    - 与fields的区别?:field属于class的对象里??    - 用于:在一个class里不同的对象都需要用的变量</p>\n</li>\n<li><p>constant    - <strong>final</strong>    - 不能change    - 可以是public的    - static final : 经常的组合    - class constants:变量名大写    - 疑惑:final,constant和fields…static的关系    - static和final得关系    - 明确field,local variable…等等这些的关系    - constant 也可以不是final的,可以再更改它的值</p>\n</li>\n<li><p>class method    - static的方法都是class method    - 可直接调用    - 那存在的必要是什呢,跟其他的object method比</p>\n<pre><code> \\-\\-\\-不 depend于object    - limitations: instance method can call class method, but class method cannot call instance method and instance fields. 也就是说它只能用static fields,但object method 能用所有fields.\n</code></pre>\n</li>\n<li><p>outside bluej</p>\n</li>\n</ol>\n<ul>\n<li>public static void main(String[] arg)</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"九-week9\"><a href=\"#九-week9\" class=\"headerlink\" title=\"九 week9\"></a>九 week9</h2><h3 id=\"Using-java-without-bluej\"><a href=\"#Using-java-without-bluej\" class=\"headerlink\" title=\"Using java without bluej\"></a>Using java without bluej</h3><ol>\n<li>几个文件的后缀：java，class,txt..</li>\n<li>Javac :终端命令，是java编译器的名称？</li>\n<li>Javac 把.java变成.class</li>\n<li>Emacs命令</li>\n<li>java命令（后接类名无后缀）start JVM，开始执行程序</li>\n<li>  the edit-compile-execute cycle：理解JVM    - Editor---source file---compiler(javac)---class file---virtual machine(java)</li>\n<li>每个system都有其JVM</li>\n<li>main method应该做什么 ---PPT里<h3 id=\"Fixed-sized-collections\"><a href=\"#Fixed-sized-collections\" class=\"headerlink\" title=\"Fixed-sized collections\"></a>Fixed-sized collections</h3></li>\n<li>Arrays的特性<ul>\n<li>Fixed in length 他在讲什么memory之类的东西。。。</li>\n<li>Use a special syntax语法</li>\n<li>它的对象没有methods，methods从其他class而来</li>\n<li>methods都是static的</li>\n</ul>\n</li>\n<li>-最大size可以？？</li>\n<li>与List的不同之处arrays可以store对象引用和基础数据类型疑问又来了，List为何不可</li>\n<li>例子project：weblog-analyzer</li>\n<li>array的语法</li>\n<li>mutator和accessor忘了</li>\n<li>array更改element的原理</li>\n<li>array literals</li>\n<li>array length<h3 id=\"周五11-22的回看11-25\"><a href=\"#周五11-22的回看11-25\" class=\"headerlink\" title=\"周五11.22的回看11.25\"></a>周五11.22的回看11.25</h3></li>\n<li>for-each loop: remove和add会导致error<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(String s : list)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(s.startWith(<span class=\"string\">&quot;t&quot;</span>))&#123;</span><br><span class=\"line\">    list.remove(s);</span><br><span class=\"line\">    <span class=\"comment\">//如果remove,会skip</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>为何呢</li>\n<li>用 for loop? ---也不好</li>\n<li>解决办法:<strong>Iterator</strong>(用while)</li>\n<li>Iterator用for的话,最后一个counter不需要</li>\n<li><a href=\"https://blog.csdn.net/github_2011/article/details/54927531\" title=\"总结\">遍历list删除元素的总结</a></li>\n</ul>\n<ol start=\"2\">\n<li>二维数组[][]    1. 例子:brain    - Environment里面的setup好奇怪    2. 处理图片就是处理二维数组</li>\n</ol>\n<h2 id=\"十-week10\"><a href=\"#十-week10\" class=\"headerlink\" title=\"十 week10\"></a>十 week10</h2><p>functional processing of collections</p>\n<h3 id=\"预习PPT提纲\"><a href=\"#预习PPT提纲\" class=\"headerlink\" title=\"预习PPT提纲\"></a>预习PPT提纲</h3><ol>\n<li>Lambdas</li>\n</ol>\n<ul>\n<li>code can be treated as data</li>\n<li>segments of code can be stored in variables,passed as para</li>\n</ul>\n<ol start=\"2\">\n<li>Method vs Lambdas</li>\n</ol>\n<ol start=\"2\">\n<li>Stream</li>\n<li>filter，map，reduce</li>\n<li>pipelines</li>\n</ol>\n<h3 id=\"周五的recording\"><a href=\"#周五的recording\" class=\"headerlink\" title=\"周五的recording\"></a>周五的recording</h3><h2 id=\"疑惑与计划\"><a href=\"#疑惑与计划\" class=\"headerlink\" title=\"疑惑与计划\"></a>疑惑与计划</h2><ol>\n<li>auction project的源代码 看 ---11.4早于lse</li>\n</ol>\n<h2 id=\"代码分析\"><a href=\"#代码分析\" class=\"headerlink\" title=\"代码分析\"></a>代码分析</h2><h3 id=\"brain\"><a href=\"#brain\" class=\"headerlink\" title=\"brain\"></a>brain</h3><ol>\n<li>cells二维数组的初始化令人迷惑</li>\n</ol>\n<h2 id=\"网址干货收藏\"><a href=\"#网址干货收藏\" class=\"headerlink\" title=\"网址干货收藏\"></a>网址干货收藏</h2><ol>\n<li><a href=\"https://songlee24.github.io/2016/03/16/java-basic-note-1/\" title=\"java基础知识\">java基础博客</a></li>\n<li><a href=\"https://github.com/PKUanonym/REKCARC-TSC-UHT\" title=\"清华大学课程\">清华大学计算机系课程</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/31650418?utm_source=wechat_timeline&utm_medium=social&utm_oi=898106614555504640&from=timeline&isappinstalled=0\" title=\"知乎AI入门\">知乎人工智能入门</a></li>\n<li><a href=\"https://www.zhihu.com/question/23148377/answer/863990767\" title=\"要掌握的算法\">要掌握的算法</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"week5\"><a href=\"#week5\" class=\"headerlink\" title=\"week5\"></a>week5</h2>","more":"<h3 id=\"PPT提纲\"><a href=\"#PPT提纲\" class=\"headerlink\" title=\"PPT提纲\"></a>PPT提纲</h3><ol>\n<li>wihle loop</li>\n<li>for-each</li>\n<li><h4 id=\"searching\"><a href=\"#searching\" class=\"headerlink\" title=\"searching:\"></a>searching:</h4>  loop condition: <em>index &lt; files.size() &amp;&amp; !found</em></li>\n<li>不要用input == “bye”比较两个string,一定要用只能用<p>input.equals(“bye”)</p></li>\n<li>Iterator与iterator():<br>   iterator()是collection有的一个method,return一个Iterator类的object,这个object可以用这几个Iterator类里的method:<strong>hasNext,next,remove</strong><br>   格式:<code>Iterator&lt;ElementType&gt; it = myCollection.iterator()</code></li>\n<li>Index vs Iterator:<strong>remove</strong>的时候用iterator,</li>\n<li>anonymous objects: ?啥玩意儿,不管了</li>\n</ol>\n<h2 id=\"week7-Chapter6\"><a href=\"#week7-Chapter6\" class=\"headerlink\" title=\"week7 Chapter6\"></a>week7 Chapter6</h2><h3 id=\"研读课本\"><a href=\"#研读课本\" class=\"headerlink\" title=\"研读课本\"></a>研读课本</h3><ol>\n<li>responsibility-driven design, cohesion, coupling, refactoring</li>\n<li>intance method:invoked on an <strong>intance</strong> of a class, 注意class method和instance method不互通不能互相引用</li>\n<li>enum(enumerated types):枚举<pre><code> 枚举类型可以像类(class)类型一样，定义为一个单独的文件，当然也可以定义在其他类内部\n</code></pre>\n<h3 id=\"预习PPT-amp-提纲\"><a href=\"#预习PPT-amp-提纲\" class=\"headerlink\" title=\"预习PPT&amp;提纲\"></a>预习PPT&amp;提纲</h3></li>\n<li>几个class:random</li>\n<li>Set,Map<br>  hashSet,hashMap</li>\n<li>list,map和set的比较</li>\n<li>wrapper classes<br> int 和 Interger</li>\n<li>autoboxing and unboxing</li>\n<li>static</li>\n</ol>\n<h2 id=\"七\"><a href=\"#七\" class=\"headerlink\" title=\"七\"></a>七</h2><h3 id=\"yi\"><a href=\"#yi\" class=\"headerlink\" title=\"yi\"></a>yi</h3><ol>\n<li>为什么add（E e）返回的是boolean</li>\n<li>random的引用</li>\n<li>selecting random responses<ul>\n<li>responses的arraylist是怎么产生的</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"八-Week-8\"><a href=\"#八-Week-8\" class=\"headerlink\" title=\"八 Week 8\"></a>八 Week 8</h2><h3 id=\"上课-ppt\"><a href=\"#上课-ppt\" class=\"headerlink\" title=\"上课 ppt\"></a>上课 ppt</h3><ol>\n<li><p>cohesion:  each unit is responsible for one single logical task<br>  unit: class, method<br>  关于hashmap的疑问</p>\n<ul>\n<li>是否要两个元素，前面的是key，后面的事value？<br>对于zuul： 每个class都有相应的作用。game类作为main与user和terminal交流，print东西，但是room就不能print东西。</li>\n</ul>\n</li>\n<li><p>2 important: coupling: loose coupling  : interface,change 1 do not need to change another.</p>\n</li>\n<li><p>周五上课---看的回放----11.18<br>  1.</p>\n<pre><code> - arraylist和hashmap等等里面不能有primitive types\n - primitive types(int,boolean等等)不是object\n - 引出wrapper class(Interger,Float...)\n - primitive-type values wrap in objects to be stored in a **collection**\n - autoboxing &amp; unboxing\n - [int和Integer的比较](https://blog.csdn.net/chenliguan/article/details/53888018 &quot;int和Integer&quot;)\n - [这个讲的更详细](https://blog.csdn.net/Teacher_Lee_ZZSXT/article/details/79230501 &quot;更详细的比较&quot;)\n</code></pre>\n<ol start=\"2\">\n<li><p>class variables    - shared between all instances of the class.    - 属于class, 独立于instances    - 有keyword:<strong>static</strong>    - 用class的name在引用.前    - 与fields的区别?:field属于class的对象里??    - 用于:在一个class里不同的对象都需要用的变量</p>\n</li>\n<li><p>constant    - <strong>final</strong>    - 不能change    - 可以是public的    - static final : 经常的组合    - class constants:变量名大写    - 疑惑:final,constant和fields…static的关系    - static和final得关系    - 明确field,local variable…等等这些的关系    - constant 也可以不是final的,可以再更改它的值</p>\n</li>\n<li><p>class method    - static的方法都是class method    - 可直接调用    - 那存在的必要是什呢,跟其他的object method比</p>\n<pre><code> \\-\\-\\-不 depend于object    - limitations: instance method can call class method, but class method cannot call instance method and instance fields. 也就是说它只能用static fields,但object method 能用所有fields.\n</code></pre>\n</li>\n<li><p>outside bluej</p>\n</li>\n</ol>\n<ul>\n<li>public static void main(String[] arg)</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"九-week9\"><a href=\"#九-week9\" class=\"headerlink\" title=\"九 week9\"></a>九 week9</h2><h3 id=\"Using-java-without-bluej\"><a href=\"#Using-java-without-bluej\" class=\"headerlink\" title=\"Using java without bluej\"></a>Using java without bluej</h3><ol>\n<li>几个文件的后缀：java，class,txt..</li>\n<li>Javac :终端命令，是java编译器的名称？</li>\n<li>Javac 把.java变成.class</li>\n<li>Emacs命令</li>\n<li>java命令（后接类名无后缀）start JVM，开始执行程序</li>\n<li>  the edit-compile-execute cycle：理解JVM    - Editor---source file---compiler(javac)---class file---virtual machine(java)</li>\n<li>每个system都有其JVM</li>\n<li>main method应该做什么 ---PPT里<h3 id=\"Fixed-sized-collections\"><a href=\"#Fixed-sized-collections\" class=\"headerlink\" title=\"Fixed-sized collections\"></a>Fixed-sized collections</h3></li>\n<li>Arrays的特性<ul>\n<li>Fixed in length 他在讲什么memory之类的东西。。。</li>\n<li>Use a special syntax语法</li>\n<li>它的对象没有methods，methods从其他class而来</li>\n<li>methods都是static的</li>\n</ul>\n</li>\n<li>-最大size可以？？</li>\n<li>与List的不同之处arrays可以store对象引用和基础数据类型疑问又来了，List为何不可</li>\n<li>例子project：weblog-analyzer</li>\n<li>array的语法</li>\n<li>mutator和accessor忘了</li>\n<li>array更改element的原理</li>\n<li>array literals</li>\n<li>array length<h3 id=\"周五11-22的回看11-25\"><a href=\"#周五11-22的回看11-25\" class=\"headerlink\" title=\"周五11.22的回看11.25\"></a>周五11.22的回看11.25</h3></li>\n<li>for-each loop: remove和add会导致error<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(String s : list)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(s.startWith(<span class=\"string\">&quot;t&quot;</span>))&#123;</span><br><span class=\"line\">    list.remove(s);</span><br><span class=\"line\">    <span class=\"comment\">//如果remove,会skip</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>为何呢</li>\n<li>用 for loop? ---也不好</li>\n<li>解决办法:<strong>Iterator</strong>(用while)</li>\n<li>Iterator用for的话,最后一个counter不需要</li>\n<li><a href=\"https://blog.csdn.net/github_2011/article/details/54927531\" title=\"总结\">遍历list删除元素的总结</a></li>\n</ul>\n<ol start=\"2\">\n<li>二维数组[][]    1. 例子:brain    - Environment里面的setup好奇怪    2. 处理图片就是处理二维数组</li>\n</ol>\n<h2 id=\"十-week10\"><a href=\"#十-week10\" class=\"headerlink\" title=\"十 week10\"></a>十 week10</h2><p>functional processing of collections</p>\n<h3 id=\"预习PPT提纲\"><a href=\"#预习PPT提纲\" class=\"headerlink\" title=\"预习PPT提纲\"></a>预习PPT提纲</h3><ol>\n<li>Lambdas</li>\n</ol>\n<ul>\n<li>code can be treated as data</li>\n<li>segments of code can be stored in variables,passed as para</li>\n</ul>\n<ol start=\"2\">\n<li>Method vs Lambdas</li>\n</ol>\n<ol start=\"2\">\n<li>Stream</li>\n<li>filter，map，reduce</li>\n<li>pipelines</li>\n</ol>\n<h3 id=\"周五的recording\"><a href=\"#周五的recording\" class=\"headerlink\" title=\"周五的recording\"></a>周五的recording</h3><h2 id=\"疑惑与计划\"><a href=\"#疑惑与计划\" class=\"headerlink\" title=\"疑惑与计划\"></a>疑惑与计划</h2><ol>\n<li>auction project的源代码 看 ---11.4早于lse</li>\n</ol>\n<h2 id=\"代码分析\"><a href=\"#代码分析\" class=\"headerlink\" title=\"代码分析\"></a>代码分析</h2><h3 id=\"brain\"><a href=\"#brain\" class=\"headerlink\" title=\"brain\"></a>brain</h3><ol>\n<li>cells二维数组的初始化令人迷惑</li>\n</ol>\n<h2 id=\"网址干货收藏\"><a href=\"#网址干货收藏\" class=\"headerlink\" title=\"网址干货收藏\"></a>网址干货收藏</h2><ol>\n<li><a href=\"https://songlee24.github.io/2016/03/16/java-basic-note-1/\" title=\"java基础知识\">java基础博客</a></li>\n<li><a href=\"https://github.com/PKUanonym/REKCARC-TSC-UHT\" title=\"清华大学课程\">清华大学计算机系课程</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/31650418?utm_source=wechat_timeline&utm_medium=social&utm_oi=898106614555504640&from=timeline&isappinstalled=0\" title=\"知乎AI入门\">知乎人工智能入门</a></li>\n<li><a href=\"https://www.zhihu.com/question/23148377/answer/863990767\" title=\"要掌握的算法\">要掌握的算法</a></li>\n</ol>"},{"title":"每日总结","date":"2019-11-25T08:44:57.000Z","password":"password","top":null,"_content":"\n\n一切随缘好了,开心和积极向上是最重要的\n<!--more-->\n# 11.25 周一 week10\n## 吃了什么\n\n- 0.1:无\n- 0.2:两个cheese roll,一袋李子\n- 0.3:一个鸡蛋,半杯麦片,圣女果一袋\n-------------------\n## 今天的运动\n没有...除了去Sainsbury...\n-----------\n## 今天的支出和收入\n- 支出: 4.9\n- 收入: 0\n- -------------\n## 今天的学习内容总结\n- 1.1: 把cmte本周的所有任务完成了\n- 1.2: ppa做了很多,好的开展\n- 1.3:\n- 1.4:\n--------------\n## 所以收获了什么呢\n- 2.1: 收获了快乐??还算不错\n- 2.2:\n- 2.3:\n- 2.3:\n------------------\n## 遗留的疑问是?\n- 3.1:\n- 3.2:\n- 3.3:\n- 3.4:\n----------------\n## 明天的计划是什么呢 周二\n- 4.1: 12点起床洗澡,用黄盒子带圣女果\n- 4.2: 回看和作业 CS的\n- 4.3: 看电影和吃东西 :给我把握好\n- 4.4: ppa report要开始写了!\n- 4.5: 看电影完适当购物: 腌莴笋的用品!!!\n- 4.6: 睡前看PPA的回放\n- 4.7:cscscs!!!\n---------------\n## 心情好吗,有激情吗?\n- 按照1\\-\\-\\-10打分\n- 7 没有食欲,学习欲望一般 \\-\\-\\-17:18\n- 7 睡前\n\n\n------------------------------------\n# 近期待办的事务\n- 5.1: 黑五买两件大衣!\n- 5.2:\n- 5.3:\n------------------------------------\n\n# Temple 周  week\n## 吃了什么\n- 0.1:\n- 0.2:\n- 0.3:\n-------------------\n## 今天的运动\n\n-----------\n## 今天的支出和收入\n- 支出:\n- 收入:\n- -------------\n## 今天的学习内容总结\n- 1.1:\n- 1.2:\n- 1.3:\n- 1.4:\n---------\n\n## 所以收获了什么呢\n- 2.1:\n- 2.2:\n- 2.3:\n- 2.3:\n-------------\n## 遗留的疑问是?\n- 3.1:\n- 3.2:\n- 3.3:\n- 3.4:\n-----------\n## 明天的计划是什么呢\n- 4.1:\n- 4.2:\n- 4.3:\n- 4.4:\n-------------\n## 心情好吗,有激情吗?\n- 按照1\\-\\-\\-10打分","source":"_posts/每日总结.md","raw":"---\ntitle: 每日总结\ndate: 2019-11-25 16:44:57\ntags:\ncategories: \n- 2019\n- life\n- everynight\n\npassword: password\ntop:\n---\n\n\n一切随缘好了,开心和积极向上是最重要的\n<!--more-->\n# 11.25 周一 week10\n## 吃了什么\n\n- 0.1:无\n- 0.2:两个cheese roll,一袋李子\n- 0.3:一个鸡蛋,半杯麦片,圣女果一袋\n-------------------\n## 今天的运动\n没有...除了去Sainsbury...\n-----------\n## 今天的支出和收入\n- 支出: 4.9\n- 收入: 0\n- -------------\n## 今天的学习内容总结\n- 1.1: 把cmte本周的所有任务完成了\n- 1.2: ppa做了很多,好的开展\n- 1.3:\n- 1.4:\n--------------\n## 所以收获了什么呢\n- 2.1: 收获了快乐??还算不错\n- 2.2:\n- 2.3:\n- 2.3:\n------------------\n## 遗留的疑问是?\n- 3.1:\n- 3.2:\n- 3.3:\n- 3.4:\n----------------\n## 明天的计划是什么呢 周二\n- 4.1: 12点起床洗澡,用黄盒子带圣女果\n- 4.2: 回看和作业 CS的\n- 4.3: 看电影和吃东西 :给我把握好\n- 4.4: ppa report要开始写了!\n- 4.5: 看电影完适当购物: 腌莴笋的用品!!!\n- 4.6: 睡前看PPA的回放\n- 4.7:cscscs!!!\n---------------\n## 心情好吗,有激情吗?\n- 按照1\\-\\-\\-10打分\n- 7 没有食欲,学习欲望一般 \\-\\-\\-17:18\n- 7 睡前\n\n\n------------------------------------\n# 近期待办的事务\n- 5.1: 黑五买两件大衣!\n- 5.2:\n- 5.3:\n------------------------------------\n\n# Temple 周  week\n## 吃了什么\n- 0.1:\n- 0.2:\n- 0.3:\n-------------------\n## 今天的运动\n\n-----------\n## 今天的支出和收入\n- 支出:\n- 收入:\n- -------------\n## 今天的学习内容总结\n- 1.1:\n- 1.2:\n- 1.3:\n- 1.4:\n---------\n\n## 所以收获了什么呢\n- 2.1:\n- 2.2:\n- 2.3:\n- 2.3:\n-------------\n## 遗留的疑问是?\n- 3.1:\n- 3.2:\n- 3.3:\n- 3.4:\n-----------\n## 明天的计划是什么呢\n- 4.1:\n- 4.2:\n- 4.3:\n- 4.4:\n-------------\n## 心情好吗,有激情吗?\n- 按照1\\-\\-\\-10打分","slug":"每日总结","published":1,"updated":"2019-11-25T08:44:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckqkofx36000h5jwl9ifw4ka8","content":"<p>一切随缘好了,开心和积极向上是最重要的</p>\n<span id=\"more\"></span>\n<h1 id=\"11-25-周一-week10\"><a href=\"#11-25-周一-week10\" class=\"headerlink\" title=\"11.25 周一 week10\"></a>11.25 周一 week10</h1><h2 id=\"吃了什么\"><a href=\"#吃了什么\" class=\"headerlink\" title=\"吃了什么\"></a>吃了什么</h2><ul>\n<li>0.1:无</li>\n<li>0.2:两个cheese roll,一袋李子</li>\n<li>0.3:一个鸡蛋,半杯麦片,圣女果一袋</li>\n</ul>\n<hr>\n<h2 id=\"今天的运动\"><a href=\"#今天的运动\" class=\"headerlink\" title=\"今天的运动\"></a>今天的运动</h2><h2 id=\"没有…除了去Sainsbury…\"><a href=\"#没有…除了去Sainsbury…\" class=\"headerlink\" title=\"没有…除了去Sainsbury…\"></a>没有…除了去Sainsbury…</h2><h2 id=\"今天的支出和收入\"><a href=\"#今天的支出和收入\" class=\"headerlink\" title=\"今天的支出和收入\"></a>今天的支出和收入</h2><ul>\n<li>支出: 4.9</li>\n<li>收入: 0</li>\n</ul>\n<hr>\n<h2 id=\"今天的学习内容总结\"><a href=\"#今天的学习内容总结\" class=\"headerlink\" title=\"今天的学习内容总结\"></a>今天的学习内容总结</h2><ul>\n<li>1.1: 把cmte本周的所有任务完成了</li>\n<li>1.2: ppa做了很多,好的开展</li>\n<li>1.3:</li>\n<li>1.4:</li>\n</ul>\n<hr>\n<h2 id=\"所以收获了什么呢\"><a href=\"#所以收获了什么呢\" class=\"headerlink\" title=\"所以收获了什么呢\"></a>所以收获了什么呢</h2><ul>\n<li>2.1: 收获了快乐??还算不错</li>\n<li>2.2:</li>\n<li>2.3:</li>\n<li>2.3:</li>\n</ul>\n<hr>\n<h2 id=\"遗留的疑问是\"><a href=\"#遗留的疑问是\" class=\"headerlink\" title=\"遗留的疑问是?\"></a>遗留的疑问是?</h2><ul>\n<li>3.1:</li>\n<li>3.2:</li>\n<li>3.3:</li>\n<li>3.4:</li>\n</ul>\n<hr>\n<h2 id=\"明天的计划是什么呢-周二\"><a href=\"#明天的计划是什么呢-周二\" class=\"headerlink\" title=\"明天的计划是什么呢 周二\"></a>明天的计划是什么呢 周二</h2><ul>\n<li>4.1: 12点起床洗澡,用黄盒子带圣女果</li>\n<li>4.2: 回看和作业 CS的</li>\n<li>4.3: 看电影和吃东西 :给我把握好</li>\n<li>4.4: ppa report要开始写了!</li>\n<li>4.5: 看电影完适当购物: 腌莴笋的用品!!!</li>\n<li>4.6: 睡前看PPA的回放</li>\n<li>4.7:cscscs!!!</li>\n</ul>\n<hr>\n<h2 id=\"心情好吗-有激情吗\"><a href=\"#心情好吗-有激情吗\" class=\"headerlink\" title=\"心情好吗,有激情吗?\"></a>心情好吗,有激情吗?</h2><ul>\n<li>按照1---10打分</li>\n<li>7 没有食欲,学习欲望一般 ---17:18</li>\n<li>7 睡前</li>\n</ul>\n<hr>\n<h1 id=\"近期待办的事务\"><a href=\"#近期待办的事务\" class=\"headerlink\" title=\"近期待办的事务\"></a>近期待办的事务</h1><ul>\n<li>5.1: 黑五买两件大衣!</li>\n<li>5.2:</li>\n<li>5.3:</li>\n</ul>\n<hr>\n<h1 id=\"Temple-周-week\"><a href=\"#Temple-周-week\" class=\"headerlink\" title=\"Temple 周  week\"></a>Temple 周  week</h1><h2 id=\"吃了什么-1\"><a href=\"#吃了什么-1\" class=\"headerlink\" title=\"吃了什么\"></a>吃了什么</h2><ul>\n<li>0.1:</li>\n<li>0.2:</li>\n<li>0.3:</li>\n</ul>\n<hr>\n<h2 id=\"今天的运动-1\"><a href=\"#今天的运动-1\" class=\"headerlink\" title=\"今天的运动\"></a>今天的运动</h2><hr>\n<h2 id=\"今天的支出和收入-1\"><a href=\"#今天的支出和收入-1\" class=\"headerlink\" title=\"今天的支出和收入\"></a>今天的支出和收入</h2><ul>\n<li>支出:</li>\n<li>收入:</li>\n</ul>\n<hr>\n<h2 id=\"今天的学习内容总结-1\"><a href=\"#今天的学习内容总结-1\" class=\"headerlink\" title=\"今天的学习内容总结\"></a>今天的学习内容总结</h2><ul>\n<li>1.1:</li>\n<li>1.2:</li>\n<li>1.3:</li>\n<li>1.4:</li>\n</ul>\n<hr>\n<h2 id=\"所以收获了什么呢-1\"><a href=\"#所以收获了什么呢-1\" class=\"headerlink\" title=\"所以收获了什么呢\"></a>所以收获了什么呢</h2><ul>\n<li>2.1:</li>\n<li>2.2:</li>\n<li>2.3:</li>\n<li>2.3:</li>\n</ul>\n<hr>\n<h2 id=\"遗留的疑问是-1\"><a href=\"#遗留的疑问是-1\" class=\"headerlink\" title=\"遗留的疑问是?\"></a>遗留的疑问是?</h2><ul>\n<li>3.1:</li>\n<li>3.2:</li>\n<li>3.3:</li>\n<li>3.4:</li>\n</ul>\n<hr>\n<h2 id=\"明天的计划是什么呢\"><a href=\"#明天的计划是什么呢\" class=\"headerlink\" title=\"明天的计划是什么呢\"></a>明天的计划是什么呢</h2><ul>\n<li>4.1:</li>\n<li>4.2:</li>\n<li>4.3:</li>\n<li>4.4:</li>\n</ul>\n<hr>\n<h2 id=\"心情好吗-有激情吗-1\"><a href=\"#心情好吗-有激情吗-1\" class=\"headerlink\" title=\"心情好吗,有激情吗?\"></a>心情好吗,有激情吗?</h2><ul>\n<li>按照1---10打分</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>一切随缘好了,开心和积极向上是最重要的</p>","more":"<h1 id=\"11-25-周一-week10\"><a href=\"#11-25-周一-week10\" class=\"headerlink\" title=\"11.25 周一 week10\"></a>11.25 周一 week10</h1><h2 id=\"吃了什么\"><a href=\"#吃了什么\" class=\"headerlink\" title=\"吃了什么\"></a>吃了什么</h2><ul>\n<li>0.1:无</li>\n<li>0.2:两个cheese roll,一袋李子</li>\n<li>0.3:一个鸡蛋,半杯麦片,圣女果一袋</li>\n</ul>\n<hr>\n<h2 id=\"今天的运动\"><a href=\"#今天的运动\" class=\"headerlink\" title=\"今天的运动\"></a>今天的运动</h2><h2 id=\"没有…除了去Sainsbury…\"><a href=\"#没有…除了去Sainsbury…\" class=\"headerlink\" title=\"没有…除了去Sainsbury…\"></a>没有…除了去Sainsbury…</h2><h2 id=\"今天的支出和收入\"><a href=\"#今天的支出和收入\" class=\"headerlink\" title=\"今天的支出和收入\"></a>今天的支出和收入</h2><ul>\n<li>支出: 4.9</li>\n<li>收入: 0</li>\n</ul>\n<hr>\n<h2 id=\"今天的学习内容总结\"><a href=\"#今天的学习内容总结\" class=\"headerlink\" title=\"今天的学习内容总结\"></a>今天的学习内容总结</h2><ul>\n<li>1.1: 把cmte本周的所有任务完成了</li>\n<li>1.2: ppa做了很多,好的开展</li>\n<li>1.3:</li>\n<li>1.4:</li>\n</ul>\n<hr>\n<h2 id=\"所以收获了什么呢\"><a href=\"#所以收获了什么呢\" class=\"headerlink\" title=\"所以收获了什么呢\"></a>所以收获了什么呢</h2><ul>\n<li>2.1: 收获了快乐??还算不错</li>\n<li>2.2:</li>\n<li>2.3:</li>\n<li>2.3:</li>\n</ul>\n<hr>\n<h2 id=\"遗留的疑问是\"><a href=\"#遗留的疑问是\" class=\"headerlink\" title=\"遗留的疑问是?\"></a>遗留的疑问是?</h2><ul>\n<li>3.1:</li>\n<li>3.2:</li>\n<li>3.3:</li>\n<li>3.4:</li>\n</ul>\n<hr>\n<h2 id=\"明天的计划是什么呢-周二\"><a href=\"#明天的计划是什么呢-周二\" class=\"headerlink\" title=\"明天的计划是什么呢 周二\"></a>明天的计划是什么呢 周二</h2><ul>\n<li>4.1: 12点起床洗澡,用黄盒子带圣女果</li>\n<li>4.2: 回看和作业 CS的</li>\n<li>4.3: 看电影和吃东西 :给我把握好</li>\n<li>4.4: ppa report要开始写了!</li>\n<li>4.5: 看电影完适当购物: 腌莴笋的用品!!!</li>\n<li>4.6: 睡前看PPA的回放</li>\n<li>4.7:cscscs!!!</li>\n</ul>\n<hr>\n<h2 id=\"心情好吗-有激情吗\"><a href=\"#心情好吗-有激情吗\" class=\"headerlink\" title=\"心情好吗,有激情吗?\"></a>心情好吗,有激情吗?</h2><ul>\n<li>按照1---10打分</li>\n<li>7 没有食欲,学习欲望一般 ---17:18</li>\n<li>7 睡前</li>\n</ul>\n<hr>\n<h1 id=\"近期待办的事务\"><a href=\"#近期待办的事务\" class=\"headerlink\" title=\"近期待办的事务\"></a>近期待办的事务</h1><ul>\n<li>5.1: 黑五买两件大衣!</li>\n<li>5.2:</li>\n<li>5.3:</li>\n</ul>\n<hr>\n<h1 id=\"Temple-周-week\"><a href=\"#Temple-周-week\" class=\"headerlink\" title=\"Temple 周  week\"></a>Temple 周  week</h1><h2 id=\"吃了什么-1\"><a href=\"#吃了什么-1\" class=\"headerlink\" title=\"吃了什么\"></a>吃了什么</h2><ul>\n<li>0.1:</li>\n<li>0.2:</li>\n<li>0.3:</li>\n</ul>\n<hr>\n<h2 id=\"今天的运动-1\"><a href=\"#今天的运动-1\" class=\"headerlink\" title=\"今天的运动\"></a>今天的运动</h2><hr>\n<h2 id=\"今天的支出和收入-1\"><a href=\"#今天的支出和收入-1\" class=\"headerlink\" title=\"今天的支出和收入\"></a>今天的支出和收入</h2><ul>\n<li>支出:</li>\n<li>收入:</li>\n</ul>\n<hr>\n<h2 id=\"今天的学习内容总结-1\"><a href=\"#今天的学习内容总结-1\" class=\"headerlink\" title=\"今天的学习内容总结\"></a>今天的学习内容总结</h2><ul>\n<li>1.1:</li>\n<li>1.2:</li>\n<li>1.3:</li>\n<li>1.4:</li>\n</ul>\n<hr>\n<h2 id=\"所以收获了什么呢-1\"><a href=\"#所以收获了什么呢-1\" class=\"headerlink\" title=\"所以收获了什么呢\"></a>所以收获了什么呢</h2><ul>\n<li>2.1:</li>\n<li>2.2:</li>\n<li>2.3:</li>\n<li>2.3:</li>\n</ul>\n<hr>\n<h2 id=\"遗留的疑问是-1\"><a href=\"#遗留的疑问是-1\" class=\"headerlink\" title=\"遗留的疑问是?\"></a>遗留的疑问是?</h2><ul>\n<li>3.1:</li>\n<li>3.2:</li>\n<li>3.3:</li>\n<li>3.4:</li>\n</ul>\n<hr>\n<h2 id=\"明天的计划是什么呢\"><a href=\"#明天的计划是什么呢\" class=\"headerlink\" title=\"明天的计划是什么呢\"></a>明天的计划是什么呢</h2><ul>\n<li>4.1:</li>\n<li>4.2:</li>\n<li>4.3:</li>\n<li>4.4:</li>\n</ul>\n<hr>\n<h2 id=\"心情好吗-有激情吗-1\"><a href=\"#心情好吗-有激情吗-1\" class=\"headerlink\" title=\"心情好吗,有激情吗?\"></a>心情好吗,有激情吗?</h2><ul>\n<li>按照1---10打分</li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckqkofx2z00085jwl09n52xzt","category_id":"ckqkofx2s00045jwlenrk8cpl","_id":"ckqkofx3d000y5jwl11xb1pma"},{"post_id":"ckqkofx2z00085jwl09n52xzt","category_id":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3d00105jwl89zwfkb5"},{"post_id":"ckqkofx2z00085jwl09n52xzt","category_id":"ckqkofx3c000w5jwlfayedr88","_id":"ckqkofx3d00115jwl6g2vcf95"},{"post_id":"ckqkofx2m00015jwl8bay0zv2","category_id":"ckqkofx2s00045jwlenrk8cpl","_id":"ckqkofx3e00135jwl3id791a6"},{"post_id":"ckqkofx2m00015jwl8bay0zv2","category_id":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3e00145jwl34suc7rd"},{"post_id":"ckqkofx2m00015jwl8bay0zv2","category_id":"ckqkofx3c000x5jwl2xzqdz15","_id":"ckqkofx3e00165jwl8wwq0swk"},{"post_id":"ckqkofx3000095jwl7dtcf25c","category_id":"ckqkofx2s00045jwlenrk8cpl","_id":"ckqkofx3e00175jwlf5dca8ch"},{"post_id":"ckqkofx3000095jwl7dtcf25c","category_id":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3f00195jwlehpc7zwz"},{"post_id":"ckqkofx3000095jwl7dtcf25c","category_id":"ckqkofx3d000z5jwl90eubpyi","_id":"ckqkofx3f001a5jwl75wzaaaf"},{"post_id":"ckqkofx33000d5jwl9csa5q1a","category_id":"ckqkofx2s00045jwlenrk8cpl","_id":"ckqkofx3f001b5jwl4w9n0mf7"},{"post_id":"ckqkofx33000d5jwl9csa5q1a","category_id":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3g001d5jwl2gew41v9"},{"post_id":"ckqkofx33000d5jwl9csa5q1a","category_id":"ckqkofx3d00125jwl6pnmhuy9","_id":"ckqkofx3g001e5jwl8namghio"},{"post_id":"ckqkofx2q00035jwlewjpgbj2","category_id":"ckqkofx2s00045jwlenrk8cpl","_id":"ckqkofx3h001g5jwldr79dy42"},{"post_id":"ckqkofx2q00035jwlewjpgbj2","category_id":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3h001h5jwlfpx0emv5"},{"post_id":"ckqkofx2q00035jwlewjpgbj2","category_id":"ckqkofx3e00155jwl663eczjw","_id":"ckqkofx3h001i5jwl8mwf2hx2"},{"post_id":"ckqkofx35000e5jwl8bfo254m","category_id":"ckqkofx2s00045jwlenrk8cpl","_id":"ckqkofx3h001j5jwlh54jei4h"},{"post_id":"ckqkofx35000e5jwl8bfo254m","category_id":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3h001k5jwleq79f92i"},{"post_id":"ckqkofx35000e5jwl8bfo254m","category_id":"ckqkofx3e00185jwlf91n04qt","_id":"ckqkofx3h001l5jwlamu8f9y4"},{"post_id":"ckqkofx36000h5jwl9ifw4ka8","category_id":"ckqkofx2s00045jwlenrk8cpl","_id":"ckqkofx3h001m5jwl8k61ez1u"},{"post_id":"ckqkofx36000h5jwl9ifw4ka8","category_id":"ckqkofx3b000u5jwl9uz0hmha","_id":"ckqkofx3h001n5jwlcun0esys"},{"post_id":"ckqkofx36000h5jwl9ifw4ka8","category_id":"ckqkofx3f001c5jwlcix085v5","_id":"ckqkofx3h001o5jwl3f3a6uvj"},{"post_id":"ckqkofx2y00075jwl1rus55t3","category_id":"ckqkofx2s00045jwlenrk8cpl","_id":"ckqkofx3h001p5jwl5l2u80qx"},{"post_id":"ckqkofx2y00075jwl1rus55t3","category_id":"ckqkofx37000j5jwl6lhja8ij","_id":"ckqkofx3i001q5jwlasf9ckth"},{"post_id":"ckqkofx2y00075jwl1rus55t3","category_id":"ckqkofx3d000z5jwl90eubpyi","_id":"ckqkofx3i001r5jwl8h4qhyxh"}],"PostTag":[{"post_id":"ckqkofx2m00015jwl8bay0zv2","tag_id":"ckqkofx2t00055jwlboen8yyr","_id":"ckqkofx33000c5jwlc6ntaxbi"},{"post_id":"ckqkofx2q00035jwlewjpgbj2","tag_id":"ckqkofx31000b5jwl18ii4rvf","_id":"ckqkofx37000i5jwlagoo71wq"},{"post_id":"ckqkofx2y00075jwl1rus55t3","tag_id":"ckqkofx36000g5jwlgznx2x1w","_id":"ckqkofx38000l5jwlbosh0xqb"},{"post_id":"ckqkofx3000095jwl7dtcf25c","tag_id":"ckqkofx36000g5jwlgznx2x1w","_id":"ckqkofx39000o5jwl0tx10cfw"},{"post_id":"ckqkofx33000d5jwl9csa5q1a","tag_id":"ckqkofx39000n5jwlbrlpb2og","_id":"ckqkofx3a000q5jwldo1s8j99"}],"Tag":[{"name":"单片机","_id":"ckqkofx2t00055jwlboen8yyr"},{"name":"空间向量","_id":"ckqkofx31000b5jwl18ii4rvf"},{"name":"CS","_id":"ckqkofx36000g5jwlgznx2x1w"},{"name":"MatLab","_id":"ckqkofx39000n5jwlbrlpb2og"}]}}